//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReckoningCounter.DAL.MatchCenterService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockOrderEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class StockOrderEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesMarketPriceType IsMarketPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SholderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelNo {
            get {
                return this.ChannelNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNoField, value) != true)) {
                    this.ChannelNoField = value;
                    this.RaisePropertyChanged("ChannelNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesMarketPriceType IsMarketPrice {
            get {
                return this.IsMarketPriceField;
            }
            set {
                if ((this.IsMarketPriceField.Equals(value) != true)) {
                    this.IsMarketPriceField = value;
                    this.RaisePropertyChanged("IsMarketPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderVolume {
            get {
                return this.OrderVolumeField;
            }
            set {
                if ((this.OrderVolumeField.Equals(value) != true)) {
                    this.OrderVolumeField = value;
                    this.RaisePropertyChanged("OrderVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SholderCode {
            get {
                return this.SholderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SholderCodeField, value) != true)) {
                    this.SholderCodeField = value;
                    this.RaisePropertyChanged("SholderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockCode {
            get {
                return this.StockCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StockCodeField, value) != true)) {
                    this.StockCodeField = value;
                    this.RaisePropertyChanged("StockCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirection {
            get {
                return this.TransactionDirectionField;
            }
            set {
                if ((this.TransactionDirectionField.Equals(value) != true)) {
                    this.TransactionDirectionField = value;
                    this.RaisePropertyChanged("TransactionDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.MarketPriceType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesMarketPriceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarketPrice = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        otherPrice = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.TransactionDirection", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesTransactionDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buying = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selling = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultDataEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class ResultDataEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNoField, value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FutureOrderEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class FutureOrderEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.CHDirection DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesMarketPriceType IsMarketPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SholderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelNo {
            get {
                return this.ChannelNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNoField, value) != true)) {
                    this.ChannelNoField = value;
                    this.RaisePropertyChanged("ChannelNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.CHDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesMarketPriceType IsMarketPrice {
            get {
                return this.IsMarketPriceField;
            }
            set {
                if ((this.IsMarketPriceField.Equals(value) != true)) {
                    this.IsMarketPriceField = value;
                    this.RaisePropertyChanged("IsMarketPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderVolume {
            get {
                return this.OrderVolumeField;
            }
            set {
                if ((this.OrderVolumeField.Equals(value) != true)) {
                    this.OrderVolumeField = value;
                    this.RaisePropertyChanged("OrderVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SholderCode {
            get {
                return this.SholderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SholderCodeField, value) != true)) {
                    this.SholderCodeField = value;
                    this.RaisePropertyChanged("SholderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockCode {
            get {
                return this.StockCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StockCodeField, value) != true)) {
                    this.StockCodeField = value;
                    this.RaisePropertyChanged("StockCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirection {
            get {
                return this.TransactionDirectionField;
            }
            set {
                if ((this.TransactionDirectionField.Equals(value) != true)) {
                    this.TransactionDirectionField = value;
                    this.RaisePropertyChanged("TransactionDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CHDirection", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    public enum CHDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shut = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommoditiesOrderEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class CommoditiesOrderEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.CHDirection DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesMarketPriceType IsMarketPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SholderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelNo {
            get {
                return this.ChannelNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNoField, value) != true)) {
                    this.ChannelNoField = value;
                    this.RaisePropertyChanged("ChannelNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.CHDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesMarketPriceType IsMarketPrice {
            get {
                return this.IsMarketPriceField;
            }
            set {
                if ((this.IsMarketPriceField.Equals(value) != true)) {
                    this.IsMarketPriceField = value;
                    this.RaisePropertyChanged("IsMarketPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderVolume {
            get {
                return this.OrderVolumeField;
            }
            set {
                if ((this.OrderVolumeField.Equals(value) != true)) {
                    this.OrderVolumeField = value;
                    this.RaisePropertyChanged("OrderVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SholderCode {
            get {
                return this.SholderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SholderCodeField, value) != true)) {
                    this.SholderCodeField = value;
                    this.RaisePropertyChanged("SholderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockCode {
            get {
                return this.StockCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StockCodeField, value) != true)) {
                    this.StockCodeField = value;
                    this.RaisePropertyChanged("StockCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirection {
            get {
                return this.TransactionDirectionField;
            }
            set {
                if ((this.TransactionDirectionField.Equals(value) != true)) {
                    this.TransactionDirectionField = value;
                    this.RaisePropertyChanged("TransactionDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKOrderEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity.HK")]
    [System.SerializableAttribute()]
    public partial class HKOrderEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesHKPriceType HKPriceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SholderCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelNo {
            get {
                return this.ChannelNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNoField, value) != true)) {
                    this.ChannelNoField = value;
                    this.RaisePropertyChanged("ChannelNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesHKPriceType HKPriceType {
            get {
                return this.HKPriceTypeField;
            }
            set {
                if ((this.HKPriceTypeField.Equals(value) != true)) {
                    this.HKPriceTypeField = value;
                    this.RaisePropertyChanged("HKPriceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderVolume {
            get {
                return this.OrderVolumeField;
            }
            set {
                if ((this.OrderVolumeField.Equals(value) != true)) {
                    this.OrderVolumeField = value;
                    this.RaisePropertyChanged("OrderVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SholderCode {
            get {
                return this.SholderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SholderCodeField, value) != true)) {
                    this.SholderCodeField = value;
                    this.RaisePropertyChanged("SholderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.DAL.MatchCenterService.TypesTransactionDirection TransactionDirection {
            get {
                return this.TransactionDirectionField;
            }
            set {
                if ((this.TransactionDirectionField.Equals(value) != true)) {
                    this.TransactionDirectionField = value;
                    this.RaisePropertyChanged("TransactionDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.HKPriceType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesHKPriceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ELO = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLO = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class CancelEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CancelCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldOrderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CancelCount {
            get {
                return this.CancelCountField;
            }
            set {
                if ((this.CancelCountField.Equals(value) != true)) {
                    this.CancelCountField = value;
                    this.RaisePropertyChanged("CancelCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelNo {
            get {
                return this.ChannelNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNoField, value) != true)) {
                    this.ChannelNoField = value;
                    this.RaisePropertyChanged("ChannelNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldOrderNo {
            get {
                return this.OldOrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OldOrderNoField, value) != true)) {
                    this.OldOrderNoField = value;
                    this.RaisePropertyChanged("OldOrderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockCode {
            get {
                return this.StockCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StockCodeField, value) != true)) {
                    this.StockCodeField = value;
                    this.RaisePropertyChanged("StockCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelResultEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class CancelResultEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNoField, value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKModifyEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class HKModifyEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifyVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldOrderNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelNo {
            get {
                return this.ChannelNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNoField, value) != true)) {
                    this.ChannelNoField = value;
                    this.RaisePropertyChanged("ChannelNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifyVolume {
            get {
                return this.ModifyVolumeField;
            }
            set {
                if ((this.ModifyVolumeField.Equals(value) != true)) {
                    this.ModifyVolumeField = value;
                    this.RaisePropertyChanged("ModifyVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldOrderNo {
            get {
                return this.OldOrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OldOrderNoField, value) != true)) {
                    this.OldOrderNoField = value;
                    this.RaisePropertyChanged("OldOrderNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockCode {
            get {
                return this.StockCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StockCodeField, value) != true)) {
                    this.StockCodeField = value;
                    this.RaisePropertyChanged("StockCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKModifyResultEntity", Namespace="http://schemas.datacontract.org/2004/07/MatchCenter.Entity")]
    [System.SerializableAttribute()]
    public partial class HKModifyResultEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNo {
            get {
                return this.OrderNoField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNoField, value) != true)) {
                    this.OrderNoField = value;
                    this.RaisePropertyChanged("OrderNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchCenterService.IDoOrder")]
    public interface IDoOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoStockOrder", ReplyAction="http://tempuri.org/IDoOrder/DoStockOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoStockOrder(ReckoningCounter.DAL.MatchCenterService.StockOrderEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/DoStockOrder", ReplyAction="http://tempuri.org/IDoOrder/DoStockOrderResponse")]
        System.IAsyncResult BeginDoStockOrder(ReckoningCounter.DAL.MatchCenterService.StockOrderEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoStockOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoFutureOrder", ReplyAction="http://tempuri.org/IDoOrder/DoFutureOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoFutureOrder(ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/DoFutureOrder", ReplyAction="http://tempuri.org/IDoOrder/DoFutureOrderResponse")]
        System.IAsyncResult BeginDoFutureOrder(ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoFutureOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoCommoditiesOrder", ReplyAction="http://tempuri.org/IDoOrder/DoCommoditiesOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/DoCommoditiesOrder", ReplyAction="http://tempuri.org/IDoOrder/DoCommoditiesOrderResponse")]
        System.IAsyncResult BeginDoCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoCommoditiesOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoHKEntrustOrder", ReplyAction="http://tempuri.org/IDoOrder/DoHKEntrustOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoHKEntrustOrder(ReckoningCounter.DAL.MatchCenterService.HKOrderEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/DoHKEntrustOrder", ReplyAction="http://tempuri.org/IDoOrder/DoHKEntrustOrderResponse")]
        System.IAsyncResult BeginDoHKEntrustOrder(ReckoningCounter.DAL.MatchCenterService.HKOrderEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoHKEntrustOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelStockOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelStockOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelStockOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/CancelStockOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelStockOrderResponse")]
        System.IAsyncResult BeginCancelStockOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelStockOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelFutureOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelFutureOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelFutureOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/CancelFutureOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelFutureOrderResponse")]
        System.IAsyncResult BeginCancelFutureOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelFutureOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelCommoditiesOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelCommoditiesOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/CancelCommoditiesOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelCommoditiesOrderResponse")]
        System.IAsyncResult BeginCancelCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelCommoditiesOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelHKOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelHKOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelHKOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/CancelHKOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelHKOrderResponse")]
        System.IAsyncResult BeginCancelHKOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelHKOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/ModifyHKStockOrder", ReplyAction="http://tempuri.org/IDoOrder/ModifyHKStockOrderResponse")]
        ReckoningCounter.DAL.MatchCenterService.HKModifyResultEntity ModifyHKStockOrder(ReckoningCounter.DAL.MatchCenterService.HKModifyEntity dataOrder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/ModifyHKStockOrder", ReplyAction="http://tempuri.org/IDoOrder/ModifyHKStockOrderResponse")]
        System.IAsyncResult BeginModifyHKStockOrder(ReckoningCounter.DAL.MatchCenterService.HKModifyEntity dataOrder, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.MatchCenterService.HKModifyResultEntity EndModifyHKStockOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CheckChannel", ReplyAction="http://tempuri.org/IDoOrder/CheckChannelResponse")]
        string CheckChannel();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDoOrder/CheckChannel", ReplyAction="http://tempuri.org/IDoOrder/CheckChannelResponse")]
        System.IAsyncResult BeginCheckChannel(System.AsyncCallback callback, object asyncState);
        
        string EndCheckChannel(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoOrderChannel : ReckoningCounter.DAL.MatchCenterService.IDoOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoStockOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoStockOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.ResultDataEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoFutureOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoFutureOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.ResultDataEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoCommoditiesOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoCommoditiesOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.ResultDataEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoHKEntrustOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoHKEntrustOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.ResultDataEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancelStockOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancelStockOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.CancelResultEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancelFutureOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancelFutureOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.CancelResultEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancelCommoditiesOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancelCommoditiesOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.CancelResultEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancelHKOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancelHKOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.CancelResultEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyHKStockOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifyHKStockOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.MatchCenterService.HKModifyResultEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.MatchCenterService.HKModifyResultEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoOrderClient : System.ServiceModel.ClientBase<ReckoningCounter.DAL.MatchCenterService.IDoOrder>, ReckoningCounter.DAL.MatchCenterService.IDoOrder {
        
        private BeginOperationDelegate onBeginDoStockOrderDelegate;
        
        private EndOperationDelegate onEndDoStockOrderDelegate;
        
        private System.Threading.SendOrPostCallback onDoStockOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoFutureOrderDelegate;
        
        private EndOperationDelegate onEndDoFutureOrderDelegate;
        
        private System.Threading.SendOrPostCallback onDoFutureOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoCommoditiesOrderDelegate;
        
        private EndOperationDelegate onEndDoCommoditiesOrderDelegate;
        
        private System.Threading.SendOrPostCallback onDoCommoditiesOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoHKEntrustOrderDelegate;
        
        private EndOperationDelegate onEndDoHKEntrustOrderDelegate;
        
        private System.Threading.SendOrPostCallback onDoHKEntrustOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelStockOrderDelegate;
        
        private EndOperationDelegate onEndCancelStockOrderDelegate;
        
        private System.Threading.SendOrPostCallback onCancelStockOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelFutureOrderDelegate;
        
        private EndOperationDelegate onEndCancelFutureOrderDelegate;
        
        private System.Threading.SendOrPostCallback onCancelFutureOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelCommoditiesOrderDelegate;
        
        private EndOperationDelegate onEndCancelCommoditiesOrderDelegate;
        
        private System.Threading.SendOrPostCallback onCancelCommoditiesOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelHKOrderDelegate;
        
        private EndOperationDelegate onEndCancelHKOrderDelegate;
        
        private System.Threading.SendOrPostCallback onCancelHKOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyHKStockOrderDelegate;
        
        private EndOperationDelegate onEndModifyHKStockOrderDelegate;
        
        private System.Threading.SendOrPostCallback onModifyHKStockOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckChannelDelegate;
        
        private EndOperationDelegate onEndCheckChannelDelegate;
        
        private System.Threading.SendOrPostCallback onCheckChannelCompletedDelegate;
        
        public DoOrderClient() {
        }
        
        public DoOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DoOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<DoStockOrderCompletedEventArgs> DoStockOrderCompleted;
        
        public event System.EventHandler<DoFutureOrderCompletedEventArgs> DoFutureOrderCompleted;
        
        public event System.EventHandler<DoCommoditiesOrderCompletedEventArgs> DoCommoditiesOrderCompleted;
        
        public event System.EventHandler<DoHKEntrustOrderCompletedEventArgs> DoHKEntrustOrderCompleted;
        
        public event System.EventHandler<CancelStockOrderCompletedEventArgs> CancelStockOrderCompleted;
        
        public event System.EventHandler<CancelFutureOrderCompletedEventArgs> CancelFutureOrderCompleted;
        
        public event System.EventHandler<CancelCommoditiesOrderCompletedEventArgs> CancelCommoditiesOrderCompleted;
        
        public event System.EventHandler<CancelHKOrderCompletedEventArgs> CancelHKOrderCompleted;
        
        public event System.EventHandler<ModifyHKStockOrderCompletedEventArgs> ModifyHKStockOrderCompleted;
        
        public event System.EventHandler<CheckChannelCompletedEventArgs> CheckChannelCompleted;
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoStockOrder(ReckoningCounter.DAL.MatchCenterService.StockOrderEntity dataOrder) {
            return base.Channel.DoStockOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoStockOrder(ReckoningCounter.DAL.MatchCenterService.StockOrderEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoStockOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoStockOrder(System.IAsyncResult result) {
            return base.Channel.EndDoStockOrder(result);
        }
        
        private System.IAsyncResult OnBeginDoStockOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.StockOrderEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.StockOrderEntity)(inValues[0]));
            return this.BeginDoStockOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndDoStockOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.ResultDataEntity retVal = this.EndDoStockOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoStockOrderCompleted(object state) {
            if ((this.DoStockOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoStockOrderCompleted(this, new DoStockOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoStockOrderAsync(ReckoningCounter.DAL.MatchCenterService.StockOrderEntity dataOrder) {
            this.DoStockOrderAsync(dataOrder, null);
        }
        
        public void DoStockOrderAsync(ReckoningCounter.DAL.MatchCenterService.StockOrderEntity dataOrder, object userState) {
            if ((this.onBeginDoStockOrderDelegate == null)) {
                this.onBeginDoStockOrderDelegate = new BeginOperationDelegate(this.OnBeginDoStockOrder);
            }
            if ((this.onEndDoStockOrderDelegate == null)) {
                this.onEndDoStockOrderDelegate = new EndOperationDelegate(this.OnEndDoStockOrder);
            }
            if ((this.onDoStockOrderCompletedDelegate == null)) {
                this.onDoStockOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoStockOrderCompleted);
            }
            base.InvokeAsync(this.onBeginDoStockOrderDelegate, new object[] {
                        dataOrder}, this.onEndDoStockOrderDelegate, this.onDoStockOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoFutureOrder(ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity dataOrder) {
            return base.Channel.DoFutureOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoFutureOrder(ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoFutureOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoFutureOrder(System.IAsyncResult result) {
            return base.Channel.EndDoFutureOrder(result);
        }
        
        private System.IAsyncResult OnBeginDoFutureOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity)(inValues[0]));
            return this.BeginDoFutureOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndDoFutureOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.ResultDataEntity retVal = this.EndDoFutureOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoFutureOrderCompleted(object state) {
            if ((this.DoFutureOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoFutureOrderCompleted(this, new DoFutureOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoFutureOrderAsync(ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity dataOrder) {
            this.DoFutureOrderAsync(dataOrder, null);
        }
        
        public void DoFutureOrderAsync(ReckoningCounter.DAL.MatchCenterService.FutureOrderEntity dataOrder, object userState) {
            if ((this.onBeginDoFutureOrderDelegate == null)) {
                this.onBeginDoFutureOrderDelegate = new BeginOperationDelegate(this.OnBeginDoFutureOrder);
            }
            if ((this.onEndDoFutureOrderDelegate == null)) {
                this.onEndDoFutureOrderDelegate = new EndOperationDelegate(this.OnEndDoFutureOrder);
            }
            if ((this.onDoFutureOrderCompletedDelegate == null)) {
                this.onDoFutureOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoFutureOrderCompleted);
            }
            base.InvokeAsync(this.onBeginDoFutureOrderDelegate, new object[] {
                        dataOrder}, this.onEndDoFutureOrderDelegate, this.onDoFutureOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity dataOrder) {
            return base.Channel.DoCommoditiesOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoCommoditiesOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoCommoditiesOrder(System.IAsyncResult result) {
            return base.Channel.EndDoCommoditiesOrder(result);
        }
        
        private System.IAsyncResult OnBeginDoCommoditiesOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity)(inValues[0]));
            return this.BeginDoCommoditiesOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndDoCommoditiesOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.ResultDataEntity retVal = this.EndDoCommoditiesOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoCommoditiesOrderCompleted(object state) {
            if ((this.DoCommoditiesOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoCommoditiesOrderCompleted(this, new DoCommoditiesOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoCommoditiesOrderAsync(ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity dataOrder) {
            this.DoCommoditiesOrderAsync(dataOrder, null);
        }
        
        public void DoCommoditiesOrderAsync(ReckoningCounter.DAL.MatchCenterService.CommoditiesOrderEntity dataOrder, object userState) {
            if ((this.onBeginDoCommoditiesOrderDelegate == null)) {
                this.onBeginDoCommoditiesOrderDelegate = new BeginOperationDelegate(this.OnBeginDoCommoditiesOrder);
            }
            if ((this.onEndDoCommoditiesOrderDelegate == null)) {
                this.onEndDoCommoditiesOrderDelegate = new EndOperationDelegate(this.OnEndDoCommoditiesOrder);
            }
            if ((this.onDoCommoditiesOrderCompletedDelegate == null)) {
                this.onDoCommoditiesOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoCommoditiesOrderCompleted);
            }
            base.InvokeAsync(this.onBeginDoCommoditiesOrderDelegate, new object[] {
                        dataOrder}, this.onEndDoCommoditiesOrderDelegate, this.onDoCommoditiesOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity DoHKEntrustOrder(ReckoningCounter.DAL.MatchCenterService.HKOrderEntity dataOrder) {
            return base.Channel.DoHKEntrustOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoHKEntrustOrder(ReckoningCounter.DAL.MatchCenterService.HKOrderEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoHKEntrustOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.ResultDataEntity EndDoHKEntrustOrder(System.IAsyncResult result) {
            return base.Channel.EndDoHKEntrustOrder(result);
        }
        
        private System.IAsyncResult OnBeginDoHKEntrustOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.HKOrderEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.HKOrderEntity)(inValues[0]));
            return this.BeginDoHKEntrustOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndDoHKEntrustOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.ResultDataEntity retVal = this.EndDoHKEntrustOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoHKEntrustOrderCompleted(object state) {
            if ((this.DoHKEntrustOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoHKEntrustOrderCompleted(this, new DoHKEntrustOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoHKEntrustOrderAsync(ReckoningCounter.DAL.MatchCenterService.HKOrderEntity dataOrder) {
            this.DoHKEntrustOrderAsync(dataOrder, null);
        }
        
        public void DoHKEntrustOrderAsync(ReckoningCounter.DAL.MatchCenterService.HKOrderEntity dataOrder, object userState) {
            if ((this.onBeginDoHKEntrustOrderDelegate == null)) {
                this.onBeginDoHKEntrustOrderDelegate = new BeginOperationDelegate(this.OnBeginDoHKEntrustOrder);
            }
            if ((this.onEndDoHKEntrustOrderDelegate == null)) {
                this.onEndDoHKEntrustOrderDelegate = new EndOperationDelegate(this.OnEndDoHKEntrustOrder);
            }
            if ((this.onDoHKEntrustOrderCompletedDelegate == null)) {
                this.onDoHKEntrustOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoHKEntrustOrderCompleted);
            }
            base.InvokeAsync(this.onBeginDoHKEntrustOrderDelegate, new object[] {
                        dataOrder}, this.onEndDoHKEntrustOrderDelegate, this.onDoHKEntrustOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelStockOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            return base.Channel.CancelStockOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelStockOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelStockOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelStockOrder(System.IAsyncResult result) {
            return base.Channel.EndCancelStockOrder(result);
        }
        
        private System.IAsyncResult OnBeginCancelStockOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.CancelEntity)(inValues[0]));
            return this.BeginCancelStockOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndCancelStockOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.CancelResultEntity retVal = this.EndCancelStockOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancelStockOrderCompleted(object state) {
            if ((this.CancelStockOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelStockOrderCompleted(this, new CancelStockOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelStockOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            this.CancelStockOrderAsync(dataOrder, null);
        }
        
        public void CancelStockOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, object userState) {
            if ((this.onBeginCancelStockOrderDelegate == null)) {
                this.onBeginCancelStockOrderDelegate = new BeginOperationDelegate(this.OnBeginCancelStockOrder);
            }
            if ((this.onEndCancelStockOrderDelegate == null)) {
                this.onEndCancelStockOrderDelegate = new EndOperationDelegate(this.OnEndCancelStockOrder);
            }
            if ((this.onCancelStockOrderCompletedDelegate == null)) {
                this.onCancelStockOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelStockOrderCompleted);
            }
            base.InvokeAsync(this.onBeginCancelStockOrderDelegate, new object[] {
                        dataOrder}, this.onEndCancelStockOrderDelegate, this.onCancelStockOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelFutureOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            return base.Channel.CancelFutureOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelFutureOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelFutureOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelFutureOrder(System.IAsyncResult result) {
            return base.Channel.EndCancelFutureOrder(result);
        }
        
        private System.IAsyncResult OnBeginCancelFutureOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.CancelEntity)(inValues[0]));
            return this.BeginCancelFutureOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndCancelFutureOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.CancelResultEntity retVal = this.EndCancelFutureOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancelFutureOrderCompleted(object state) {
            if ((this.CancelFutureOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelFutureOrderCompleted(this, new CancelFutureOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelFutureOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            this.CancelFutureOrderAsync(dataOrder, null);
        }
        
        public void CancelFutureOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, object userState) {
            if ((this.onBeginCancelFutureOrderDelegate == null)) {
                this.onBeginCancelFutureOrderDelegate = new BeginOperationDelegate(this.OnBeginCancelFutureOrder);
            }
            if ((this.onEndCancelFutureOrderDelegate == null)) {
                this.onEndCancelFutureOrderDelegate = new EndOperationDelegate(this.OnEndCancelFutureOrder);
            }
            if ((this.onCancelFutureOrderCompletedDelegate == null)) {
                this.onCancelFutureOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelFutureOrderCompleted);
            }
            base.InvokeAsync(this.onBeginCancelFutureOrderDelegate, new object[] {
                        dataOrder}, this.onEndCancelFutureOrderDelegate, this.onCancelFutureOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            return base.Channel.CancelCommoditiesOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelCommoditiesOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelCommoditiesOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelCommoditiesOrder(System.IAsyncResult result) {
            return base.Channel.EndCancelCommoditiesOrder(result);
        }
        
        private System.IAsyncResult OnBeginCancelCommoditiesOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.CancelEntity)(inValues[0]));
            return this.BeginCancelCommoditiesOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndCancelCommoditiesOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.CancelResultEntity retVal = this.EndCancelCommoditiesOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancelCommoditiesOrderCompleted(object state) {
            if ((this.CancelCommoditiesOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelCommoditiesOrderCompleted(this, new CancelCommoditiesOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelCommoditiesOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            this.CancelCommoditiesOrderAsync(dataOrder, null);
        }
        
        public void CancelCommoditiesOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, object userState) {
            if ((this.onBeginCancelCommoditiesOrderDelegate == null)) {
                this.onBeginCancelCommoditiesOrderDelegate = new BeginOperationDelegate(this.OnBeginCancelCommoditiesOrder);
            }
            if ((this.onEndCancelCommoditiesOrderDelegate == null)) {
                this.onEndCancelCommoditiesOrderDelegate = new EndOperationDelegate(this.OnEndCancelCommoditiesOrder);
            }
            if ((this.onCancelCommoditiesOrderCompletedDelegate == null)) {
                this.onCancelCommoditiesOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelCommoditiesOrderCompleted);
            }
            base.InvokeAsync(this.onBeginCancelCommoditiesOrderDelegate, new object[] {
                        dataOrder}, this.onEndCancelCommoditiesOrderDelegate, this.onCancelCommoditiesOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity CancelHKOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            return base.Channel.CancelHKOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelHKOrder(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelHKOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.CancelResultEntity EndCancelHKOrder(System.IAsyncResult result) {
            return base.Channel.EndCancelHKOrder(result);
        }
        
        private System.IAsyncResult OnBeginCancelHKOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.CancelEntity)(inValues[0]));
            return this.BeginCancelHKOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndCancelHKOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.CancelResultEntity retVal = this.EndCancelHKOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancelHKOrderCompleted(object state) {
            if ((this.CancelHKOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelHKOrderCompleted(this, new CancelHKOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelHKOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder) {
            this.CancelHKOrderAsync(dataOrder, null);
        }
        
        public void CancelHKOrderAsync(ReckoningCounter.DAL.MatchCenterService.CancelEntity dataOrder, object userState) {
            if ((this.onBeginCancelHKOrderDelegate == null)) {
                this.onBeginCancelHKOrderDelegate = new BeginOperationDelegate(this.OnBeginCancelHKOrder);
            }
            if ((this.onEndCancelHKOrderDelegate == null)) {
                this.onEndCancelHKOrderDelegate = new EndOperationDelegate(this.OnEndCancelHKOrder);
            }
            if ((this.onCancelHKOrderCompletedDelegate == null)) {
                this.onCancelHKOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelHKOrderCompleted);
            }
            base.InvokeAsync(this.onBeginCancelHKOrderDelegate, new object[] {
                        dataOrder}, this.onEndCancelHKOrderDelegate, this.onCancelHKOrderCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.MatchCenterService.HKModifyResultEntity ModifyHKStockOrder(ReckoningCounter.DAL.MatchCenterService.HKModifyEntity dataOrder) {
            return base.Channel.ModifyHKStockOrder(dataOrder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginModifyHKStockOrder(ReckoningCounter.DAL.MatchCenterService.HKModifyEntity dataOrder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyHKStockOrder(dataOrder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.MatchCenterService.HKModifyResultEntity EndModifyHKStockOrder(System.IAsyncResult result) {
            return base.Channel.EndModifyHKStockOrder(result);
        }
        
        private System.IAsyncResult OnBeginModifyHKStockOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ReckoningCounter.DAL.MatchCenterService.HKModifyEntity dataOrder = ((ReckoningCounter.DAL.MatchCenterService.HKModifyEntity)(inValues[0]));
            return this.BeginModifyHKStockOrder(dataOrder, callback, asyncState);
        }
        
        private object[] OnEndModifyHKStockOrder(System.IAsyncResult result) {
            ReckoningCounter.DAL.MatchCenterService.HKModifyResultEntity retVal = this.EndModifyHKStockOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifyHKStockOrderCompleted(object state) {
            if ((this.ModifyHKStockOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyHKStockOrderCompleted(this, new ModifyHKStockOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyHKStockOrderAsync(ReckoningCounter.DAL.MatchCenterService.HKModifyEntity dataOrder) {
            this.ModifyHKStockOrderAsync(dataOrder, null);
        }
        
        public void ModifyHKStockOrderAsync(ReckoningCounter.DAL.MatchCenterService.HKModifyEntity dataOrder, object userState) {
            if ((this.onBeginModifyHKStockOrderDelegate == null)) {
                this.onBeginModifyHKStockOrderDelegate = new BeginOperationDelegate(this.OnBeginModifyHKStockOrder);
            }
            if ((this.onEndModifyHKStockOrderDelegate == null)) {
                this.onEndModifyHKStockOrderDelegate = new EndOperationDelegate(this.OnEndModifyHKStockOrder);
            }
            if ((this.onModifyHKStockOrderCompletedDelegate == null)) {
                this.onModifyHKStockOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyHKStockOrderCompleted);
            }
            base.InvokeAsync(this.onBeginModifyHKStockOrderDelegate, new object[] {
                        dataOrder}, this.onEndModifyHKStockOrderDelegate, this.onModifyHKStockOrderCompletedDelegate, userState);
        }
        
        public string CheckChannel() {
            return base.Channel.CheckChannel();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckChannel(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckChannel(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCheckChannel(System.IAsyncResult result) {
            return base.Channel.EndCheckChannel(result);
        }
        
        private System.IAsyncResult OnBeginCheckChannel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginCheckChannel(callback, asyncState);
        }
        
        private object[] OnEndCheckChannel(System.IAsyncResult result) {
            string retVal = this.EndCheckChannel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckChannelCompleted(object state) {
            if ((this.CheckChannelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckChannelCompleted(this, new CheckChannelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckChannelAsync() {
            this.CheckChannelAsync(null);
        }
        
        public void CheckChannelAsync(object userState) {
            if ((this.onBeginCheckChannelDelegate == null)) {
                this.onBeginCheckChannelDelegate = new BeginOperationDelegate(this.OnBeginCheckChannel);
            }
            if ((this.onEndCheckChannelDelegate == null)) {
                this.onEndCheckChannelDelegate = new EndOperationDelegate(this.OnEndCheckChannel);
            }
            if ((this.onCheckChannelCompletedDelegate == null)) {
                this.onCheckChannelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckChannelCompleted);
            }
            base.InvokeAsync(this.onBeginCheckChannelDelegate, null, this.onEndCheckChannelDelegate, this.onCheckChannelCompletedDelegate, userState);
        }
    }
}
