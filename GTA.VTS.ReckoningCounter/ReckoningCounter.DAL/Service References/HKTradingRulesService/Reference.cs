//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReckoningCounter.DAL.HKTradingRulesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_MinVolumeOfBusiness", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_MinVolumeOfBusiness : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BreedClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinVolumeOfBusinessIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeWayIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VolumeOfBusinessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BreedClassID {
            get {
                return this.BreedClassIDField;
            }
            set {
                if ((this.BreedClassIDField.Equals(value) != true)) {
                    this.BreedClassIDField = value;
                    this.RaisePropertyChanged("BreedClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinVolumeOfBusinessID {
            get {
                return this.MinVolumeOfBusinessIDField;
            }
            set {
                if ((this.MinVolumeOfBusinessIDField.Equals(value) != true)) {
                    this.MinVolumeOfBusinessIDField = value;
                    this.RaisePropertyChanged("MinVolumeOfBusinessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeWayID {
            get {
                return this.TradeWayIDField;
            }
            set {
                if ((this.TradeWayIDField.Equals(value) != true)) {
                    this.TradeWayIDField = value;
                    this.RaisePropertyChanged("TradeWayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UnitID {
            get {
                return this.UnitIDField;
            }
            set {
                if ((this.UnitIDField.Equals(value) != true)) {
                    this.UnitIDField = value;
                    this.RaisePropertyChanged("UnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VolumeOfBusiness {
            get {
                return this.VolumeOfBusinessField;
            }
            set {
                if ((this.VolumeOfBusinessField.Equals(value) != true)) {
                    this.VolumeOfBusinessField = value;
                    this.RaisePropertyChanged("VolumeOfBusiness");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_SpotPosition", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_SpotPosition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BreedClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BreedClassID {
            get {
                return this.BreedClassIDField;
            }
            set {
                if ((this.BreedClassIDField.Equals(value) != true)) {
                    this.BreedClassIDField = value;
                    this.RaisePropertyChanged("BreedClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_Commodity", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity))]
    public partial class HK_Commodity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BreedClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKCommodityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKCommodityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ISSysDefaultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsSellNullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MarketDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PerHandThighOrShareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockPinYinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> turnovervolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BreedClassID {
            get {
                return this.BreedClassIDField;
            }
            set {
                if ((this.BreedClassIDField.Equals(value) != true)) {
                    this.BreedClassIDField = value;
                    this.RaisePropertyChanged("BreedClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKCommodityCode {
            get {
                return this.HKCommodityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HKCommodityCodeField, value) != true)) {
                    this.HKCommodityCodeField = value;
                    this.RaisePropertyChanged("HKCommodityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKCommodityName {
            get {
                return this.HKCommodityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HKCommodityNameField, value) != true)) {
                    this.HKCommodityNameField = value;
                    this.RaisePropertyChanged("HKCommodityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ISSysDefaultCode {
            get {
                return this.ISSysDefaultCodeField;
            }
            set {
                if ((this.ISSysDefaultCodeField.Equals(value) != true)) {
                    this.ISSysDefaultCodeField = value;
                    this.RaisePropertyChanged("ISSysDefaultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsSellNull {
            get {
                return this.IsSellNullField;
            }
            set {
                if ((this.IsSellNullField.Equals(value) != true)) {
                    this.IsSellNullField = value;
                    this.RaisePropertyChanged("IsSellNull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MarketDate {
            get {
                return this.MarketDateField;
            }
            set {
                if ((this.MarketDateField.Equals(value) != true)) {
                    this.MarketDateField = value;
                    this.RaisePropertyChanged("MarketDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PerHandThighOrShare {
            get {
                return this.PerHandThighOrShareField;
            }
            set {
                if ((this.PerHandThighOrShareField.Equals(value) != true)) {
                    this.PerHandThighOrShareField = value;
                    this.RaisePropertyChanged("PerHandThighOrShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockPinYin {
            get {
                return this.StockPinYinField;
            }
            set {
                if ((object.ReferenceEquals(this.StockPinYinField, value) != true)) {
                    this.StockPinYinField = value;
                    this.RaisePropertyChanged("StockPinYin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> turnovervolume {
            get {
                return this.turnovervolumeField;
            }
            set {
                if ((this.turnovervolumeField.Equals(value) != true)) {
                    this.turnovervolumeField = value;
                    this.RaisePropertyChanged("turnovervolume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnstageHK_Commodity", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class OnstageHK_Commodity : ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NindcdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nindcd {
            get {
                return this.NindcdField;
            }
            set {
                if ((object.ReferenceEquals(this.NindcdField, value) != true)) {
                    this.NindcdField = value;
                    this.RaisePropertyChanged("Nindcd");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_SpotCosts", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class HK_SpotCosts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BreedClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CommisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CommisionStartingpointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrencyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MonitoringFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PoundageValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StampDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StampDutyStartingpointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StampDutyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SystemTollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TransferTollField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BreedClassID {
            get {
                return this.BreedClassIDField;
            }
            set {
                if ((this.BreedClassIDField.Equals(value) != true)) {
                    this.BreedClassIDField = value;
                    this.RaisePropertyChanged("BreedClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Commision {
            get {
                return this.CommisionField;
            }
            set {
                if ((this.CommisionField.Equals(value) != true)) {
                    this.CommisionField = value;
                    this.RaisePropertyChanged("Commision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CommisionStartingpoint {
            get {
                return this.CommisionStartingpointField;
            }
            set {
                if ((this.CommisionStartingpointField.Equals(value) != true)) {
                    this.CommisionStartingpointField = value;
                    this.RaisePropertyChanged("CommisionStartingpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrencyTypeID {
            get {
                return this.CurrencyTypeIDField;
            }
            set {
                if ((this.CurrencyTypeIDField.Equals(value) != true)) {
                    this.CurrencyTypeIDField = value;
                    this.RaisePropertyChanged("CurrencyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MonitoringFee {
            get {
                return this.MonitoringFeeField;
            }
            set {
                if ((this.MonitoringFeeField.Equals(value) != true)) {
                    this.MonitoringFeeField = value;
                    this.RaisePropertyChanged("MonitoringFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PoundageValue {
            get {
                return this.PoundageValueField;
            }
            set {
                if ((this.PoundageValueField.Equals(value) != true)) {
                    this.PoundageValueField = value;
                    this.RaisePropertyChanged("PoundageValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StampDuty {
            get {
                return this.StampDutyField;
            }
            set {
                if ((this.StampDutyField.Equals(value) != true)) {
                    this.StampDutyField = value;
                    this.RaisePropertyChanged("StampDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StampDutyStartingpoint {
            get {
                return this.StampDutyStartingpointField;
            }
            set {
                if ((this.StampDutyStartingpointField.Equals(value) != true)) {
                    this.StampDutyStartingpointField = value;
                    this.RaisePropertyChanged("StampDutyStartingpoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StampDutyTypeID {
            get {
                return this.StampDutyTypeIDField;
            }
            set {
                if ((this.StampDutyTypeIDField.Equals(value) != true)) {
                    this.StampDutyTypeIDField = value;
                    this.RaisePropertyChanged("StampDutyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> SystemToll {
            get {
                return this.SystemTollField;
            }
            set {
                if ((this.SystemTollField.Equals(value) != true)) {
                    this.SystemTollField = value;
                    this.RaisePropertyChanged("SystemToll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TransferToll {
            get {
                return this.TransferTollField;
            }
            set {
                if ((this.TransferTollField.Equals(value) != true)) {
                    this.TransferTollField = value;
                    this.RaisePropertyChanged("TransferToll");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_SpotTradeRules", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class HK_SpotTradeRules : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BreedClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FundDeliveryInstitutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MarketUnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxLeaveQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StockDeliveryInstitutionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BreedClassID {
            get {
                return this.BreedClassIDField;
            }
            set {
                if ((this.BreedClassIDField.Equals(value) != true)) {
                    this.BreedClassIDField = value;
                    this.RaisePropertyChanged("BreedClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FundDeliveryInstitution {
            get {
                return this.FundDeliveryInstitutionField;
            }
            set {
                if ((this.FundDeliveryInstitutionField.Equals(value) != true)) {
                    this.FundDeliveryInstitutionField = value;
                    this.RaisePropertyChanged("FundDeliveryInstitution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MarketUnitID {
            get {
                return this.MarketUnitIDField;
            }
            set {
                if ((this.MarketUnitIDField.Equals(value) != true)) {
                    this.MarketUnitIDField = value;
                    this.RaisePropertyChanged("MarketUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxLeaveQuantity {
            get {
                return this.MaxLeaveQuantityField;
            }
            set {
                if ((this.MaxLeaveQuantityField.Equals(value) != true)) {
                    this.MaxLeaveQuantityField = value;
                    this.RaisePropertyChanged("MaxLeaveQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriceUnit {
            get {
                return this.PriceUnitField;
            }
            set {
                if ((this.PriceUnitField.Equals(value) != true)) {
                    this.PriceUnitField = value;
                    this.RaisePropertyChanged("PriceUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StockDeliveryInstitution {
            get {
                return this.StockDeliveryInstitutionField;
            }
            set {
                if ((this.StockDeliveryInstitutionField.Equals(value) != true)) {
                    this.StockDeliveryInstitutionField = value;
                    this.RaisePropertyChanged("StockDeliveryInstitution");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_MinPriceFieldRange", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class HK_MinPriceFieldRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldRangeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LowerLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UpperLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldRangeID {
            get {
                return this.FieldRangeIDField;
            }
            set {
                if ((this.FieldRangeIDField.Equals(value) != true)) {
                    this.FieldRangeIDField = value;
                    this.RaisePropertyChanged("FieldRangeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LowerLimit {
            get {
                return this.LowerLimitField;
            }
            set {
                if ((this.LowerLimitField.Equals(value) != true)) {
                    this.LowerLimitField = value;
                    this.RaisePropertyChanged("LowerLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UpperLimit {
            get {
                return this.UpperLimitField;
            }
            set {
                if ((this.UpperLimitField.Equals(value) != true)) {
                    this.UpperLimitField = value;
                    this.RaisePropertyChanged("UpperLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKProfessionInfo", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class HKProfessionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnNindnmeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NindcdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NindnmeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnNindnme {
            get {
                return this.EnNindnmeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnNindnmeField, value) != true)) {
                    this.EnNindnmeField = value;
                    this.RaisePropertyChanged("EnNindnme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nindcd {
            get {
                return this.NindcdField;
            }
            set {
                if ((object.ReferenceEquals(this.NindcdField, value) != true)) {
                    this.NindcdField = value;
                    this.RaisePropertyChanged("Nindcd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nindnme {
            get {
                return this.NindnmeField;
            }
            set {
                if ((object.ReferenceEquals(this.NindnmeField, value) != true)) {
                    this.NindnmeField = value;
                    this.RaisePropertyChanged("Nindnme");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HKTradingRulesService.IHKTradeRules")]
    public interface IHKTradeRules {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetAllMinVolumeOfBusiness", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllMinVolumeOfBusinessResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> GetAllMinVolumeOfBusiness();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetAllMinVolumeOfBusiness", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllMinVolumeOfBusinessResponse")]
        System.IAsyncResult BeginGetAllMinVolumeOfBusiness(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> EndGetAllMinVolumeOfBusiness(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetMinVolumeOfBusinessByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetMinVolumeOfBusinessByBreedClassIDResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> GetMinVolumeOfBusinessByBreedClassID(int breedClassID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetMinVolumeOfBusinessByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetMinVolumeOfBusinessByBreedClassIDResponse")]
        System.IAsyncResult BeginGetMinVolumeOfBusinessByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> EndGetMinVolumeOfBusinessByBreedClassID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetAllSpotPosition", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllSpotPositionResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition> GetAllSpotPosition();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetAllSpotPosition", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllSpotPositionResponse")]
        System.IAsyncResult BeginGetAllSpotPosition(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition> EndGetAllSpotPosition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetSpotPositionByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetSpotPositionByBreedClassIDResponse")]
        ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition GetSpotPositionByBreedClassID(int breedClassID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetSpotPositionByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetSpotPositionByBreedClassIDResponse")]
        System.IAsyncResult BeginGetSpotPositionByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition EndGetSpotPositionByBreedClassID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetAllHKCommodity", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKCommodityResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> GetAllHKCommodity();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetAllHKCommodity", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKCommodityResponse")]
        System.IAsyncResult BeginGetAllHKCommodity(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> EndGetAllHKCommodity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetHKCommodityByHKCommodityCode", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKCommodityByHKCommodityCodeResponse")]
        ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity GetHKCommodityByHKCommodityCode(string hkcommodityCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetHKCommodityByHKCommodityCode", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKCommodityByHKCommodityCodeResponse")]
        System.IAsyncResult BeginGetHKCommodityByHKCommodityCode(string hkcommodityCode, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity EndGetHKCommodityByHKCommodityCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetHKCommodityByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKCommodityByBreedClassIDResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> GetHKCommodityByBreedClassID(int breedClassID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetHKCommodityByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKCommodityByBreedClassIDResponse")]
        System.IAsyncResult BeginGetHKCommodityByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> EndGetHKCommodityByBreedClassID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetNewHKCommodity", ReplyAction="http://tempuri.org/IHKTradeRules/GetNewHKCommodityResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> GetNewHKCommodity();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetNewHKCommodity", ReplyAction="http://tempuri.org/IHKTradeRules/GetNewHKCommodityResponse")]
        System.IAsyncResult BeginGetNewHKCommodity(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> EndGetNewHKCommodity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetAllHKSpotCosts", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKSpotCostsResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts> GetAllHKSpotCosts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetAllHKSpotCosts", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKSpotCostsResponse")]
        System.IAsyncResult BeginGetAllHKSpotCosts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts> EndGetAllHKSpotCosts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetHKSpotCostsByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKSpotCostsByBreedClassIDResponse")]
        ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts GetHKSpotCostsByBreedClassID(int breedClassID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetHKSpotCostsByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKSpotCostsByBreedClassIDResponse")]
        System.IAsyncResult BeginGetHKSpotCostsByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts EndGetHKSpotCostsByBreedClassID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetAllHKSpotTradeRules", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKSpotTradeRulesResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules> GetAllHKSpotTradeRules();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetAllHKSpotTradeRules", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKSpotTradeRulesResponse")]
        System.IAsyncResult BeginGetAllHKSpotTradeRules(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules> EndGetAllHKSpotTradeRules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetHKSpotTradeRulesByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKSpotTradeRulesByBreedClassIDResponse")]
        ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules GetHKSpotTradeRulesByBreedClassID(int breedClassID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetHKSpotTradeRulesByBreedClassID", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKSpotTradeRulesByBreedClassIDResponse")]
        System.IAsyncResult BeginGetHKSpotTradeRulesByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState);
        
        ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules EndGetHKSpotTradeRulesByBreedClassID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetAllHKMinPriceFieldRange", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKMinPriceFieldRangeResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_MinPriceFieldRange> GetAllHKMinPriceFieldRange();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetAllHKMinPriceFieldRange", ReplyAction="http://tempuri.org/IHKTradeRules/GetAllHKMinPriceFieldRangeResponse")]
        System.IAsyncResult BeginGetAllHKMinPriceFieldRange(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_MinPriceFieldRange> EndGetAllHKMinPriceFieldRange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetHKCommodityListArray", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKCommodityListArrayResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity> GetHKCommodityListArray();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetHKCommodityListArray", ReplyAction="http://tempuri.org/IHKTradeRules/GetHKCommodityListArrayResponse")]
        System.IAsyncResult BeginGetHKCommodityListArray(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity> EndGetHKCommodityListArray(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTradeRules/GetListHKProfessionInfoArray", ReplyAction="http://tempuri.org/IHKTradeRules/GetListHKProfessionInfoArrayResponse")]
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HKProfessionInfo> GetListHKProfessionInfoArray();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHKTradeRules/GetListHKProfessionInfoArray", ReplyAction="http://tempuri.org/IHKTradeRules/GetListHKProfessionInfoArrayResponse")]
        System.IAsyncResult BeginGetListHKProfessionInfoArray(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HKProfessionInfo> EndGetListHKProfessionInfoArray(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHKTradeRulesChannel : ReckoningCounter.DAL.HKTradingRulesService.IHKTradeRules, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllMinVolumeOfBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllMinVolumeOfBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMinVolumeOfBusinessByBreedClassIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMinVolumeOfBusinessByBreedClassIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSpotPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSpotPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSpotPositionByBreedClassIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSpotPositionByBreedClassIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllHKCommodityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllHKCommodityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHKCommodityByHKCommodityCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHKCommodityByHKCommodityCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHKCommodityByBreedClassIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHKCommodityByBreedClassIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewHKCommodityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewHKCommodityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllHKSpotCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllHKSpotCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHKSpotCostsByBreedClassIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHKSpotCostsByBreedClassIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllHKSpotTradeRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllHKSpotTradeRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHKSpotTradeRulesByBreedClassIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHKSpotTradeRulesByBreedClassIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllHKMinPriceFieldRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllHKMinPriceFieldRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_MinPriceFieldRange> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_MinPriceFieldRange>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHKCommodityListArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHKCommodityListArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListHKProfessionInfoArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListHKProfessionInfoArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HKProfessionInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HKProfessionInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HKTradeRulesClient : System.ServiceModel.ClientBase<ReckoningCounter.DAL.HKTradingRulesService.IHKTradeRules>, ReckoningCounter.DAL.HKTradingRulesService.IHKTradeRules {
        
        private BeginOperationDelegate onBeginGetAllMinVolumeOfBusinessDelegate;
        
        private EndOperationDelegate onEndGetAllMinVolumeOfBusinessDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllMinVolumeOfBusinessCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMinVolumeOfBusinessByBreedClassIDDelegate;
        
        private EndOperationDelegate onEndGetMinVolumeOfBusinessByBreedClassIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetMinVolumeOfBusinessByBreedClassIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSpotPositionDelegate;
        
        private EndOperationDelegate onEndGetAllSpotPositionDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSpotPositionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSpotPositionByBreedClassIDDelegate;
        
        private EndOperationDelegate onEndGetSpotPositionByBreedClassIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetSpotPositionByBreedClassIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllHKCommodityDelegate;
        
        private EndOperationDelegate onEndGetAllHKCommodityDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllHKCommodityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHKCommodityByHKCommodityCodeDelegate;
        
        private EndOperationDelegate onEndGetHKCommodityByHKCommodityCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetHKCommodityByHKCommodityCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHKCommodityByBreedClassIDDelegate;
        
        private EndOperationDelegate onEndGetHKCommodityByBreedClassIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetHKCommodityByBreedClassIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewHKCommodityDelegate;
        
        private EndOperationDelegate onEndGetNewHKCommodityDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewHKCommodityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllHKSpotCostsDelegate;
        
        private EndOperationDelegate onEndGetAllHKSpotCostsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllHKSpotCostsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHKSpotCostsByBreedClassIDDelegate;
        
        private EndOperationDelegate onEndGetHKSpotCostsByBreedClassIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetHKSpotCostsByBreedClassIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllHKSpotTradeRulesDelegate;
        
        private EndOperationDelegate onEndGetAllHKSpotTradeRulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllHKSpotTradeRulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHKSpotTradeRulesByBreedClassIDDelegate;
        
        private EndOperationDelegate onEndGetHKSpotTradeRulesByBreedClassIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetHKSpotTradeRulesByBreedClassIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllHKMinPriceFieldRangeDelegate;
        
        private EndOperationDelegate onEndGetAllHKMinPriceFieldRangeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllHKMinPriceFieldRangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHKCommodityListArrayDelegate;
        
        private EndOperationDelegate onEndGetHKCommodityListArrayDelegate;
        
        private System.Threading.SendOrPostCallback onGetHKCommodityListArrayCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListHKProfessionInfoArrayDelegate;
        
        private EndOperationDelegate onEndGetListHKProfessionInfoArrayDelegate;
        
        private System.Threading.SendOrPostCallback onGetListHKProfessionInfoArrayCompletedDelegate;
        
        public HKTradeRulesClient() {
        }
        
        public HKTradeRulesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HKTradeRulesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HKTradeRulesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HKTradeRulesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllMinVolumeOfBusinessCompletedEventArgs> GetAllMinVolumeOfBusinessCompleted;
        
        public event System.EventHandler<GetMinVolumeOfBusinessByBreedClassIDCompletedEventArgs> GetMinVolumeOfBusinessByBreedClassIDCompleted;
        
        public event System.EventHandler<GetAllSpotPositionCompletedEventArgs> GetAllSpotPositionCompleted;
        
        public event System.EventHandler<GetSpotPositionByBreedClassIDCompletedEventArgs> GetSpotPositionByBreedClassIDCompleted;
        
        public event System.EventHandler<GetAllHKCommodityCompletedEventArgs> GetAllHKCommodityCompleted;
        
        public event System.EventHandler<GetHKCommodityByHKCommodityCodeCompletedEventArgs> GetHKCommodityByHKCommodityCodeCompleted;
        
        public event System.EventHandler<GetHKCommodityByBreedClassIDCompletedEventArgs> GetHKCommodityByBreedClassIDCompleted;
        
        public event System.EventHandler<GetNewHKCommodityCompletedEventArgs> GetNewHKCommodityCompleted;
        
        public event System.EventHandler<GetAllHKSpotCostsCompletedEventArgs> GetAllHKSpotCostsCompleted;
        
        public event System.EventHandler<GetHKSpotCostsByBreedClassIDCompletedEventArgs> GetHKSpotCostsByBreedClassIDCompleted;
        
        public event System.EventHandler<GetAllHKSpotTradeRulesCompletedEventArgs> GetAllHKSpotTradeRulesCompleted;
        
        public event System.EventHandler<GetHKSpotTradeRulesByBreedClassIDCompletedEventArgs> GetHKSpotTradeRulesByBreedClassIDCompleted;
        
        public event System.EventHandler<GetAllHKMinPriceFieldRangeCompletedEventArgs> GetAllHKMinPriceFieldRangeCompleted;
        
        public event System.EventHandler<GetHKCommodityListArrayCompletedEventArgs> GetHKCommodityListArrayCompleted;
        
        public event System.EventHandler<GetListHKProfessionInfoArrayCompletedEventArgs> GetListHKProfessionInfoArrayCompleted;
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> GetAllMinVolumeOfBusiness() {
            return base.Channel.GetAllMinVolumeOfBusiness();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllMinVolumeOfBusiness(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllMinVolumeOfBusiness(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> EndGetAllMinVolumeOfBusiness(System.IAsyncResult result) {
            return base.Channel.EndGetAllMinVolumeOfBusiness(result);
        }
        
        private System.IAsyncResult OnBeginGetAllMinVolumeOfBusiness(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllMinVolumeOfBusiness(callback, asyncState);
        }
        
        private object[] OnEndGetAllMinVolumeOfBusiness(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> retVal = this.EndGetAllMinVolumeOfBusiness(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllMinVolumeOfBusinessCompleted(object state) {
            if ((this.GetAllMinVolumeOfBusinessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllMinVolumeOfBusinessCompleted(this, new GetAllMinVolumeOfBusinessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllMinVolumeOfBusinessAsync() {
            this.GetAllMinVolumeOfBusinessAsync(null);
        }
        
        public void GetAllMinVolumeOfBusinessAsync(object userState) {
            if ((this.onBeginGetAllMinVolumeOfBusinessDelegate == null)) {
                this.onBeginGetAllMinVolumeOfBusinessDelegate = new BeginOperationDelegate(this.OnBeginGetAllMinVolumeOfBusiness);
            }
            if ((this.onEndGetAllMinVolumeOfBusinessDelegate == null)) {
                this.onEndGetAllMinVolumeOfBusinessDelegate = new EndOperationDelegate(this.OnEndGetAllMinVolumeOfBusiness);
            }
            if ((this.onGetAllMinVolumeOfBusinessCompletedDelegate == null)) {
                this.onGetAllMinVolumeOfBusinessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllMinVolumeOfBusinessCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllMinVolumeOfBusinessDelegate, null, this.onEndGetAllMinVolumeOfBusinessDelegate, this.onGetAllMinVolumeOfBusinessCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> GetMinVolumeOfBusinessByBreedClassID(int breedClassID) {
            return base.Channel.GetMinVolumeOfBusinessByBreedClassID(breedClassID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMinVolumeOfBusinessByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMinVolumeOfBusinessByBreedClassID(breedClassID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> EndGetMinVolumeOfBusinessByBreedClassID(System.IAsyncResult result) {
            return base.Channel.EndGetMinVolumeOfBusinessByBreedClassID(result);
        }
        
        private System.IAsyncResult OnBeginGetMinVolumeOfBusinessByBreedClassID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int breedClassID = ((int)(inValues[0]));
            return this.BeginGetMinVolumeOfBusinessByBreedClassID(breedClassID, callback, asyncState);
        }
        
        private object[] OnEndGetMinVolumeOfBusinessByBreedClassID(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_MinVolumeOfBusiness> retVal = this.EndGetMinVolumeOfBusinessByBreedClassID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMinVolumeOfBusinessByBreedClassIDCompleted(object state) {
            if ((this.GetMinVolumeOfBusinessByBreedClassIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMinVolumeOfBusinessByBreedClassIDCompleted(this, new GetMinVolumeOfBusinessByBreedClassIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMinVolumeOfBusinessByBreedClassIDAsync(int breedClassID) {
            this.GetMinVolumeOfBusinessByBreedClassIDAsync(breedClassID, null);
        }
        
        public void GetMinVolumeOfBusinessByBreedClassIDAsync(int breedClassID, object userState) {
            if ((this.onBeginGetMinVolumeOfBusinessByBreedClassIDDelegate == null)) {
                this.onBeginGetMinVolumeOfBusinessByBreedClassIDDelegate = new BeginOperationDelegate(this.OnBeginGetMinVolumeOfBusinessByBreedClassID);
            }
            if ((this.onEndGetMinVolumeOfBusinessByBreedClassIDDelegate == null)) {
                this.onEndGetMinVolumeOfBusinessByBreedClassIDDelegate = new EndOperationDelegate(this.OnEndGetMinVolumeOfBusinessByBreedClassID);
            }
            if ((this.onGetMinVolumeOfBusinessByBreedClassIDCompletedDelegate == null)) {
                this.onGetMinVolumeOfBusinessByBreedClassIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMinVolumeOfBusinessByBreedClassIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetMinVolumeOfBusinessByBreedClassIDDelegate, new object[] {
                        breedClassID}, this.onEndGetMinVolumeOfBusinessByBreedClassIDDelegate, this.onGetMinVolumeOfBusinessByBreedClassIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition> GetAllSpotPosition() {
            return base.Channel.GetAllSpotPosition();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSpotPosition(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSpotPosition(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition> EndGetAllSpotPosition(System.IAsyncResult result) {
            return base.Channel.EndGetAllSpotPosition(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSpotPosition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllSpotPosition(callback, asyncState);
        }
        
        private object[] OnEndGetAllSpotPosition(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition> retVal = this.EndGetAllSpotPosition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSpotPositionCompleted(object state) {
            if ((this.GetAllSpotPositionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSpotPositionCompleted(this, new GetAllSpotPositionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSpotPositionAsync() {
            this.GetAllSpotPositionAsync(null);
        }
        
        public void GetAllSpotPositionAsync(object userState) {
            if ((this.onBeginGetAllSpotPositionDelegate == null)) {
                this.onBeginGetAllSpotPositionDelegate = new BeginOperationDelegate(this.OnBeginGetAllSpotPosition);
            }
            if ((this.onEndGetAllSpotPositionDelegate == null)) {
                this.onEndGetAllSpotPositionDelegate = new EndOperationDelegate(this.OnEndGetAllSpotPosition);
            }
            if ((this.onGetAllSpotPositionCompletedDelegate == null)) {
                this.onGetAllSpotPositionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSpotPositionCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSpotPositionDelegate, null, this.onEndGetAllSpotPositionDelegate, this.onGetAllSpotPositionCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition GetSpotPositionByBreedClassID(int breedClassID) {
            return base.Channel.GetSpotPositionByBreedClassID(breedClassID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSpotPositionByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSpotPositionByBreedClassID(breedClassID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition EndGetSpotPositionByBreedClassID(System.IAsyncResult result) {
            return base.Channel.EndGetSpotPositionByBreedClassID(result);
        }
        
        private System.IAsyncResult OnBeginGetSpotPositionByBreedClassID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int breedClassID = ((int)(inValues[0]));
            return this.BeginGetSpotPositionByBreedClassID(breedClassID, callback, asyncState);
        }
        
        private object[] OnEndGetSpotPositionByBreedClassID(System.IAsyncResult result) {
            ReckoningCounter.DAL.HKTradingRulesService.XH_SpotPosition retVal = this.EndGetSpotPositionByBreedClassID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSpotPositionByBreedClassIDCompleted(object state) {
            if ((this.GetSpotPositionByBreedClassIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSpotPositionByBreedClassIDCompleted(this, new GetSpotPositionByBreedClassIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSpotPositionByBreedClassIDAsync(int breedClassID) {
            this.GetSpotPositionByBreedClassIDAsync(breedClassID, null);
        }
        
        public void GetSpotPositionByBreedClassIDAsync(int breedClassID, object userState) {
            if ((this.onBeginGetSpotPositionByBreedClassIDDelegate == null)) {
                this.onBeginGetSpotPositionByBreedClassIDDelegate = new BeginOperationDelegate(this.OnBeginGetSpotPositionByBreedClassID);
            }
            if ((this.onEndGetSpotPositionByBreedClassIDDelegate == null)) {
                this.onEndGetSpotPositionByBreedClassIDDelegate = new EndOperationDelegate(this.OnEndGetSpotPositionByBreedClassID);
            }
            if ((this.onGetSpotPositionByBreedClassIDCompletedDelegate == null)) {
                this.onGetSpotPositionByBreedClassIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSpotPositionByBreedClassIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetSpotPositionByBreedClassIDDelegate, new object[] {
                        breedClassID}, this.onEndGetSpotPositionByBreedClassIDDelegate, this.onGetSpotPositionByBreedClassIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> GetAllHKCommodity() {
            return base.Channel.GetAllHKCommodity();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllHKCommodity(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllHKCommodity(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> EndGetAllHKCommodity(System.IAsyncResult result) {
            return base.Channel.EndGetAllHKCommodity(result);
        }
        
        private System.IAsyncResult OnBeginGetAllHKCommodity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllHKCommodity(callback, asyncState);
        }
        
        private object[] OnEndGetAllHKCommodity(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> retVal = this.EndGetAllHKCommodity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllHKCommodityCompleted(object state) {
            if ((this.GetAllHKCommodityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllHKCommodityCompleted(this, new GetAllHKCommodityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllHKCommodityAsync() {
            this.GetAllHKCommodityAsync(null);
        }
        
        public void GetAllHKCommodityAsync(object userState) {
            if ((this.onBeginGetAllHKCommodityDelegate == null)) {
                this.onBeginGetAllHKCommodityDelegate = new BeginOperationDelegate(this.OnBeginGetAllHKCommodity);
            }
            if ((this.onEndGetAllHKCommodityDelegate == null)) {
                this.onEndGetAllHKCommodityDelegate = new EndOperationDelegate(this.OnEndGetAllHKCommodity);
            }
            if ((this.onGetAllHKCommodityCompletedDelegate == null)) {
                this.onGetAllHKCommodityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllHKCommodityCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllHKCommodityDelegate, null, this.onEndGetAllHKCommodityDelegate, this.onGetAllHKCommodityCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity GetHKCommodityByHKCommodityCode(string hkcommodityCode) {
            return base.Channel.GetHKCommodityByHKCommodityCode(hkcommodityCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHKCommodityByHKCommodityCode(string hkcommodityCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHKCommodityByHKCommodityCode(hkcommodityCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity EndGetHKCommodityByHKCommodityCode(System.IAsyncResult result) {
            return base.Channel.EndGetHKCommodityByHKCommodityCode(result);
        }
        
        private System.IAsyncResult OnBeginGetHKCommodityByHKCommodityCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string hkcommodityCode = ((string)(inValues[0]));
            return this.BeginGetHKCommodityByHKCommodityCode(hkcommodityCode, callback, asyncState);
        }
        
        private object[] OnEndGetHKCommodityByHKCommodityCode(System.IAsyncResult result) {
            ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity retVal = this.EndGetHKCommodityByHKCommodityCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHKCommodityByHKCommodityCodeCompleted(object state) {
            if ((this.GetHKCommodityByHKCommodityCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHKCommodityByHKCommodityCodeCompleted(this, new GetHKCommodityByHKCommodityCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHKCommodityByHKCommodityCodeAsync(string hkcommodityCode) {
            this.GetHKCommodityByHKCommodityCodeAsync(hkcommodityCode, null);
        }
        
        public void GetHKCommodityByHKCommodityCodeAsync(string hkcommodityCode, object userState) {
            if ((this.onBeginGetHKCommodityByHKCommodityCodeDelegate == null)) {
                this.onBeginGetHKCommodityByHKCommodityCodeDelegate = new BeginOperationDelegate(this.OnBeginGetHKCommodityByHKCommodityCode);
            }
            if ((this.onEndGetHKCommodityByHKCommodityCodeDelegate == null)) {
                this.onEndGetHKCommodityByHKCommodityCodeDelegate = new EndOperationDelegate(this.OnEndGetHKCommodityByHKCommodityCode);
            }
            if ((this.onGetHKCommodityByHKCommodityCodeCompletedDelegate == null)) {
                this.onGetHKCommodityByHKCommodityCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHKCommodityByHKCommodityCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetHKCommodityByHKCommodityCodeDelegate, new object[] {
                        hkcommodityCode}, this.onEndGetHKCommodityByHKCommodityCodeDelegate, this.onGetHKCommodityByHKCommodityCodeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> GetHKCommodityByBreedClassID(int breedClassID) {
            return base.Channel.GetHKCommodityByBreedClassID(breedClassID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHKCommodityByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHKCommodityByBreedClassID(breedClassID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> EndGetHKCommodityByBreedClassID(System.IAsyncResult result) {
            return base.Channel.EndGetHKCommodityByBreedClassID(result);
        }
        
        private System.IAsyncResult OnBeginGetHKCommodityByBreedClassID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int breedClassID = ((int)(inValues[0]));
            return this.BeginGetHKCommodityByBreedClassID(breedClassID, callback, asyncState);
        }
        
        private object[] OnEndGetHKCommodityByBreedClassID(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> retVal = this.EndGetHKCommodityByBreedClassID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHKCommodityByBreedClassIDCompleted(object state) {
            if ((this.GetHKCommodityByBreedClassIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHKCommodityByBreedClassIDCompleted(this, new GetHKCommodityByBreedClassIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHKCommodityByBreedClassIDAsync(int breedClassID) {
            this.GetHKCommodityByBreedClassIDAsync(breedClassID, null);
        }
        
        public void GetHKCommodityByBreedClassIDAsync(int breedClassID, object userState) {
            if ((this.onBeginGetHKCommodityByBreedClassIDDelegate == null)) {
                this.onBeginGetHKCommodityByBreedClassIDDelegate = new BeginOperationDelegate(this.OnBeginGetHKCommodityByBreedClassID);
            }
            if ((this.onEndGetHKCommodityByBreedClassIDDelegate == null)) {
                this.onEndGetHKCommodityByBreedClassIDDelegate = new EndOperationDelegate(this.OnEndGetHKCommodityByBreedClassID);
            }
            if ((this.onGetHKCommodityByBreedClassIDCompletedDelegate == null)) {
                this.onGetHKCommodityByBreedClassIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHKCommodityByBreedClassIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetHKCommodityByBreedClassIDDelegate, new object[] {
                        breedClassID}, this.onEndGetHKCommodityByBreedClassIDDelegate, this.onGetHKCommodityByBreedClassIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> GetNewHKCommodity() {
            return base.Channel.GetNewHKCommodity();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNewHKCommodity(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewHKCommodity(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> EndGetNewHKCommodity(System.IAsyncResult result) {
            return base.Channel.EndGetNewHKCommodity(result);
        }
        
        private System.IAsyncResult OnBeginGetNewHKCommodity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetNewHKCommodity(callback, asyncState);
        }
        
        private object[] OnEndGetNewHKCommodity(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_Commodity> retVal = this.EndGetNewHKCommodity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewHKCommodityCompleted(object state) {
            if ((this.GetNewHKCommodityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewHKCommodityCompleted(this, new GetNewHKCommodityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewHKCommodityAsync() {
            this.GetNewHKCommodityAsync(null);
        }
        
        public void GetNewHKCommodityAsync(object userState) {
            if ((this.onBeginGetNewHKCommodityDelegate == null)) {
                this.onBeginGetNewHKCommodityDelegate = new BeginOperationDelegate(this.OnBeginGetNewHKCommodity);
            }
            if ((this.onEndGetNewHKCommodityDelegate == null)) {
                this.onEndGetNewHKCommodityDelegate = new EndOperationDelegate(this.OnEndGetNewHKCommodity);
            }
            if ((this.onGetNewHKCommodityCompletedDelegate == null)) {
                this.onGetNewHKCommodityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewHKCommodityCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewHKCommodityDelegate, null, this.onEndGetNewHKCommodityDelegate, this.onGetNewHKCommodityCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts> GetAllHKSpotCosts() {
            return base.Channel.GetAllHKSpotCosts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllHKSpotCosts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllHKSpotCosts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts> EndGetAllHKSpotCosts(System.IAsyncResult result) {
            return base.Channel.EndGetAllHKSpotCosts(result);
        }
        
        private System.IAsyncResult OnBeginGetAllHKSpotCosts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllHKSpotCosts(callback, asyncState);
        }
        
        private object[] OnEndGetAllHKSpotCosts(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts> retVal = this.EndGetAllHKSpotCosts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllHKSpotCostsCompleted(object state) {
            if ((this.GetAllHKSpotCostsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllHKSpotCostsCompleted(this, new GetAllHKSpotCostsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllHKSpotCostsAsync() {
            this.GetAllHKSpotCostsAsync(null);
        }
        
        public void GetAllHKSpotCostsAsync(object userState) {
            if ((this.onBeginGetAllHKSpotCostsDelegate == null)) {
                this.onBeginGetAllHKSpotCostsDelegate = new BeginOperationDelegate(this.OnBeginGetAllHKSpotCosts);
            }
            if ((this.onEndGetAllHKSpotCostsDelegate == null)) {
                this.onEndGetAllHKSpotCostsDelegate = new EndOperationDelegate(this.OnEndGetAllHKSpotCosts);
            }
            if ((this.onGetAllHKSpotCostsCompletedDelegate == null)) {
                this.onGetAllHKSpotCostsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllHKSpotCostsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllHKSpotCostsDelegate, null, this.onEndGetAllHKSpotCostsDelegate, this.onGetAllHKSpotCostsCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts GetHKSpotCostsByBreedClassID(int breedClassID) {
            return base.Channel.GetHKSpotCostsByBreedClassID(breedClassID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHKSpotCostsByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHKSpotCostsByBreedClassID(breedClassID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts EndGetHKSpotCostsByBreedClassID(System.IAsyncResult result) {
            return base.Channel.EndGetHKSpotCostsByBreedClassID(result);
        }
        
        private System.IAsyncResult OnBeginGetHKSpotCostsByBreedClassID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int breedClassID = ((int)(inValues[0]));
            return this.BeginGetHKSpotCostsByBreedClassID(breedClassID, callback, asyncState);
        }
        
        private object[] OnEndGetHKSpotCostsByBreedClassID(System.IAsyncResult result) {
            ReckoningCounter.DAL.HKTradingRulesService.HK_SpotCosts retVal = this.EndGetHKSpotCostsByBreedClassID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHKSpotCostsByBreedClassIDCompleted(object state) {
            if ((this.GetHKSpotCostsByBreedClassIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHKSpotCostsByBreedClassIDCompleted(this, new GetHKSpotCostsByBreedClassIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHKSpotCostsByBreedClassIDAsync(int breedClassID) {
            this.GetHKSpotCostsByBreedClassIDAsync(breedClassID, null);
        }
        
        public void GetHKSpotCostsByBreedClassIDAsync(int breedClassID, object userState) {
            if ((this.onBeginGetHKSpotCostsByBreedClassIDDelegate == null)) {
                this.onBeginGetHKSpotCostsByBreedClassIDDelegate = new BeginOperationDelegate(this.OnBeginGetHKSpotCostsByBreedClassID);
            }
            if ((this.onEndGetHKSpotCostsByBreedClassIDDelegate == null)) {
                this.onEndGetHKSpotCostsByBreedClassIDDelegate = new EndOperationDelegate(this.OnEndGetHKSpotCostsByBreedClassID);
            }
            if ((this.onGetHKSpotCostsByBreedClassIDCompletedDelegate == null)) {
                this.onGetHKSpotCostsByBreedClassIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHKSpotCostsByBreedClassIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetHKSpotCostsByBreedClassIDDelegate, new object[] {
                        breedClassID}, this.onEndGetHKSpotCostsByBreedClassIDDelegate, this.onGetHKSpotCostsByBreedClassIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules> GetAllHKSpotTradeRules() {
            return base.Channel.GetAllHKSpotTradeRules();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllHKSpotTradeRules(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllHKSpotTradeRules(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules> EndGetAllHKSpotTradeRules(System.IAsyncResult result) {
            return base.Channel.EndGetAllHKSpotTradeRules(result);
        }
        
        private System.IAsyncResult OnBeginGetAllHKSpotTradeRules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllHKSpotTradeRules(callback, asyncState);
        }
        
        private object[] OnEndGetAllHKSpotTradeRules(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules> retVal = this.EndGetAllHKSpotTradeRules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllHKSpotTradeRulesCompleted(object state) {
            if ((this.GetAllHKSpotTradeRulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllHKSpotTradeRulesCompleted(this, new GetAllHKSpotTradeRulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllHKSpotTradeRulesAsync() {
            this.GetAllHKSpotTradeRulesAsync(null);
        }
        
        public void GetAllHKSpotTradeRulesAsync(object userState) {
            if ((this.onBeginGetAllHKSpotTradeRulesDelegate == null)) {
                this.onBeginGetAllHKSpotTradeRulesDelegate = new BeginOperationDelegate(this.OnBeginGetAllHKSpotTradeRules);
            }
            if ((this.onEndGetAllHKSpotTradeRulesDelegate == null)) {
                this.onEndGetAllHKSpotTradeRulesDelegate = new EndOperationDelegate(this.OnEndGetAllHKSpotTradeRules);
            }
            if ((this.onGetAllHKSpotTradeRulesCompletedDelegate == null)) {
                this.onGetAllHKSpotTradeRulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllHKSpotTradeRulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllHKSpotTradeRulesDelegate, null, this.onEndGetAllHKSpotTradeRulesDelegate, this.onGetAllHKSpotTradeRulesCompletedDelegate, userState);
        }
        
        public ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules GetHKSpotTradeRulesByBreedClassID(int breedClassID) {
            return base.Channel.GetHKSpotTradeRulesByBreedClassID(breedClassID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHKSpotTradeRulesByBreedClassID(int breedClassID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHKSpotTradeRulesByBreedClassID(breedClassID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules EndGetHKSpotTradeRulesByBreedClassID(System.IAsyncResult result) {
            return base.Channel.EndGetHKSpotTradeRulesByBreedClassID(result);
        }
        
        private System.IAsyncResult OnBeginGetHKSpotTradeRulesByBreedClassID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int breedClassID = ((int)(inValues[0]));
            return this.BeginGetHKSpotTradeRulesByBreedClassID(breedClassID, callback, asyncState);
        }
        
        private object[] OnEndGetHKSpotTradeRulesByBreedClassID(System.IAsyncResult result) {
            ReckoningCounter.DAL.HKTradingRulesService.HK_SpotTradeRules retVal = this.EndGetHKSpotTradeRulesByBreedClassID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHKSpotTradeRulesByBreedClassIDCompleted(object state) {
            if ((this.GetHKSpotTradeRulesByBreedClassIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHKSpotTradeRulesByBreedClassIDCompleted(this, new GetHKSpotTradeRulesByBreedClassIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHKSpotTradeRulesByBreedClassIDAsync(int breedClassID) {
            this.GetHKSpotTradeRulesByBreedClassIDAsync(breedClassID, null);
        }
        
        public void GetHKSpotTradeRulesByBreedClassIDAsync(int breedClassID, object userState) {
            if ((this.onBeginGetHKSpotTradeRulesByBreedClassIDDelegate == null)) {
                this.onBeginGetHKSpotTradeRulesByBreedClassIDDelegate = new BeginOperationDelegate(this.OnBeginGetHKSpotTradeRulesByBreedClassID);
            }
            if ((this.onEndGetHKSpotTradeRulesByBreedClassIDDelegate == null)) {
                this.onEndGetHKSpotTradeRulesByBreedClassIDDelegate = new EndOperationDelegate(this.OnEndGetHKSpotTradeRulesByBreedClassID);
            }
            if ((this.onGetHKSpotTradeRulesByBreedClassIDCompletedDelegate == null)) {
                this.onGetHKSpotTradeRulesByBreedClassIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHKSpotTradeRulesByBreedClassIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetHKSpotTradeRulesByBreedClassIDDelegate, new object[] {
                        breedClassID}, this.onEndGetHKSpotTradeRulesByBreedClassIDDelegate, this.onGetHKSpotTradeRulesByBreedClassIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_MinPriceFieldRange> GetAllHKMinPriceFieldRange() {
            return base.Channel.GetAllHKMinPriceFieldRange();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllHKMinPriceFieldRange(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllHKMinPriceFieldRange(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_MinPriceFieldRange> EndGetAllHKMinPriceFieldRange(System.IAsyncResult result) {
            return base.Channel.EndGetAllHKMinPriceFieldRange(result);
        }
        
        private System.IAsyncResult OnBeginGetAllHKMinPriceFieldRange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllHKMinPriceFieldRange(callback, asyncState);
        }
        
        private object[] OnEndGetAllHKMinPriceFieldRange(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HK_MinPriceFieldRange> retVal = this.EndGetAllHKMinPriceFieldRange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllHKMinPriceFieldRangeCompleted(object state) {
            if ((this.GetAllHKMinPriceFieldRangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllHKMinPriceFieldRangeCompleted(this, new GetAllHKMinPriceFieldRangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllHKMinPriceFieldRangeAsync() {
            this.GetAllHKMinPriceFieldRangeAsync(null);
        }
        
        public void GetAllHKMinPriceFieldRangeAsync(object userState) {
            if ((this.onBeginGetAllHKMinPriceFieldRangeDelegate == null)) {
                this.onBeginGetAllHKMinPriceFieldRangeDelegate = new BeginOperationDelegate(this.OnBeginGetAllHKMinPriceFieldRange);
            }
            if ((this.onEndGetAllHKMinPriceFieldRangeDelegate == null)) {
                this.onEndGetAllHKMinPriceFieldRangeDelegate = new EndOperationDelegate(this.OnEndGetAllHKMinPriceFieldRange);
            }
            if ((this.onGetAllHKMinPriceFieldRangeCompletedDelegate == null)) {
                this.onGetAllHKMinPriceFieldRangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllHKMinPriceFieldRangeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllHKMinPriceFieldRangeDelegate, null, this.onEndGetAllHKMinPriceFieldRangeDelegate, this.onGetAllHKMinPriceFieldRangeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity> GetHKCommodityListArray() {
            return base.Channel.GetHKCommodityListArray();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHKCommodityListArray(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHKCommodityListArray(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity> EndGetHKCommodityListArray(System.IAsyncResult result) {
            return base.Channel.EndGetHKCommodityListArray(result);
        }
        
        private System.IAsyncResult OnBeginGetHKCommodityListArray(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetHKCommodityListArray(callback, asyncState);
        }
        
        private object[] OnEndGetHKCommodityListArray(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.OnstageHK_Commodity> retVal = this.EndGetHKCommodityListArray(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHKCommodityListArrayCompleted(object state) {
            if ((this.GetHKCommodityListArrayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHKCommodityListArrayCompleted(this, new GetHKCommodityListArrayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHKCommodityListArrayAsync() {
            this.GetHKCommodityListArrayAsync(null);
        }
        
        public void GetHKCommodityListArrayAsync(object userState) {
            if ((this.onBeginGetHKCommodityListArrayDelegate == null)) {
                this.onBeginGetHKCommodityListArrayDelegate = new BeginOperationDelegate(this.OnBeginGetHKCommodityListArray);
            }
            if ((this.onEndGetHKCommodityListArrayDelegate == null)) {
                this.onEndGetHKCommodityListArrayDelegate = new EndOperationDelegate(this.OnEndGetHKCommodityListArray);
            }
            if ((this.onGetHKCommodityListArrayCompletedDelegate == null)) {
                this.onGetHKCommodityListArrayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHKCommodityListArrayCompleted);
            }
            base.InvokeAsync(this.onBeginGetHKCommodityListArrayDelegate, null, this.onEndGetHKCommodityListArrayDelegate, this.onGetHKCommodityListArrayCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HKProfessionInfo> GetListHKProfessionInfoArray() {
            return base.Channel.GetListHKProfessionInfoArray();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListHKProfessionInfoArray(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListHKProfessionInfoArray(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HKProfessionInfo> EndGetListHKProfessionInfoArray(System.IAsyncResult result) {
            return base.Channel.EndGetListHKProfessionInfoArray(result);
        }
        
        private System.IAsyncResult OnBeginGetListHKProfessionInfoArray(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListHKProfessionInfoArray(callback, asyncState);
        }
        
        private object[] OnEndGetListHKProfessionInfoArray(System.IAsyncResult result) {
            System.Collections.Generic.List<ReckoningCounter.DAL.HKTradingRulesService.HKProfessionInfo> retVal = this.EndGetListHKProfessionInfoArray(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListHKProfessionInfoArrayCompleted(object state) {
            if ((this.GetListHKProfessionInfoArrayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListHKProfessionInfoArrayCompleted(this, new GetListHKProfessionInfoArrayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListHKProfessionInfoArrayAsync() {
            this.GetListHKProfessionInfoArrayAsync(null);
        }
        
        public void GetListHKProfessionInfoArrayAsync(object userState) {
            if ((this.onBeginGetListHKProfessionInfoArrayDelegate == null)) {
                this.onBeginGetListHKProfessionInfoArrayDelegate = new BeginOperationDelegate(this.OnBeginGetListHKProfessionInfoArray);
            }
            if ((this.onEndGetListHKProfessionInfoArrayDelegate == null)) {
                this.onEndGetListHKProfessionInfoArrayDelegate = new EndOperationDelegate(this.OnEndGetListHKProfessionInfoArray);
            }
            if ((this.onGetListHKProfessionInfoArrayCompletedDelegate == null)) {
                this.onGetListHKProfessionInfoArrayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListHKProfessionInfoArrayCompleted);
            }
            base.InvokeAsync(this.onBeginGetListHKProfessionInfoArrayDelegate, null, this.onEndGetListHKProfessionInfoArrayDelegate, this.onGetListHKProfessionInfoArrayCompletedDelegate, userState);
        }
    }
}
