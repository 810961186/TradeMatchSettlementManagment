//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReckoningCapabilityTest.DoAccountAndCapitalManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class AccountEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountAAttributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrencyHKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrencyRMBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrencyUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPassWordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountAAttribution {
            get {
                return this.AccountAAttributionField;
            }
            set {
                if ((this.AccountAAttributionField.Equals(value) != true)) {
                    this.AccountAAttributionField = value;
                    this.RaisePropertyChanged("AccountAAttribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrencyHK {
            get {
                return this.CurrencyHKField;
            }
            set {
                if ((this.CurrencyHKField.Equals(value) != true)) {
                    this.CurrencyHKField = value;
                    this.RaisePropertyChanged("CurrencyHK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrencyRMB {
            get {
                return this.CurrencyRMBField;
            }
            set {
                if ((this.CurrencyRMBField.Equals(value) != true)) {
                    this.CurrencyRMBField = value;
                    this.RaisePropertyChanged("CurrencyRMB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrencyUS {
            get {
                return this.CurrencyUSField;
            }
            set {
                if ((this.CurrencyUSField.Equals(value) != true)) {
                    this.CurrencyUSField = value;
                    this.RaisePropertyChanged("CurrencyUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleNumber {
            get {
                return this.RoleNumberField;
            }
            set {
                if ((this.RoleNumberField.Equals(value) != true)) {
                    this.RoleNumberField = value;
                    this.RaisePropertyChanged("RoleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassWord {
            get {
                return this.TraderPassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPassWordField, value) != true)) {
                    this.TraderPassWordField = value;
                    this.RaisePropertyChanged("TraderPassWord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FindAccountEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class FindAccountEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountAttributionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountAttributionType {
            get {
                return this.AccountAttributionTypeField;
            }
            set {
                if ((this.AccountAttributionTypeField.Equals(value) != true)) {
                    this.AccountAttributionTypeField = value;
                    this.RaisePropertyChanged("AccountAttributionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleNumber {
            get {
                return this.RoleNumberField;
            }
            set {
                if ((this.RoleNumberField.Equals(value) != true)) {
                    this.RoleNumberField = value;
                    this.RaisePropertyChanged("RoleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountFindResultEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class AccountFindResultEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountState {
            get {
                return this.AccountStateField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountStateField, value) != true)) {
                    this.AccountStateField = value;
                    this.RaisePropertyChanged("AccountState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CM_BreedClass", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class CM_BreedClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountTypeIDFundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountTypeIDHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BourseTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BreedClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreedClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BreedClassTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeleteStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ISHKBreedClassTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ISSysDefaultBreedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountTypeIDFund {
            get {
                return this.AccountTypeIDFundField;
            }
            set {
                if ((this.AccountTypeIDFundField.Equals(value) != true)) {
                    this.AccountTypeIDFundField = value;
                    this.RaisePropertyChanged("AccountTypeIDFund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountTypeIDHold {
            get {
                return this.AccountTypeIDHoldField;
            }
            set {
                if ((this.AccountTypeIDHoldField.Equals(value) != true)) {
                    this.AccountTypeIDHoldField = value;
                    this.RaisePropertyChanged("AccountTypeIDHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BourseTypeID {
            get {
                return this.BourseTypeIDField;
            }
            set {
                if ((this.BourseTypeIDField.Equals(value) != true)) {
                    this.BourseTypeIDField = value;
                    this.RaisePropertyChanged("BourseTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BreedClassID {
            get {
                return this.BreedClassIDField;
            }
            set {
                if ((this.BreedClassIDField.Equals(value) != true)) {
                    this.BreedClassIDField = value;
                    this.RaisePropertyChanged("BreedClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BreedClassName {
            get {
                return this.BreedClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BreedClassNameField, value) != true)) {
                    this.BreedClassNameField = value;
                    this.RaisePropertyChanged("BreedClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BreedClassTypeID {
            get {
                return this.BreedClassTypeIDField;
            }
            set {
                if ((this.BreedClassTypeIDField.Equals(value) != true)) {
                    this.BreedClassTypeIDField = value;
                    this.RaisePropertyChanged("BreedClassTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeleteState {
            get {
                return this.DeleteStateField;
            }
            set {
                if ((this.DeleteStateField.Equals(value) != true)) {
                    this.DeleteStateField = value;
                    this.RaisePropertyChanged("DeleteState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ISHKBreedClassType {
            get {
                return this.ISHKBreedClassTypeField;
            }
            set {
                if ((this.ISHKBreedClassTypeField.Equals(value) != true)) {
                    this.ISHKBreedClassTypeField = value;
                    this.RaisePropertyChanged("ISHKBreedClassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ISSysDefaultBreed {
            get {
                return this.ISSysDefaultBreedField;
            }
            set {
                if ((this.ISSysDefaultBreedField.Equals(value) != true)) {
                    this.ISSysDefaultBreedField = value;
                    this.RaisePropertyChanged("ISSysDefaultBreed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddCapitalEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class AddCapitalEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AddHKAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AddRMBAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AddUSAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AddHKAmount {
            get {
                return this.AddHKAmountField;
            }
            set {
                if ((this.AddHKAmountField.Equals(value) != true)) {
                    this.AddHKAmountField = value;
                    this.RaisePropertyChanged("AddHKAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AddRMBAmount {
            get {
                return this.AddRMBAmountField;
            }
            set {
                if ((this.AddRMBAmountField.Equals(value) != true)) {
                    this.AddRMBAmountField = value;
                    this.RaisePropertyChanged("AddRMBAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AddUSAmount {
            get {
                return this.AddUSAmountField;
            }
            set {
                if ((this.AddUSAmountField.Equals(value) != true)) {
                    this.AddUSAmountField = value;
                    this.RaisePropertyChanged("AddUSAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankCapitalAccount {
            get {
                return this.BankCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BankCapitalAccountField, value) != true)) {
                    this.BankCapitalAccountField = value;
                    this.RaisePropertyChanged("BankCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FreeTransferEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class FreeTransferEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromCapitalAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToCapitalAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransferAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromCapitalAccount {
            get {
                return this.FromCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FromCapitalAccountField, value) != true)) {
                    this.FromCapitalAccountField = value;
                    this.RaisePropertyChanged("FromCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromCapitalAccountType {
            get {
                return this.FromCapitalAccountTypeField;
            }
            set {
                if ((this.FromCapitalAccountTypeField.Equals(value) != true)) {
                    this.FromCapitalAccountTypeField = value;
                    this.RaisePropertyChanged("FromCapitalAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToCapitalAccount {
            get {
                return this.ToCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ToCapitalAccountField, value) != true)) {
                    this.ToCapitalAccountField = value;
                    this.RaisePropertyChanged("ToCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToCapitalAccountType {
            get {
                return this.ToCapitalAccountTypeField;
            }
            set {
                if ((this.ToCapitalAccountTypeField.Equals(value) != true)) {
                    this.ToCapitalAccountTypeField = value;
                    this.RaisePropertyChanged("ToCapitalAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransferAmount {
            get {
                return this.TransferAmountField;
            }
            set {
                if ((this.TransferAmountField.Equals(value) != true)) {
                    this.TransferAmountField = value;
                    this.RaisePropertyChanged("TransferAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.CurrencyType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesCurrencyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HK = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        US = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QH_TodaySettlementPriceInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.QH")]
    [System.SerializableAttribute()]
    public partial class QH_TodaySettlementPriceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SettlementPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradingDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityCode {
            get {
                return this.CommodityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityCodeField, value) != true)) {
                    this.CommodityCodeField = value;
                    this.RaisePropertyChanged("CommodityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SettlementPrice {
            get {
                return this.SettlementPriceField;
            }
            set {
                if ((this.SettlementPriceField.Equals(value) != true)) {
                    this.SettlementPriceField = value;
                    this.RaisePropertyChanged("SettlementPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradingDate {
            get {
                return this.TradingDateField;
            }
            set {
                if ((this.TradingDateField.Equals(value) != true)) {
                    this.TradingDateField = value;
                    this.RaisePropertyChanged("TradingDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.OrderPriceType", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Contants")]
    public enum TypesOrderPriceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPTMarketPrice = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPTLimited = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HighLowRangeValue", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.BLL.DelegateValidate")]
    [System.SerializableAttribute()]
    public partial class HighLowRangeValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HighRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoAccountAndCapitalManagementService.HKRangeValue HongKongRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LowRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHighLowRangeType RangeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HighRangeValue {
            get {
                return this.HighRangeValueField;
            }
            set {
                if ((this.HighRangeValueField.Equals(value) != true)) {
                    this.HighRangeValueField = value;
                    this.RaisePropertyChanged("HighRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.HKRangeValue HongKongRangeValue {
            get {
                return this.HongKongRangeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.HongKongRangeValueField, value) != true)) {
                    this.HongKongRangeValueField = value;
                    this.RaisePropertyChanged("HongKongRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LowRangeValue {
            get {
                return this.LowRangeValueField;
            }
            set {
                if ((this.LowRangeValueField.Equals(value) != true)) {
                    this.LowRangeValueField = value;
                    this.RaisePropertyChanged("LowRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHighLowRangeType RangeType {
            get {
                return this.RangeTypeField;
            }
            set {
                if ((this.RangeTypeField.Equals(value) != true)) {
                    this.RangeTypeField = value;
                    this.RaisePropertyChanged("RangeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKRangeValue", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.BLL.DelegateValidate")]
    [System.SerializableAttribute()]
    public partial class HKRangeValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyHighRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyLowRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHKValidPriceType HKValidPriceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellHighRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellLowRangeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyHighRangeValue {
            get {
                return this.BuyHighRangeValueField;
            }
            set {
                if ((this.BuyHighRangeValueField.Equals(value) != true)) {
                    this.BuyHighRangeValueField = value;
                    this.RaisePropertyChanged("BuyHighRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyLowRangeValue {
            get {
                return this.BuyLowRangeValueField;
            }
            set {
                if ((this.BuyLowRangeValueField.Equals(value) != true)) {
                    this.BuyLowRangeValueField = value;
                    this.RaisePropertyChanged("BuyLowRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHKValidPriceType HKValidPriceType {
            get {
                return this.HKValidPriceTypeField;
            }
            set {
                if ((this.HKValidPriceTypeField.Equals(value) != true)) {
                    this.HKValidPriceTypeField = value;
                    this.RaisePropertyChanged("HKValidPriceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellHighRangeValue {
            get {
                return this.SellHighRangeValueField;
            }
            set {
                if ((this.SellHighRangeValueField.Equals(value) != true)) {
                    this.SellHighRangeValueField = value;
                    this.RaisePropertyChanged("SellHighRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellLowRangeValue {
            get {
                return this.SellLowRangeValueField;
            }
            set {
                if ((this.SellLowRangeValueField.Equals(value) != true)) {
                    this.SellLowRangeValueField = value;
                    this.RaisePropertyChanged("SellLowRangeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.HighLowRangeType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesHighLowRangeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YesterdayCloseScale = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecentDealScale = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buy1Sell1Scale = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RightPermitHighLow = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HongKongPrice = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecentDealNumber = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YesterdayBalanceScale = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YesterdayBalanceNumber = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.HKValidPriceType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesHKValidPriceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellAndBuy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoBuy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSell = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSellAndBuy = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.HKPriceType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesHKPriceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ELO = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLO = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.TransactionDirection", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesTransactionDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buying = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selling = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradersAccountCapitalInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class TradersAccountCapitalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableCapital {
            get {
                return this.AvailableCapitalField;
            }
            set {
                if ((this.AvailableCapitalField.Equals(value) != true)) {
                    this.AvailableCapitalField = value;
                    this.RaisePropertyChanged("AvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCapital {
            get {
                return this.FreezeCapitalField;
            }
            set {
                if ((this.FreezeCapitalField.Equals(value) != true)) {
                    this.FreezeCapitalField = value;
                    this.RaisePropertyChanged("FreezeCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitCapital {
            get {
                return this.InitCapitalField;
            }
            set {
                if ((this.InitCapitalField.Equals(value) != true)) {
                    this.InitCapitalField = value;
                    this.RaisePropertyChanged("InitCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarketDataLevel", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class MarketDataLevel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyFirstPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyFirstVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyFivePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyFiveVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyFourthPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyFourthVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuySecondPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuySecondVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyThirdPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyThirdVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LastPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LastVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LowerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MarketRefreshTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellFirstPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellFirstVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellFivePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellFiveVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellFourthPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellFourthVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellSecondPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellSecondVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellThirdPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellThirdVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UpPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal YesterPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyFirstPrice {
            get {
                return this.BuyFirstPriceField;
            }
            set {
                if ((this.BuyFirstPriceField.Equals(value) != true)) {
                    this.BuyFirstPriceField = value;
                    this.RaisePropertyChanged("BuyFirstPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyFirstVolume {
            get {
                return this.BuyFirstVolumeField;
            }
            set {
                if ((this.BuyFirstVolumeField.Equals(value) != true)) {
                    this.BuyFirstVolumeField = value;
                    this.RaisePropertyChanged("BuyFirstVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyFivePrice {
            get {
                return this.BuyFivePriceField;
            }
            set {
                if ((this.BuyFivePriceField.Equals(value) != true)) {
                    this.BuyFivePriceField = value;
                    this.RaisePropertyChanged("BuyFivePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyFiveVolume {
            get {
                return this.BuyFiveVolumeField;
            }
            set {
                if ((this.BuyFiveVolumeField.Equals(value) != true)) {
                    this.BuyFiveVolumeField = value;
                    this.RaisePropertyChanged("BuyFiveVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyFourthPrice {
            get {
                return this.BuyFourthPriceField;
            }
            set {
                if ((this.BuyFourthPriceField.Equals(value) != true)) {
                    this.BuyFourthPriceField = value;
                    this.RaisePropertyChanged("BuyFourthPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyFourthVolume {
            get {
                return this.BuyFourthVolumeField;
            }
            set {
                if ((this.BuyFourthVolumeField.Equals(value) != true)) {
                    this.BuyFourthVolumeField = value;
                    this.RaisePropertyChanged("BuyFourthVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuySecondPrice {
            get {
                return this.BuySecondPriceField;
            }
            set {
                if ((this.BuySecondPriceField.Equals(value) != true)) {
                    this.BuySecondPriceField = value;
                    this.RaisePropertyChanged("BuySecondPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuySecondVolume {
            get {
                return this.BuySecondVolumeField;
            }
            set {
                if ((this.BuySecondVolumeField.Equals(value) != true)) {
                    this.BuySecondVolumeField = value;
                    this.RaisePropertyChanged("BuySecondVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyThirdPrice {
            get {
                return this.BuyThirdPriceField;
            }
            set {
                if ((this.BuyThirdPriceField.Equals(value) != true)) {
                    this.BuyThirdPriceField = value;
                    this.RaisePropertyChanged("BuyThirdPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyThirdVolume {
            get {
                return this.BuyThirdVolumeField;
            }
            set {
                if ((this.BuyThirdVolumeField.Equals(value) != true)) {
                    this.BuyThirdVolumeField = value;
                    this.RaisePropertyChanged("BuyThirdVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LastPrice {
            get {
                return this.LastPriceField;
            }
            set {
                if ((this.LastPriceField.Equals(value) != true)) {
                    this.LastPriceField = value;
                    this.RaisePropertyChanged("LastPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LastVolume {
            get {
                return this.LastVolumeField;
            }
            set {
                if ((this.LastVolumeField.Equals(value) != true)) {
                    this.LastVolumeField = value;
                    this.RaisePropertyChanged("LastVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LowerPrice {
            get {
                return this.LowerPriceField;
            }
            set {
                if ((this.LowerPriceField.Equals(value) != true)) {
                    this.LowerPriceField = value;
                    this.RaisePropertyChanged("LowerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MarketRefreshTime {
            get {
                return this.MarketRefreshTimeField;
            }
            set {
                if ((this.MarketRefreshTimeField.Equals(value) != true)) {
                    this.MarketRefreshTimeField = value;
                    this.RaisePropertyChanged("MarketRefreshTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellFirstPrice {
            get {
                return this.SellFirstPriceField;
            }
            set {
                if ((this.SellFirstPriceField.Equals(value) != true)) {
                    this.SellFirstPriceField = value;
                    this.RaisePropertyChanged("SellFirstPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellFirstVolume {
            get {
                return this.SellFirstVolumeField;
            }
            set {
                if ((this.SellFirstVolumeField.Equals(value) != true)) {
                    this.SellFirstVolumeField = value;
                    this.RaisePropertyChanged("SellFirstVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellFivePrice {
            get {
                return this.SellFivePriceField;
            }
            set {
                if ((this.SellFivePriceField.Equals(value) != true)) {
                    this.SellFivePriceField = value;
                    this.RaisePropertyChanged("SellFivePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellFiveVolume {
            get {
                return this.SellFiveVolumeField;
            }
            set {
                if ((this.SellFiveVolumeField.Equals(value) != true)) {
                    this.SellFiveVolumeField = value;
                    this.RaisePropertyChanged("SellFiveVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellFourthPrice {
            get {
                return this.SellFourthPriceField;
            }
            set {
                if ((this.SellFourthPriceField.Equals(value) != true)) {
                    this.SellFourthPriceField = value;
                    this.RaisePropertyChanged("SellFourthPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellFourthVolume {
            get {
                return this.SellFourthVolumeField;
            }
            set {
                if ((this.SellFourthVolumeField.Equals(value) != true)) {
                    this.SellFourthVolumeField = value;
                    this.RaisePropertyChanged("SellFourthVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellSecondPrice {
            get {
                return this.SellSecondPriceField;
            }
            set {
                if ((this.SellSecondPriceField.Equals(value) != true)) {
                    this.SellSecondPriceField = value;
                    this.RaisePropertyChanged("SellSecondPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellSecondVolume {
            get {
                return this.SellSecondVolumeField;
            }
            set {
                if ((this.SellSecondVolumeField.Equals(value) != true)) {
                    this.SellSecondVolumeField = value;
                    this.RaisePropertyChanged("SellSecondVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellThirdPrice {
            get {
                return this.SellThirdPriceField;
            }
            set {
                if ((this.SellThirdPriceField.Equals(value) != true)) {
                    this.SellThirdPriceField = value;
                    this.RaisePropertyChanged("SellThirdPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellThirdVolume {
            get {
                return this.SellThirdVolumeField;
            }
            set {
                if ((this.SellThirdVolumeField.Equals(value) != true)) {
                    this.SellThirdVolumeField = value;
                    this.RaisePropertyChanged("SellThirdVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpPrice {
            get {
                return this.UpPriceField;
            }
            set {
                if ((this.UpPriceField.Equals(value) != true)) {
                    this.UpPriceField = value;
                    this.RaisePropertyChanged("UpPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal YesterPrice {
            get {
                return this.YesterPriceField;
            }
            set {
                if ((this.YesterPriceField.Equals(value) != true)) {
                    this.YesterPriceField = value;
                    this.RaisePropertyChanged("YesterPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CapitalPersonalization", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class CapitalPersonalization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HKAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RMBAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal USAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HKAmount {
            get {
                return this.HKAmountField;
            }
            set {
                if ((this.HKAmountField.Equals(value) != true)) {
                    this.HKAmountField = value;
                    this.RaisePropertyChanged("HKAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonalType {
            get {
                return this.PersonalTypeField;
            }
            set {
                if ((this.PersonalTypeField.Equals(value) != true)) {
                    this.PersonalTypeField = value;
                    this.RaisePropertyChanged("PersonalType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RMBAmount {
            get {
                return this.RMBAmountField;
            }
            set {
                if ((this.RMBAmountField.Equals(value) != true)) {
                    this.RMBAmountField = value;
                    this.RaisePropertyChanged("RMBAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetCurrencyType {
            get {
                return this.SetCurrencyTypeField;
            }
            set {
                if ((this.SetCurrencyTypeField.Equals(value) != true)) {
                    this.SetCurrencyTypeField = value;
                    this.RaisePropertyChanged("SetCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TradeID {
            get {
                return this.TradeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeIDField, value) != true)) {
                    this.TradeIDField = value;
                    this.RaisePropertyChanged("TradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal USAmount {
            get {
                return this.USAmountField;
            }
            set {
                if ((this.USAmountField.Equals(value) != true)) {
                    this.USAmountField = value;
                    this.RaisePropertyChanged("USAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DoAccountAndCapitalManagementService.IAccountAndCapitalManagement")]
    public interface IAccountAndCapitalManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/SingleTraderOpenAccount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/SingleTraderOpenAccountResponse")]
        bool SingleTraderOpenAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AccountEntity[] accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/VolumeTraderOpenAccount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/VolumeTraderOpenAccountResponse")]
        bool VolumeTraderOpenAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AccountEntity[] accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/DeleteSingleTraderAccount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/DeleteSingleTraderAccountResponse" +
            "")]
        bool DeleteSingleTraderAccount(out string outMessage, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/DeleteVolumeTraderAccount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/DeleteVolumeTraderAccountResponse" +
            "")]
        bool DeleteVolumeTraderAccount(out string outMessage, string[] userIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/FreezeAccount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/FreezeAccountResponse")]
        bool FreezeAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.FindAccountEntity[] accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/ThawAccount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/ThawAccountResponse")]
        bool ThawAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.FindAccountEntity[] accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/FindAccount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/FindAccountResponse")]
        ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AccountFindResultEntity[] FindAccount(out string outMessage, string traderId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/FindTradePrivileges", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/FindTradePrivilegesResponse")]
        ReckoningCapabilityTest.DoAccountAndCapitalManagementService.CM_BreedClass[] FindTradePrivileges(out string outMessage, string traderId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/UpdateUserPassword", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/UpdateUserPasswordResponse")]
        bool UpdateUserPassword(out string outMessage, string userId, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/AddCapital", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/AddCapitalResponse")]
        bool AddCapital(out string outMessage, [System.ServiceModel.MessageParameterAttribute(Name="addCapital")] ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AddCapitalEntity addCapital1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/TwoAccountsFreeTransferFunds", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/TwoAccountsFreeTransferFundsRespo" +
            "nse")]
        bool TwoAccountsFreeTransferFunds(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.FreeTransferEntity freeTransfer, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesCurrencyType currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/CheckChannel", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/CheckChannelResponse")]
        string CheckChannel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/IsReckoningDone", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/IsReckoningDoneResponse")]
        bool IsReckoningDone(System.DateTime doneDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/IsReckoning", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/IsReckoningResponse")]
        bool IsReckoning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/FaultRecoveryReckoning", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/FaultRecoveryReckoningResponse")]
        bool FaultRecoveryReckoning(out string errorMsg, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.QH_TodaySettlementPriceInfo[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetSpotMaxOrderAmount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetSpotMaxOrderAmountResponse")]
        long GetSpotMaxOrderAmount(out string outMessage, string TraderId, float OrderPrice, string Code, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesOrderPriceType orderPriceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetFutureMaxOrderAmount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetFutureMaxOrderAmountResponse")]
        long GetFutureMaxOrderAmount(out string outMessage, string TraderId, float OrderPrice, string Code, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesOrderPriceType orderPriceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetHighLowRangeValueByCommodityCo" +
            "de", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetHighLowRangeValueByCommodityCo" +
            "deResponse")]
        ReckoningCapabilityTest.DoAccountAndCapitalManagementService.HighLowRangeValue GetHighLowRangeValueByCommodityCode(string code, decimal orderPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetHKMaxOrderAmount", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetHKMaxOrderAmountResponse")]
        long GetHKMaxOrderAmount(out string outMessage, string TraderId, float OrderPrice, string Code, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHKPriceType orderPriceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetHKHighLowRangeValueByCommodity" +
            "Code", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetHKHighLowRangeValueByCommodity" +
            "CodeResponse")]
        ReckoningCapabilityTest.DoAccountAndCapitalManagementService.HighLowRangeValue GetHKHighLowRangeValueByCommodityCode(string code, decimal orderPrice, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHKPriceType priceType, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesTransactionDirection tranType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/AdminFindTraderCapitalAccountInfo" +
            "", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/AdminFindTraderCapitalAccountInfo" +
            "Response")]
        ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TradersAccountCapitalInfo[] AdminFindTraderCapitalAccountInfo(out string strErrorMessage, string adminId, string adminPassword, string traderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetMarketDataInfoByCode", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetMarketDataInfoByCodeResponse")]
        ReckoningCapabilityTest.DoAccountAndCapitalManagementService.MarketDataLevel GetMarketDataInfoByCode(out string errMsg, string code, int breedClassType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetAllCM_CommodityByBreedClassTyp" +
            "eID", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetAllCM_CommodityByBreedClassTyp" +
            "eIDResponse")]
        string[] GetAllCM_CommodityByBreedClassTypeID(int classTypeID, bool isRemoveExpired);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/AdminPersonalizationCapital", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/AdminPersonalizationCapitalRespon" +
            "se")]
        bool AdminPersonalizationCapital(out string errMsg, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.CapitalPersonalization model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/AdminClearTrialData", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/AdminClearTrialDataResponse")]
        bool AdminClearTrialData(out string errMsg, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.CapitalPersonalization model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountAndCapitalManagement/GetAllReckoningHoldCode", ReplyAction="http://tempuri.org/IAccountAndCapitalManagement/GetAllReckoningHoldCodeResponse")]
        ReckoningCapabilityTest.DoAccountAndCapitalManagementService.QH_TodaySettlementPriceInfo[] GetAllReckoningHoldCode(out string errMsg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountAndCapitalManagementChannel : ReckoningCapabilityTest.DoAccountAndCapitalManagementService.IAccountAndCapitalManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountAndCapitalManagementClient : System.ServiceModel.ClientBase<ReckoningCapabilityTest.DoAccountAndCapitalManagementService.IAccountAndCapitalManagement>, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.IAccountAndCapitalManagement {
        
        public AccountAndCapitalManagementClient() {
        }
        
        public AccountAndCapitalManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountAndCapitalManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountAndCapitalManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountAndCapitalManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SingleTraderOpenAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AccountEntity[] accounts) {
            return base.Channel.SingleTraderOpenAccount(out outMessage, accounts);
        }
        
        public bool VolumeTraderOpenAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AccountEntity[] accounts) {
            return base.Channel.VolumeTraderOpenAccount(out outMessage, accounts);
        }
        
        public bool DeleteSingleTraderAccount(out string outMessage, string userId) {
            return base.Channel.DeleteSingleTraderAccount(out outMessage, userId);
        }
        
        public bool DeleteVolumeTraderAccount(out string outMessage, string[] userIDs) {
            return base.Channel.DeleteVolumeTraderAccount(out outMessage, userIDs);
        }
        
        public bool FreezeAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.FindAccountEntity[] accounts) {
            return base.Channel.FreezeAccount(out outMessage, accounts);
        }
        
        public bool ThawAccount(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.FindAccountEntity[] accounts) {
            return base.Channel.ThawAccount(out outMessage, accounts);
        }
        
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AccountFindResultEntity[] FindAccount(out string outMessage, string traderId, string password) {
            return base.Channel.FindAccount(out outMessage, traderId, password);
        }
        
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.CM_BreedClass[] FindTradePrivileges(out string outMessage, string traderId, string password) {
            return base.Channel.FindTradePrivileges(out outMessage, traderId, password);
        }
        
        public bool UpdateUserPassword(out string outMessage, string userId, string oldPassword, string newPassword) {
            return base.Channel.UpdateUserPassword(out outMessage, userId, oldPassword, newPassword);
        }
        
        public bool AddCapital(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.AddCapitalEntity addCapital1) {
            return base.Channel.AddCapital(out outMessage, addCapital1);
        }
        
        public bool TwoAccountsFreeTransferFunds(out string outMessage, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.FreeTransferEntity freeTransfer, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesCurrencyType currencyType) {
            return base.Channel.TwoAccountsFreeTransferFunds(out outMessage, freeTransfer, currencyType);
        }
        
        public string CheckChannel() {
            return base.Channel.CheckChannel();
        }
        
        public bool IsReckoningDone(System.DateTime doneDate) {
            return base.Channel.IsReckoningDone(doneDate);
        }
        
        public bool IsReckoning() {
            return base.Channel.IsReckoning();
        }
        
        public bool FaultRecoveryReckoning(out string errorMsg, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.QH_TodaySettlementPriceInfo[] list) {
            return base.Channel.FaultRecoveryReckoning(out errorMsg, list);
        }
        
        public long GetSpotMaxOrderAmount(out string outMessage, string TraderId, float OrderPrice, string Code, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesOrderPriceType orderPriceType) {
            return base.Channel.GetSpotMaxOrderAmount(out outMessage, TraderId, OrderPrice, Code, orderPriceType);
        }
        
        public long GetFutureMaxOrderAmount(out string outMessage, string TraderId, float OrderPrice, string Code, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesOrderPriceType orderPriceType) {
            return base.Channel.GetFutureMaxOrderAmount(out outMessage, TraderId, OrderPrice, Code, orderPriceType);
        }
        
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.HighLowRangeValue GetHighLowRangeValueByCommodityCode(string code, decimal orderPrice) {
            return base.Channel.GetHighLowRangeValueByCommodityCode(code, orderPrice);
        }
        
        public long GetHKMaxOrderAmount(out string outMessage, string TraderId, float OrderPrice, string Code, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHKPriceType orderPriceType) {
            return base.Channel.GetHKMaxOrderAmount(out outMessage, TraderId, OrderPrice, Code, orderPriceType);
        }
        
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.HighLowRangeValue GetHKHighLowRangeValueByCommodityCode(string code, decimal orderPrice, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesHKPriceType priceType, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TypesTransactionDirection tranType) {
            return base.Channel.GetHKHighLowRangeValueByCommodityCode(code, orderPrice, priceType, tranType);
        }
        
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.TradersAccountCapitalInfo[] AdminFindTraderCapitalAccountInfo(out string strErrorMessage, string adminId, string adminPassword, string traderId) {
            return base.Channel.AdminFindTraderCapitalAccountInfo(out strErrorMessage, adminId, adminPassword, traderId);
        }
        
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.MarketDataLevel GetMarketDataInfoByCode(out string errMsg, string code, int breedClassType) {
            return base.Channel.GetMarketDataInfoByCode(out errMsg, code, breedClassType);
        }
        
        public string[] GetAllCM_CommodityByBreedClassTypeID(int classTypeID, bool isRemoveExpired) {
            return base.Channel.GetAllCM_CommodityByBreedClassTypeID(classTypeID, isRemoveExpired);
        }
        
        public bool AdminPersonalizationCapital(out string errMsg, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.CapitalPersonalization model) {
            return base.Channel.AdminPersonalizationCapital(out errMsg, model);
        }
        
        public bool AdminClearTrialData(out string errMsg, ReckoningCapabilityTest.DoAccountAndCapitalManagementService.CapitalPersonalization model) {
            return base.Channel.AdminClearTrialData(out errMsg, model);
        }
        
        public ReckoningCapabilityTest.DoAccountAndCapitalManagementService.QH_TodaySettlementPriceInfo[] GetAllReckoningHoldCode(out string errMsg) {
            return base.Channel.GetAllReckoningHoldCode(out errMsg);
        }
    }
}
