//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReckoningCapabilityTest.DoOrderS8090 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockOrderRequest", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class StockOrderRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesOrderPriceType OrderWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfoliosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySell {
            get {
                return this.BuySellField;
            }
            set {
                if ((this.BuySellField.Equals(value) != true)) {
                    this.BuySellField = value;
                    this.RaisePropertyChanged("BuySell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIDField, value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundAccountId {
            get {
                return this.FundAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FundAccountIdField, value) != true)) {
                    this.FundAccountIdField = value;
                    this.RaisePropertyChanged("FundAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderAmount {
            get {
                return this.OrderAmountField;
            }
            set {
                if ((this.OrderAmountField.Equals(value) != true)) {
                    this.OrderAmountField = value;
                    this.RaisePropertyChanged("OrderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitType {
            get {
                return this.OrderUnitTypeField;
            }
            set {
                if ((this.OrderUnitTypeField.Equals(value) != true)) {
                    this.OrderUnitTypeField = value;
                    this.RaisePropertyChanged("OrderUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesOrderPriceType OrderWay {
            get {
                return this.OrderWayField;
            }
            set {
                if ((this.OrderWayField.Equals(value) != true)) {
                    this.OrderWayField = value;
                    this.RaisePropertyChanged("OrderWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfoliosId {
            get {
                return this.PortfoliosIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfoliosIdField, value) != true)) {
                    this.PortfoliosIdField = value;
                    this.RaisePropertyChanged("PortfoliosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassword {
            get {
                return this.TraderPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPasswordField, value) != true)) {
                    this.TraderPasswordField = value;
                    this.RaisePropertyChanged("TraderPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.TransactionDirection", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesTransactionDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buying = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selling = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.UnitType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesUnitType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thigh = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hand = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sheet = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Point = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ton = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gram = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Share = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.OrderPriceType", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Contants")]
    public enum TypesOrderPriceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPTMarketPrice = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPTLimited = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderResponse", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class OrderResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDatetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((this.ErrorTypeField.Equals(value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDatetime {
            get {
                return this.OrderDatetimeField;
            }
            set {
                if ((this.OrderDatetimeField.Equals(value) != true)) {
                    this.OrderDatetimeField = value;
                    this.RaisePropertyChanged("OrderDatetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.OrderStateType", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Contants")]
    public enum TypesOrderStateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSUnRequired = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSRequiredSoon = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSRequiredRemoveSoon = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSIsRequired = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSCanceled = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSRemoved = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSPartRemoved = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSPartDealed = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSDealed = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSPartDealRemoveSoon = 11,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockIndexFuturesOrderRequest", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class StockIndexFuturesOrderRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesFutureOpenCloseType OpenCloseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesOrderPriceType OrderWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfoliosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySell {
            get {
                return this.BuySellField;
            }
            set {
                if ((this.BuySellField.Equals(value) != true)) {
                    this.BuySellField = value;
                    this.RaisePropertyChanged("BuySell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIDField, value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundAccountId {
            get {
                return this.FundAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FundAccountIdField, value) != true)) {
                    this.FundAccountIdField = value;
                    this.RaisePropertyChanged("FundAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesFutureOpenCloseType OpenCloseType {
            get {
                return this.OpenCloseTypeField;
            }
            set {
                if ((this.OpenCloseTypeField.Equals(value) != true)) {
                    this.OpenCloseTypeField = value;
                    this.RaisePropertyChanged("OpenCloseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderAmount {
            get {
                return this.OrderAmountField;
            }
            set {
                if ((this.OrderAmountField.Equals(value) != true)) {
                    this.OrderAmountField = value;
                    this.RaisePropertyChanged("OrderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitType {
            get {
                return this.OrderUnitTypeField;
            }
            set {
                if ((this.OrderUnitTypeField.Equals(value) != true)) {
                    this.OrderUnitTypeField = value;
                    this.RaisePropertyChanged("OrderUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesOrderPriceType OrderWay {
            get {
                return this.OrderWayField;
            }
            set {
                if ((this.OrderWayField.Equals(value) != true)) {
                    this.OrderWayField = value;
                    this.RaisePropertyChanged("OrderWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfoliosId {
            get {
                return this.PortfoliosIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfoliosIdField, value) != true)) {
                    this.PortfoliosIdField = value;
                    this.RaisePropertyChanged("PortfoliosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassword {
            get {
                return this.TraderPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPasswordField, value) != true)) {
                    this.TraderPasswordField = value;
                    this.RaisePropertyChanged("TraderPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.FutureOpenCloseType", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Contants")]
    public enum TypesFutureOpenCloseType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenPosition = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClosePosition = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CloseTodayPosition = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MercantileFuturesOrderRequest", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class MercantileFuturesOrderRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesFutureOpenCloseType OpenCloseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesOrderPriceType OrderWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfoliosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySell {
            get {
                return this.BuySellField;
            }
            set {
                if ((this.BuySellField.Equals(value) != true)) {
                    this.BuySellField = value;
                    this.RaisePropertyChanged("BuySell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIDField, value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundAccountId {
            get {
                return this.FundAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FundAccountIdField, value) != true)) {
                    this.FundAccountIdField = value;
                    this.RaisePropertyChanged("FundAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesFutureOpenCloseType OpenCloseType {
            get {
                return this.OpenCloseTypeField;
            }
            set {
                if ((this.OpenCloseTypeField.Equals(value) != true)) {
                    this.OpenCloseTypeField = value;
                    this.RaisePropertyChanged("OpenCloseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderAmount {
            get {
                return this.OrderAmountField;
            }
            set {
                if ((this.OrderAmountField.Equals(value) != true)) {
                    this.OrderAmountField = value;
                    this.RaisePropertyChanged("OrderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitType {
            get {
                return this.OrderUnitTypeField;
            }
            set {
                if ((this.OrderUnitTypeField.Equals(value) != true)) {
                    this.OrderUnitTypeField = value;
                    this.RaisePropertyChanged("OrderUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesOrderPriceType OrderWay {
            get {
                return this.OrderWayField;
            }
            set {
                if ((this.OrderWayField.Equals(value) != true)) {
                    this.OrderWayField = value;
                    this.RaisePropertyChanged("OrderWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfoliosId {
            get {
                return this.PortfoliosIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfoliosIdField, value) != true)) {
                    this.PortfoliosIdField = value;
                    this.RaisePropertyChanged("PortfoliosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassword {
            get {
                return this.TraderPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPasswordField, value) != true)) {
                    this.TraderPasswordField = value;
                    this.RaisePropertyChanged("TraderPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKOrderRequest", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class HKOrderRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesHKPriceType OrderWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfoliosIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesTransactionDirection BuySell {
            get {
                return this.BuySellField;
            }
            set {
                if ((this.BuySellField.Equals(value) != true)) {
                    this.BuySellField = value;
                    this.RaisePropertyChanged("BuySell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIDField, value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundAccountId {
            get {
                return this.FundAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FundAccountIdField, value) != true)) {
                    this.FundAccountIdField = value;
                    this.RaisePropertyChanged("FundAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderAmount {
            get {
                return this.OrderAmountField;
            }
            set {
                if ((this.OrderAmountField.Equals(value) != true)) {
                    this.OrderAmountField = value;
                    this.RaisePropertyChanged("OrderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitType {
            get {
                return this.OrderUnitTypeField;
            }
            set {
                if ((this.OrderUnitTypeField.Equals(value) != true)) {
                    this.OrderUnitTypeField = value;
                    this.RaisePropertyChanged("OrderUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesHKPriceType OrderWay {
            get {
                return this.OrderWayField;
            }
            set {
                if ((this.OrderWayField.Equals(value) != true)) {
                    this.OrderWayField = value;
                    this.RaisePropertyChanged("OrderWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfoliosId {
            get {
                return this.PortfoliosIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfoliosIdField, value) != true)) {
                    this.PortfoliosIdField = value;
                    this.RaisePropertyChanged("PortfoliosId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassword {
            get {
                return this.TraderPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPasswordField, value) != true)) {
                    this.TraderPasswordField = value;
                    this.RaisePropertyChanged("TraderPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.HKPriceType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesHKPriceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ELO = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SLO = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKModifyOrderRequest", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class HKModifyOrderRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNubmerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifyOrderDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIDField, value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNubmer {
            get {
                return this.EntrustNubmerField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNubmerField, value) != true)) {
                    this.EntrustNubmerField = value;
                    this.RaisePropertyChanged("EntrustNubmer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundAccountId {
            get {
                return this.FundAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FundAccountIdField, value) != true)) {
                    this.FundAccountIdField = value;
                    this.RaisePropertyChanged("FundAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyOrderDateTime {
            get {
                return this.ModifyOrderDateTimeField;
            }
            set {
                if ((this.ModifyOrderDateTimeField.Equals(value) != true)) {
                    this.ModifyOrderDateTimeField = value;
                    this.RaisePropertyChanged("ModifyOrderDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderAmount {
            get {
                return this.OrderAmountField;
            }
            set {
                if ((this.OrderAmountField.Equals(value) != true)) {
                    this.OrderAmountField = value;
                    this.RaisePropertyChanged("OrderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.DoOrderS8090.TypesUnitType OrderUnitType {
            get {
                return this.OrderUnitTypeField;
            }
            set {
                if ((this.OrderUnitTypeField.Equals(value) != true)) {
                    this.OrderUnitTypeField = value;
                    this.RaisePropertyChanged("OrderUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassword {
            get {
                return this.TraderPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPasswordField, value) != true)) {
                    this.TraderPasswordField = value;
                    this.RaisePropertyChanged("TraderPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DoOrderS8090.IDoOrder")]
    public interface IDoOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoStockOrder", ReplyAction="http://tempuri.org/IDoOrder/DoStockOrderResponse")]
        ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoStockOrder(ReckoningCapabilityTest.DoOrderS8090.StockOrderRequest stockorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelStockOrder2", ReplyAction="http://tempuri.org/IDoOrder/CancelStockOrder2Response")]
        bool CancelStockOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelStockOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelStockOrderResponse")]
        bool CancelStockOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoStockIndexFuturesOrder", ReplyAction="http://tempuri.org/IDoOrder/DoStockIndexFuturesOrderResponse")]
        ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoStockIndexFuturesOrder(ReckoningCapabilityTest.DoOrderS8090.StockIndexFuturesOrderRequest futuresorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelStockIndexFuturesOrder2", ReplyAction="http://tempuri.org/IDoOrder/CancelStockIndexFuturesOrder2Response")]
        bool CancelStockIndexFuturesOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelStockIndexFuturesOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelStockIndexFuturesOrderResponse")]
        bool CancelStockIndexFuturesOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoMercantileFuturesOrder", ReplyAction="http://tempuri.org/IDoOrder/DoMercantileFuturesOrderResponse")]
        ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoMercantileFuturesOrder(ReckoningCapabilityTest.DoOrderS8090.MercantileFuturesOrderRequest futuresorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelMercantileFuturesOrder2", ReplyAction="http://tempuri.org/IDoOrder/CancelMercantileFuturesOrder2Response")]
        bool CancelMercantileFuturesOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelMercantileFuturesOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelMercantileFuturesOrderResponse")]
        bool CancelMercantileFuturesOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoHKOrder", ReplyAction="http://tempuri.org/IDoOrder/DoHKOrderResponse")]
        ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoHKOrder(ReckoningCapabilityTest.DoOrderS8090.HKOrderRequest hkorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/DoHKModifyOrder", ReplyAction="http://tempuri.org/IDoOrder/DoHKModifyOrderResponse")]
        ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoHKModifyOrder(ReckoningCapabilityTest.DoOrderS8090.HKModifyOrderRequest hkorder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelHKOrder2", ReplyAction="http://tempuri.org/IDoOrder/CancelHKOrder2Response")]
        bool CancelHKOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoOrder/CancelHKOrder", ReplyAction="http://tempuri.org/IDoOrder/CancelHKOrderResponse")]
        bool CancelHKOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoOrderChannel : ReckoningCapabilityTest.DoOrderS8090.IDoOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoOrderClient : System.ServiceModel.ClientBase<ReckoningCapabilityTest.DoOrderS8090.IDoOrder>, ReckoningCapabilityTest.DoOrderS8090.IDoOrder {
        
        public DoOrderClient() {
        }
        
        public DoOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DoOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoStockOrder(ReckoningCapabilityTest.DoOrderS8090.StockOrderRequest stockorder) {
            return base.Channel.DoStockOrder(stockorder);
        }
        
        public bool CancelStockOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType) {
            return base.Channel.CancelStockOrder2(OrderId, ref message, out ost, out errorType);
        }
        
        public bool CancelStockOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost) {
            return base.Channel.CancelStockOrder(OrderId, ref message, out ost);
        }
        
        public ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoStockIndexFuturesOrder(ReckoningCapabilityTest.DoOrderS8090.StockIndexFuturesOrderRequest futuresorder) {
            return base.Channel.DoStockIndexFuturesOrder(futuresorder);
        }
        
        public bool CancelStockIndexFuturesOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType) {
            return base.Channel.CancelStockIndexFuturesOrder2(OrderId, ref message, out ost, out errorType);
        }
        
        public bool CancelStockIndexFuturesOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost) {
            return base.Channel.CancelStockIndexFuturesOrder(OrderId, ref message, out ost);
        }
        
        public ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoMercantileFuturesOrder(ReckoningCapabilityTest.DoOrderS8090.MercantileFuturesOrderRequest futuresorder) {
            return base.Channel.DoMercantileFuturesOrder(futuresorder);
        }
        
        public bool CancelMercantileFuturesOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType) {
            return base.Channel.CancelMercantileFuturesOrder2(OrderId, ref message, out ost, out errorType);
        }
        
        public bool CancelMercantileFuturesOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost) {
            return base.Channel.CancelMercantileFuturesOrder(OrderId, ref message, out ost);
        }
        
        public ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoHKOrder(ReckoningCapabilityTest.DoOrderS8090.HKOrderRequest hkorder) {
            return base.Channel.DoHKOrder(hkorder);
        }
        
        public ReckoningCapabilityTest.DoOrderS8090.OrderResponse DoHKModifyOrder(ReckoningCapabilityTest.DoOrderS8090.HKModifyOrderRequest hkorder) {
            return base.Channel.DoHKModifyOrder(hkorder);
        }
        
        public bool CancelHKOrder2(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost, out int errorType) {
            return base.Channel.CancelHKOrder2(OrderId, ref message, out ost, out errorType);
        }
        
        public bool CancelHKOrder(string OrderId, ref string message, out ReckoningCapabilityTest.DoOrderS8090.TypesOrderStateType ost) {
            return base.Channel.CancelHKOrder(OrderId, ref message, out ost);
        }
    }
}
