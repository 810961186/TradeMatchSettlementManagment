//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReckoningCapabilityTest.TraderFindService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UA_BankAccountTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class UA_BankAccountTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CapitalRemainAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayOutInCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeCurrencyTypeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableCapital {
            get {
                return this.AvailableCapitalField;
            }
            set {
                if ((this.AvailableCapitalField.Equals(value) != true)) {
                    this.AvailableCapitalField = value;
                    this.RaisePropertyChanged("AvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalanceOfTheDay {
            get {
                return this.BalanceOfTheDayField;
            }
            set {
                if ((this.BalanceOfTheDayField.Equals(value) != true)) {
                    this.BalanceOfTheDayField = value;
                    this.RaisePropertyChanged("BalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CapitalRemainAmount {
            get {
                return this.CapitalRemainAmountField;
            }
            set {
                if ((this.CapitalRemainAmountField.Equals(value) != true)) {
                    this.CapitalRemainAmountField = value;
                    this.RaisePropertyChanged("CapitalRemainAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCapital {
            get {
                return this.FreezeCapitalField;
            }
            set {
                if ((this.FreezeCapitalField.Equals(value) != true)) {
                    this.FreezeCapitalField = value;
                    this.RaisePropertyChanged("FreezeCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayOutInCapital {
            get {
                return this.TodayOutInCapitalField;
            }
            set {
                if ((this.TodayOutInCapitalField.Equals(value) != true)) {
                    this.TodayOutInCapitalField = value;
                    this.RaisePropertyChanged("TodayOutInCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeCurrencyTypeLogo {
            get {
                return this.TradeCurrencyTypeLogoField;
            }
            set {
                if ((this.TradeCurrencyTypeLogoField.Equals(value) != true)) {
                    this.TradeCurrencyTypeLogoField = value;
                    this.RaisePropertyChanged("TradeCurrencyTypeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.CurrencyType", Namespace="http://schemas.datacontract.org/2004/07/GTA.VTS.Common.CommonObject")]
    public enum TypesCurrencyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HK = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        US = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpotCapitalEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class SpotCapitalEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AssetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.TraderFindService.XH_CapitalAccountTableInfo GTCapitalObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NotDoneProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ProfitLossTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AssetAmount {
            get {
                return this.AssetAmountField;
            }
            set {
                if ((this.AssetAmountField.Equals(value) != true)) {
                    this.AssetAmountField = value;
                    this.RaisePropertyChanged("AssetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.TraderFindService.XH_CapitalAccountTableInfo GTCapitalObj {
            get {
                return this.GTCapitalObjField;
            }
            set {
                if ((object.ReferenceEquals(this.GTCapitalObjField, value) != true)) {
                    this.GTCapitalObjField = value;
                    this.RaisePropertyChanged("GTCapitalObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NotDoneProfitLossTotal {
            get {
                return this.NotDoneProfitLossTotalField;
            }
            set {
                if ((this.NotDoneProfitLossTotalField.Equals(value) != true)) {
                    this.NotDoneProfitLossTotalField = value;
                    this.RaisePropertyChanged("NotDoneProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ProfitLossTotal {
            get {
                return this.ProfitLossTotalField;
            }
            set {
                if ((this.ProfitLossTotalField.Equals(value) != true)) {
                    this.ProfitLossTotalField = value;
                    this.RaisePropertyChanged("ProfitLossTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_CapitalAccountTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_CapitalAccountTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalAccountLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CapitalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCapitalTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HasDoneProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayOutInCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableCapital {
            get {
                return this.AvailableCapitalField;
            }
            set {
                if ((this.AvailableCapitalField.Equals(value) != true)) {
                    this.AvailableCapitalField = value;
                    this.RaisePropertyChanged("AvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalanceOfTheDay {
            get {
                return this.BalanceOfTheDayField;
            }
            set {
                if ((this.BalanceOfTheDayField.Equals(value) != true)) {
                    this.BalanceOfTheDayField = value;
                    this.RaisePropertyChanged("BalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalAccountLogo {
            get {
                return this.CapitalAccountLogoField;
            }
            set {
                if ((this.CapitalAccountLogoField.Equals(value) != true)) {
                    this.CapitalAccountLogoField = value;
                    this.RaisePropertyChanged("CapitalAccountLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CapitalBalance {
            get {
                return this.CapitalBalanceField;
            }
            set {
                if ((this.CapitalBalanceField.Equals(value) != true)) {
                    this.CapitalBalanceField = value;
                    this.RaisePropertyChanged("CapitalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCapitalTotal {
            get {
                return this.FreezeCapitalTotalField;
            }
            set {
                if ((this.FreezeCapitalTotalField.Equals(value) != true)) {
                    this.FreezeCapitalTotalField = value;
                    this.RaisePropertyChanged("FreezeCapitalTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HasDoneProfitLossTotal {
            get {
                return this.HasDoneProfitLossTotalField;
            }
            set {
                if ((this.HasDoneProfitLossTotalField.Equals(value) != true)) {
                    this.HasDoneProfitLossTotalField = value;
                    this.RaisePropertyChanged("HasDoneProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayOutInCapital {
            get {
                return this.TodayOutInCapitalField;
            }
            set {
                if ((this.TodayOutInCapitalField.Equals(value) != true)) {
                    this.TodayOutInCapitalField = value;
                    this.RaisePropertyChanged("TodayOutInCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeCurrencyType {
            get {
                return this.TradeCurrencyTypeField;
            }
            set {
                if ((this.TradeCurrencyTypeField.Equals(value) != true)) {
                    this.TradeCurrencyTypeField = value;
                    this.RaisePropertyChanged("TradeCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuturesCapitalEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class FuturesCapitalEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AssetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FloatProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.TraderFindService.QH_CapitalAccountTableInfo GTCapitalObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKAvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKBalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKFreezeTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKMarginTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKTodayOutInCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMBAvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMBBalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMBFreezeTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMBMarginTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMBTodayOutInCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USAvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USBalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USFreezeTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USMarginTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USTodayOutInCapitalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AssetAmount {
            get {
                return this.AssetAmountField;
            }
            set {
                if ((this.AssetAmountField.Equals(value) != true)) {
                    this.AssetAmountField = value;
                    this.RaisePropertyChanged("AssetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FloatProfitLossTotal {
            get {
                return this.FloatProfitLossTotalField;
            }
            set {
                if ((this.FloatProfitLossTotalField.Equals(value) != true)) {
                    this.FloatProfitLossTotalField = value;
                    this.RaisePropertyChanged("FloatProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.TraderFindService.QH_CapitalAccountTableInfo GTCapitalObj {
            get {
                return this.GTCapitalObjField;
            }
            set {
                if ((object.ReferenceEquals(this.GTCapitalObjField, value) != true)) {
                    this.GTCapitalObjField = value;
                    this.RaisePropertyChanged("GTCapitalObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKAvailableCapital {
            get {
                return this.HKAvailableCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.HKAvailableCapitalField, value) != true)) {
                    this.HKAvailableCapitalField = value;
                    this.RaisePropertyChanged("HKAvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKBalanceOfTheDay {
            get {
                return this.HKBalanceOfTheDayField;
            }
            set {
                if ((object.ReferenceEquals(this.HKBalanceOfTheDayField, value) != true)) {
                    this.HKBalanceOfTheDayField = value;
                    this.RaisePropertyChanged("HKBalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKFreezeTotal {
            get {
                return this.HKFreezeTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.HKFreezeTotalField, value) != true)) {
                    this.HKFreezeTotalField = value;
                    this.RaisePropertyChanged("HKFreezeTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKMarginTotal {
            get {
                return this.HKMarginTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.HKMarginTotalField, value) != true)) {
                    this.HKMarginTotalField = value;
                    this.RaisePropertyChanged("HKMarginTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKTodayOutInCapital {
            get {
                return this.HKTodayOutInCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.HKTodayOutInCapitalField, value) != true)) {
                    this.HKTodayOutInCapitalField = value;
                    this.RaisePropertyChanged("HKTodayOutInCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketProfitLossTotal {
            get {
                return this.MarketProfitLossTotalField;
            }
            set {
                if ((this.MarketProfitLossTotalField.Equals(value) != true)) {
                    this.MarketProfitLossTotalField = value;
                    this.RaisePropertyChanged("MarketProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMBAvailableCapital {
            get {
                return this.RMBAvailableCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.RMBAvailableCapitalField, value) != true)) {
                    this.RMBAvailableCapitalField = value;
                    this.RaisePropertyChanged("RMBAvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMBBalanceOfTheDay {
            get {
                return this.RMBBalanceOfTheDayField;
            }
            set {
                if ((object.ReferenceEquals(this.RMBBalanceOfTheDayField, value) != true)) {
                    this.RMBBalanceOfTheDayField = value;
                    this.RaisePropertyChanged("RMBBalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMBFreezeTotal {
            get {
                return this.RMBFreezeTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.RMBFreezeTotalField, value) != true)) {
                    this.RMBFreezeTotalField = value;
                    this.RaisePropertyChanged("RMBFreezeTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMBMarginTotal {
            get {
                return this.RMBMarginTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.RMBMarginTotalField, value) != true)) {
                    this.RMBMarginTotalField = value;
                    this.RaisePropertyChanged("RMBMarginTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMBTodayOutInCapital {
            get {
                return this.RMBTodayOutInCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.RMBTodayOutInCapitalField, value) != true)) {
                    this.RMBTodayOutInCapitalField = value;
                    this.RaisePropertyChanged("RMBTodayOutInCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USAvailableCapital {
            get {
                return this.USAvailableCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.USAvailableCapitalField, value) != true)) {
                    this.USAvailableCapitalField = value;
                    this.RaisePropertyChanged("USAvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USBalanceOfTheDay {
            get {
                return this.USBalanceOfTheDayField;
            }
            set {
                if ((object.ReferenceEquals(this.USBalanceOfTheDayField, value) != true)) {
                    this.USBalanceOfTheDayField = value;
                    this.RaisePropertyChanged("USBalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USFreezeTotal {
            get {
                return this.USFreezeTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.USFreezeTotalField, value) != true)) {
                    this.USFreezeTotalField = value;
                    this.RaisePropertyChanged("USFreezeTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USMarginTotal {
            get {
                return this.USMarginTotalField;
            }
            set {
                if ((object.ReferenceEquals(this.USMarginTotalField, value) != true)) {
                    this.USMarginTotalField = value;
                    this.RaisePropertyChanged("USMarginTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USTodayOutInCapital {
            get {
                return this.USTodayOutInCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.USTodayOutInCapitalField, value) != true)) {
                    this.USTodayOutInCapitalField = value;
                    this.RaisePropertyChanged("USTodayOutInCapital");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QH_CapitalAccountTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class QH_CapitalAccountTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalAccountLogoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CapitalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CloseFloatProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CloseMarketProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCapitalTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarginTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayOutInCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableCapital {
            get {
                return this.AvailableCapitalField;
            }
            set {
                if ((this.AvailableCapitalField.Equals(value) != true)) {
                    this.AvailableCapitalField = value;
                    this.RaisePropertyChanged("AvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalanceOfTheDay {
            get {
                return this.BalanceOfTheDayField;
            }
            set {
                if ((this.BalanceOfTheDayField.Equals(value) != true)) {
                    this.BalanceOfTheDayField = value;
                    this.RaisePropertyChanged("BalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalAccountLogoId {
            get {
                return this.CapitalAccountLogoIdField;
            }
            set {
                if ((this.CapitalAccountLogoIdField.Equals(value) != true)) {
                    this.CapitalAccountLogoIdField = value;
                    this.RaisePropertyChanged("CapitalAccountLogoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CapitalBalance {
            get {
                return this.CapitalBalanceField;
            }
            set {
                if ((this.CapitalBalanceField.Equals(value) != true)) {
                    this.CapitalBalanceField = value;
                    this.RaisePropertyChanged("CapitalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CloseFloatProfitLossTotal {
            get {
                return this.CloseFloatProfitLossTotalField;
            }
            set {
                if ((this.CloseFloatProfitLossTotalField.Equals(value) != true)) {
                    this.CloseFloatProfitLossTotalField = value;
                    this.RaisePropertyChanged("CloseFloatProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CloseMarketProfitLossTotal {
            get {
                return this.CloseMarketProfitLossTotalField;
            }
            set {
                if ((this.CloseMarketProfitLossTotalField.Equals(value) != true)) {
                    this.CloseMarketProfitLossTotalField = value;
                    this.RaisePropertyChanged("CloseMarketProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCapitalTotal {
            get {
                return this.FreezeCapitalTotalField;
            }
            set {
                if ((this.FreezeCapitalTotalField.Equals(value) != true)) {
                    this.FreezeCapitalTotalField = value;
                    this.RaisePropertyChanged("FreezeCapitalTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarginTotal {
            get {
                return this.MarginTotalField;
            }
            set {
                if ((this.MarginTotalField.Equals(value) != true)) {
                    this.MarginTotalField = value;
                    this.RaisePropertyChanged("MarginTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayOutInCapital {
            get {
                return this.TodayOutInCapitalField;
            }
            set {
                if ((this.TodayOutInCapitalField.Equals(value) != true)) {
                    this.TodayOutInCapitalField = value;
                    this.RaisePropertyChanged("TodayOutInCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeCurrencyType {
            get {
                return this.TradeCurrencyTypeField;
            }
            set {
                if ((this.TradeCurrencyTypeField.Equals(value) != true)) {
                    this.TradeCurrencyTypeField = value;
                    this.RaisePropertyChanged("TradeCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpotEntrustConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class SpotEntrustConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CanBeWithdrawnLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellDirection {
            get {
                return this.BuySellDirectionField;
            }
            set {
                if ((this.BuySellDirectionField.Equals(value) != true)) {
                    this.BuySellDirectionField = value;
                    this.RaisePropertyChanged("BuySellDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CanBeWithdrawnLogo {
            get {
                return this.CanBeWithdrawnLogoField;
            }
            set {
                if ((this.CanBeWithdrawnLogoField.Equals(value) != true)) {
                    this.CanBeWithdrawnLogoField = value;
                    this.RaisePropertyChanged("CanBeWithdrawnLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustState {
            get {
                return this.EntrustStateField;
            }
            set {
                if ((this.EntrustStateField.Equals(value) != true)) {
                    this.EntrustStateField = value;
                    this.RaisePropertyChanged("EntrustState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCapitalAccount {
            get {
                return this.SpotCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCapitalAccountField, value) != true)) {
                    this.SpotCapitalAccountField = value;
                    this.RaisePropertyChanged("SpotCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_TodayEntrustTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_TodayEntrustTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallbackChannlIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CancelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntrustTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HasDoneProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string McOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallbackChannlId {
            get {
                return this.CallbackChannlIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CallbackChannlIdField, value) != true)) {
                    this.CallbackChannlIdField = value;
                    this.RaisePropertyChanged("CallbackChannlId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CancelAmount {
            get {
                return this.CancelAmountField;
            }
            set {
                if ((this.CancelAmountField.Equals(value) != true)) {
                    this.CancelAmountField = value;
                    this.RaisePropertyChanged("CancelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CancelLogo {
            get {
                return this.CancelLogoField;
            }
            set {
                if ((this.CancelLogoField.Equals(value) != true)) {
                    this.CancelLogoField = value;
                    this.RaisePropertyChanged("CancelLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustAmount {
            get {
                return this.EntrustAmountField;
            }
            set {
                if ((this.EntrustAmountField.Equals(value) != true)) {
                    this.EntrustAmountField = value;
                    this.RaisePropertyChanged("EntrustAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntrustTime {
            get {
                return this.EntrustTimeField;
            }
            set {
                if ((this.EntrustTimeField.Equals(value) != true)) {
                    this.EntrustTimeField = value;
                    this.RaisePropertyChanged("EntrustTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HasDoneProfit {
            get {
                return this.HasDoneProfitField;
            }
            set {
                if ((this.HasDoneProfitField.Equals(value) != true)) {
                    this.HasDoneProfitField = value;
                    this.RaisePropertyChanged("HasDoneProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMarketValue {
            get {
                return this.IsMarketValueField;
            }
            set {
                if ((this.IsMarketValueField.Equals(value) != true)) {
                    this.IsMarketValueField = value;
                    this.RaisePropertyChanged("IsMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string McOrderId {
            get {
                return this.McOrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.McOrderIdField, value) != true)) {
                    this.McOrderIdField = value;
                    this.RaisePropertyChanged("McOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatusId {
            get {
                return this.OrderStatusIdField;
            }
            set {
                if ((this.OrderStatusIdField.Equals(value) != true)) {
                    this.OrderStatusIdField = value;
                    this.RaisePropertyChanged("OrderStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockAccount {
            get {
                return this.StockAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.StockAccountField, value) != true)) {
                    this.StockAccountField = value;
                    this.RaisePropertyChanged("StockAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeAveragePrice {
            get {
                return this.TradeAveragePriceField;
            }
            set {
                if ((this.TradeAveragePriceField.Equals(value) != true)) {
                    this.TradeAveragePriceField = value;
                    this.RaisePropertyChanged("TradeAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuturesEntrustConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class FuturesEntrustConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CanBeWithdrawnLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenCloseDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellDirection {
            get {
                return this.BuySellDirectionField;
            }
            set {
                if ((this.BuySellDirectionField.Equals(value) != true)) {
                    this.BuySellDirectionField = value;
                    this.RaisePropertyChanged("BuySellDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CanBeWithdrawnLogo {
            get {
                return this.CanBeWithdrawnLogoField;
            }
            set {
                if ((this.CanBeWithdrawnLogoField.Equals(value) != true)) {
                    this.CanBeWithdrawnLogoField = value;
                    this.RaisePropertyChanged("CanBeWithdrawnLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustState {
            get {
                return this.EntrustStateField;
            }
            set {
                if ((this.EntrustStateField.Equals(value) != true)) {
                    this.EntrustStateField = value;
                    this.RaisePropertyChanged("EntrustState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenCloseDirection {
            get {
                return this.OpenCloseDirectionField;
            }
            set {
                if ((this.OpenCloseDirectionField.Equals(value) != true)) {
                    this.OpenCloseDirectionField = value;
                    this.RaisePropertyChanged("OpenCloseDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((this.VarietyTypeField.Equals(value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QH_TodayEntrustTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class QH_TodayEntrustTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallbackChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CancelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CloseFloatProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CloseMarketProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntrustTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string McOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OfferTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenCloseTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallbackChannelId {
            get {
                return this.CallbackChannelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CallbackChannelIdField, value) != true)) {
                    this.CallbackChannelIdField = value;
                    this.RaisePropertyChanged("CallbackChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CancelAmount {
            get {
                return this.CancelAmountField;
            }
            set {
                if ((this.CancelAmountField.Equals(value) != true)) {
                    this.CancelAmountField = value;
                    this.RaisePropertyChanged("CancelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CancelLogo {
            get {
                return this.CancelLogoField;
            }
            set {
                if ((this.CancelLogoField.Equals(value) != true)) {
                    this.CancelLogoField = value;
                    this.RaisePropertyChanged("CancelLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CloseFloatProfitLoss {
            get {
                return this.CloseFloatProfitLossField;
            }
            set {
                if ((this.CloseFloatProfitLossField.Equals(value) != true)) {
                    this.CloseFloatProfitLossField = value;
                    this.RaisePropertyChanged("CloseFloatProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CloseMarketProfitLoss {
            get {
                return this.CloseMarketProfitLossField;
            }
            set {
                if ((this.CloseMarketProfitLossField.Equals(value) != true)) {
                    this.CloseMarketProfitLossField = value;
                    this.RaisePropertyChanged("CloseMarketProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustAmount {
            get {
                return this.EntrustAmountField;
            }
            set {
                if ((this.EntrustAmountField.Equals(value) != true)) {
                    this.EntrustAmountField = value;
                    this.RaisePropertyChanged("EntrustAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntrustTime {
            get {
                return this.EntrustTimeField;
            }
            set {
                if ((this.EntrustTimeField.Equals(value) != true)) {
                    this.EntrustTimeField = value;
                    this.RaisePropertyChanged("EntrustTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMarketValue {
            get {
                return this.IsMarketValueField;
            }
            set {
                if ((this.IsMarketValueField.Equals(value) != true)) {
                    this.IsMarketValueField = value;
                    this.RaisePropertyChanged("IsMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string McOrderId {
            get {
                return this.McOrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.McOrderIdField, value) != true)) {
                    this.McOrderIdField = value;
                    this.RaisePropertyChanged("McOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OfferTime {
            get {
                return this.OfferTimeField;
            }
            set {
                if ((this.OfferTimeField.Equals(value) != true)) {
                    this.OfferTimeField = value;
                    this.RaisePropertyChanged("OfferTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenCloseTypeId {
            get {
                return this.OpenCloseTypeIdField;
            }
            set {
                if ((this.OpenCloseTypeIdField.Equals(value) != true)) {
                    this.OpenCloseTypeIdField = value;
                    this.RaisePropertyChanged("OpenCloseTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatusId {
            get {
                return this.OrderStatusIdField;
            }
            set {
                if ((this.OrderStatusIdField.Equals(value) != true)) {
                    this.OrderStatusIdField = value;
                    this.RaisePropertyChanged("OrderStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeAccount {
            get {
                return this.TradeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeAccountField, value) != true)) {
                    this.TradeAccountField = value;
                    this.RaisePropertyChanged("TradeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeAveragePrice {
            get {
                return this.TradeAveragePriceField;
            }
            set {
                if ((this.TradeAveragePriceField.Equals(value) != true)) {
                    this.TradeAveragePriceField = value;
                    this.RaisePropertyChanged("TradeAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpotTradeConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class SpotTradeConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CanBeWithdrawnLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellDirection {
            get {
                return this.BuySellDirectionField;
            }
            set {
                if ((this.BuySellDirectionField.Equals(value) != true)) {
                    this.BuySellDirectionField = value;
                    this.RaisePropertyChanged("BuySellDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CanBeWithdrawnLogo {
            get {
                return this.CanBeWithdrawnLogoField;
            }
            set {
                if ((this.CanBeWithdrawnLogoField.Equals(value) != true)) {
                    this.CanBeWithdrawnLogoField = value;
                    this.RaisePropertyChanged("CanBeWithdrawnLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustState {
            get {
                return this.EntrustStateField;
            }
            set {
                if ((this.EntrustStateField.Equals(value) != true)) {
                    this.EntrustStateField = value;
                    this.RaisePropertyChanged("EntrustState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCapitalAccount {
            get {
                return this.SpotCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCapitalAccountField, value) != true)) {
                    this.SpotCapitalAccountField = value;
                    this.RaisePropertyChanged("SpotCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeType {
            get {
                return this.TradeTypeField;
            }
            set {
                if ((this.TradeTypeField.Equals(value) != true)) {
                    this.TradeTypeField = value;
                    this.RaisePropertyChanged("TradeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_TodayTradeTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_TodayTradeTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClearingFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonitoringFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StampTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeCapitalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeProceduresFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradingSystemUseFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransferAccountFeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClearingFee {
            get {
                return this.ClearingFeeField;
            }
            set {
                if ((this.ClearingFeeField.Equals(value) != true)) {
                    this.ClearingFeeField = value;
                    this.RaisePropertyChanged("ClearingFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonitoringFee {
            get {
                return this.MonitoringFeeField;
            }
            set {
                if ((this.MonitoringFeeField.Equals(value) != true)) {
                    this.MonitoringFeeField = value;
                    this.RaisePropertyChanged("MonitoringFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StampTax {
            get {
                return this.StampTaxField;
            }
            set {
                if ((this.StampTaxField.Equals(value) != true)) {
                    this.StampTaxField = value;
                    this.RaisePropertyChanged("StampTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockAccount {
            get {
                return this.StockAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.StockAccountField, value) != true)) {
                    this.StockAccountField = value;
                    this.RaisePropertyChanged("StockAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeCapitalAmount {
            get {
                return this.TradeCapitalAmountField;
            }
            set {
                if ((this.TradeCapitalAmountField.Equals(value) != true)) {
                    this.TradeCapitalAmountField = value;
                    this.RaisePropertyChanged("TradeCapitalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeProceduresFee {
            get {
                return this.TradeProceduresFeeField;
            }
            set {
                if ((this.TradeProceduresFeeField.Equals(value) != true)) {
                    this.TradeProceduresFeeField = value;
                    this.RaisePropertyChanged("TradeProceduresFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeTime {
            get {
                return this.TradeTimeField;
            }
            set {
                if ((this.TradeTimeField.Equals(value) != true)) {
                    this.TradeTimeField = value;
                    this.RaisePropertyChanged("TradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeTypeId {
            get {
                return this.TradeTypeIdField;
            }
            set {
                if ((this.TradeTypeIdField.Equals(value) != true)) {
                    this.TradeTypeIdField = value;
                    this.RaisePropertyChanged("TradeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradingSystemUseFee {
            get {
                return this.TradingSystemUseFeeField;
            }
            set {
                if ((this.TradingSystemUseFeeField.Equals(value) != true)) {
                    this.TradingSystemUseFeeField = value;
                    this.RaisePropertyChanged("TradingSystemUseFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransferAccountFee {
            get {
                return this.TransferAccountFeeField;
            }
            set {
                if ((this.TransferAccountFeeField.Equals(value) != true)) {
                    this.TransferAccountFeeField = value;
                    this.RaisePropertyChanged("TransferAccountFee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuturesTradeConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class FuturesTradeConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenCloseDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellDirection {
            get {
                return this.BuySellDirectionField;
            }
            set {
                if ((this.BuySellDirectionField.Equals(value) != true)) {
                    this.BuySellDirectionField = value;
                    this.RaisePropertyChanged("BuySellDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenCloseDirection {
            get {
                return this.OpenCloseDirectionField;
            }
            set {
                if ((this.OpenCloseDirectionField.Equals(value) != true)) {
                    this.OpenCloseDirectionField = value;
                    this.RaisePropertyChanged("OpenCloseDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeType {
            get {
                return this.TradeTypeField;
            }
            set {
                if ((this.TradeTypeField.Equals(value) != true)) {
                    this.TradeTypeField = value;
                    this.RaisePropertyChanged("TradeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((this.VarietyTypeField.Equals(value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QH_TodayTradeTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class QH_TodayTradeTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenCloseTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeProceduresFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((this.MarginField.Equals(value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketProfitLoss {
            get {
                return this.MarketProfitLossField;
            }
            set {
                if ((this.MarketProfitLossField.Equals(value) != true)) {
                    this.MarketProfitLossField = value;
                    this.RaisePropertyChanged("MarketProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenCloseTypeId {
            get {
                return this.OpenCloseTypeIdField;
            }
            set {
                if ((this.OpenCloseTypeIdField.Equals(value) != true)) {
                    this.OpenCloseTypeIdField = value;
                    this.RaisePropertyChanged("OpenCloseTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeAccount {
            get {
                return this.TradeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeAccountField, value) != true)) {
                    this.TradeAccountField = value;
                    this.RaisePropertyChanged("TradeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeProceduresFee {
            get {
                return this.TradeProceduresFeeField;
            }
            set {
                if ((this.TradeProceduresFeeField.Equals(value) != true)) {
                    this.TradeProceduresFeeField = value;
                    this.RaisePropertyChanged("TradeProceduresFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeTime {
            get {
                return this.TradeTimeField;
            }
            set {
                if ((this.TradeTimeField.Equals(value) != true)) {
                    this.TradeTimeField = value;
                    this.RaisePropertyChanged("TradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeTypeId {
            get {
                return this.TradeTypeIdField;
            }
            set {
                if ((this.TradeTypeIdField.Equals(value) != true)) {
                    this.TradeTypeIdField = value;
                    this.RaisePropertyChanged("TradeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_HistoryEntrustTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_HistoryEntrustTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CancelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustMountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntrustTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HasDoneProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string McOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OfferTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CancelAmount {
            get {
                return this.CancelAmountField;
            }
            set {
                if ((this.CancelAmountField.Equals(value) != true)) {
                    this.CancelAmountField = value;
                    this.RaisePropertyChanged("CancelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustMount {
            get {
                return this.EntrustMountField;
            }
            set {
                if ((this.EntrustMountField.Equals(value) != true)) {
                    this.EntrustMountField = value;
                    this.RaisePropertyChanged("EntrustMount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntrustTime {
            get {
                return this.EntrustTimeField;
            }
            set {
                if ((this.EntrustTimeField.Equals(value) != true)) {
                    this.EntrustTimeField = value;
                    this.RaisePropertyChanged("EntrustTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HasDoneProfit {
            get {
                return this.HasDoneProfitField;
            }
            set {
                if ((this.HasDoneProfitField.Equals(value) != true)) {
                    this.HasDoneProfitField = value;
                    this.RaisePropertyChanged("HasDoneProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMarketValue {
            get {
                return this.IsMarketValueField;
            }
            set {
                if ((this.IsMarketValueField.Equals(value) != true)) {
                    this.IsMarketValueField = value;
                    this.RaisePropertyChanged("IsMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string McOrderId {
            get {
                return this.McOrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.McOrderIdField, value) != true)) {
                    this.McOrderIdField = value;
                    this.RaisePropertyChanged("McOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OfferTime {
            get {
                return this.OfferTimeField;
            }
            set {
                if ((this.OfferTimeField.Equals(value) != true)) {
                    this.OfferTimeField = value;
                    this.RaisePropertyChanged("OfferTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatusId {
            get {
                return this.OrderStatusIdField;
            }
            set {
                if ((this.OrderStatusIdField.Equals(value) != true)) {
                    this.OrderStatusIdField = value;
                    this.RaisePropertyChanged("OrderStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockAccount {
            get {
                return this.StockAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.StockAccountField, value) != true)) {
                    this.StockAccountField = value;
                    this.RaisePropertyChanged("StockAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeAveragePrice {
            get {
                return this.TradeAveragePriceField;
            }
            set {
                if ((this.TradeAveragePriceField.Equals(value) != true)) {
                    this.TradeAveragePriceField = value;
                    this.RaisePropertyChanged("TradeAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QH_HistoryEntrustTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class QH_HistoryEntrustTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CancelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CloseFloatProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CloseMarketProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntrustTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string McOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OfferTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenCloseTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CancelAmount {
            get {
                return this.CancelAmountField;
            }
            set {
                if ((this.CancelAmountField.Equals(value) != true)) {
                    this.CancelAmountField = value;
                    this.RaisePropertyChanged("CancelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CloseFloatProfitLoss {
            get {
                return this.CloseFloatProfitLossField;
            }
            set {
                if ((this.CloseFloatProfitLossField.Equals(value) != true)) {
                    this.CloseFloatProfitLossField = value;
                    this.RaisePropertyChanged("CloseFloatProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CloseMarketProfitLoss {
            get {
                return this.CloseMarketProfitLossField;
            }
            set {
                if ((this.CloseMarketProfitLossField.Equals(value) != true)) {
                    this.CloseMarketProfitLossField = value;
                    this.RaisePropertyChanged("CloseMarketProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustAmount {
            get {
                return this.EntrustAmountField;
            }
            set {
                if ((this.EntrustAmountField.Equals(value) != true)) {
                    this.EntrustAmountField = value;
                    this.RaisePropertyChanged("EntrustAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntrustTime {
            get {
                return this.EntrustTimeField;
            }
            set {
                if ((this.EntrustTimeField.Equals(value) != true)) {
                    this.EntrustTimeField = value;
                    this.RaisePropertyChanged("EntrustTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMarketValue {
            get {
                return this.IsMarketValueField;
            }
            set {
                if ((this.IsMarketValueField.Equals(value) != true)) {
                    this.IsMarketValueField = value;
                    this.RaisePropertyChanged("IsMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string McOrderId {
            get {
                return this.McOrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.McOrderIdField, value) != true)) {
                    this.McOrderIdField = value;
                    this.RaisePropertyChanged("McOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OfferTime {
            get {
                return this.OfferTimeField;
            }
            set {
                if ((this.OfferTimeField.Equals(value) != true)) {
                    this.OfferTimeField = value;
                    this.RaisePropertyChanged("OfferTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenCloseTypeId {
            get {
                return this.OpenCloseTypeIdField;
            }
            set {
                if ((this.OpenCloseTypeIdField.Equals(value) != true)) {
                    this.OpenCloseTypeIdField = value;
                    this.RaisePropertyChanged("OpenCloseTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatusId {
            get {
                return this.OrderStatusIdField;
            }
            set {
                if ((this.OrderStatusIdField.Equals(value) != true)) {
                    this.OrderStatusIdField = value;
                    this.RaisePropertyChanged("OrderStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeAccount {
            get {
                return this.TradeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeAccountField, value) != true)) {
                    this.TradeAccountField = value;
                    this.RaisePropertyChanged("TradeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeAveragePrice {
            get {
                return this.TradeAveragePriceField;
            }
            set {
                if ((this.TradeAveragePriceField.Equals(value) != true)) {
                    this.TradeAveragePriceField = value;
                    this.RaisePropertyChanged("TradeAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_HistoryTradeTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_HistoryTradeTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClearingFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonitoringFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StampTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeProceduresFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradingSystemUseFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransferAccountFeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClearingFee {
            get {
                return this.ClearingFeeField;
            }
            set {
                if ((this.ClearingFeeField.Equals(value) != true)) {
                    this.ClearingFeeField = value;
                    this.RaisePropertyChanged("ClearingFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonitoringFee {
            get {
                return this.MonitoringFeeField;
            }
            set {
                if ((this.MonitoringFeeField.Equals(value) != true)) {
                    this.MonitoringFeeField = value;
                    this.RaisePropertyChanged("MonitoringFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StampTax {
            get {
                return this.StampTaxField;
            }
            set {
                if ((this.StampTaxField.Equals(value) != true)) {
                    this.StampTaxField = value;
                    this.RaisePropertyChanged("StampTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockAccount {
            get {
                return this.StockAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.StockAccountField, value) != true)) {
                    this.StockAccountField = value;
                    this.RaisePropertyChanged("StockAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeProceduresFee {
            get {
                return this.TradeProceduresFeeField;
            }
            set {
                if ((this.TradeProceduresFeeField.Equals(value) != true)) {
                    this.TradeProceduresFeeField = value;
                    this.RaisePropertyChanged("TradeProceduresFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeTime {
            get {
                return this.TradeTimeField;
            }
            set {
                if ((this.TradeTimeField.Equals(value) != true)) {
                    this.TradeTimeField = value;
                    this.RaisePropertyChanged("TradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeTypeId {
            get {
                return this.TradeTypeIdField;
            }
            set {
                if ((this.TradeTypeIdField.Equals(value) != true)) {
                    this.TradeTypeIdField = value;
                    this.RaisePropertyChanged("TradeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradingSystemUseFee {
            get {
                return this.TradingSystemUseFeeField;
            }
            set {
                if ((this.TradingSystemUseFeeField.Equals(value) != true)) {
                    this.TradingSystemUseFeeField = value;
                    this.RaisePropertyChanged("TradingSystemUseFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransferAccountFee {
            get {
                return this.TransferAccountFeeField;
            }
            set {
                if ((this.TransferAccountFeeField.Equals(value) != true)) {
                    this.TransferAccountFeeField = value;
                    this.RaisePropertyChanged("TransferAccountFee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QH_HistoryTradeTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class QH_HistoryTradeTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpenCloseTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeProceduresFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((this.MarginField.Equals(value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketProfitLoss {
            get {
                return this.MarketProfitLossField;
            }
            set {
                if ((this.MarketProfitLossField.Equals(value) != true)) {
                    this.MarketProfitLossField = value;
                    this.RaisePropertyChanged("MarketProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpenCloseTypeId {
            get {
                return this.OpenCloseTypeIdField;
            }
            set {
                if ((this.OpenCloseTypeIdField.Equals(value) != true)) {
                    this.OpenCloseTypeIdField = value;
                    this.RaisePropertyChanged("OpenCloseTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeAccount {
            get {
                return this.TradeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeAccountField, value) != true)) {
                    this.TradeAccountField = value;
                    this.RaisePropertyChanged("TradeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeProceduresFee {
            get {
                return this.TradeProceduresFeeField;
            }
            set {
                if ((this.TradeProceduresFeeField.Equals(value) != true)) {
                    this.TradeProceduresFeeField = value;
                    this.RaisePropertyChanged("TradeProceduresFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeTime {
            get {
                return this.TradeTimeField;
            }
            set {
                if ((this.TradeTimeField.Equals(value) != true)) {
                    this.TradeTimeField = value;
                    this.RaisePropertyChanged("TradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeTypeId {
            get {
                return this.TradeTypeIdField;
            }
            set {
                if ((this.TradeTypeIdField.Equals(value) != true)) {
                    this.TradeTypeIdField = value;
                    this.RaisePropertyChanged("TradeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpotHoldConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class SpotHoldConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CouldAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezeTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotHoldAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CouldAmount {
            get {
                return this.CouldAmountField;
            }
            set {
                if ((this.CouldAmountField.Equals(value) != true)) {
                    this.CouldAmountField = value;
                    this.RaisePropertyChanged("CouldAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentPrice {
            get {
                return this.CurrentPriceField;
            }
            set {
                if ((this.CurrentPriceField.Equals(value) != true)) {
                    this.CurrentPriceField = value;
                    this.RaisePropertyChanged("CurrentPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FreezeTotal {
            get {
                return this.FreezeTotalField;
            }
            set {
                if ((this.FreezeTotalField.Equals(value) != true)) {
                    this.FreezeTotalField = value;
                    this.RaisePropertyChanged("FreezeTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoldAveragePrice {
            get {
                return this.HoldAveragePriceField;
            }
            set {
                if ((this.HoldAveragePriceField.Equals(value) != true)) {
                    this.HoldAveragePriceField = value;
                    this.RaisePropertyChanged("HoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldTotal {
            get {
                return this.HoldTotalField;
            }
            set {
                if ((this.HoldTotalField.Equals(value) != true)) {
                    this.HoldTotalField = value;
                    this.RaisePropertyChanged("HoldTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotHoldAccount {
            get {
                return this.SpotHoldAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotHoldAccountField, value) != true)) {
                    this.SpotHoldAccountField = value;
                    this.RaisePropertyChanged("SpotHoldAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyCode {
            get {
                return this.VarietyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyCodeField, value) != true)) {
                    this.VarietyCodeField = value;
                    this.RaisePropertyChanged("VarietyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyName {
            get {
                return this.VarietyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyNameField, value) != true)) {
                    this.VarietyNameField = value;
                    this.RaisePropertyChanged("VarietyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpotHoldFindResultEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class SpotHoldFindResultEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BelongMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErroNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErroReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FloatProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.TraderFindService.XH_AccountHoldTableInfo HoldFindResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldSumAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RealtimePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyCategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BelongMarket {
            get {
                return this.BelongMarketField;
            }
            set {
                if ((object.ReferenceEquals(this.BelongMarketField, value) != true)) {
                    this.BelongMarketField = value;
                    this.RaisePropertyChanged("BelongMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErroNumber {
            get {
                return this.ErroNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ErroNumberField, value) != true)) {
                    this.ErroNumberField = value;
                    this.RaisePropertyChanged("ErroNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErroReason {
            get {
                return this.ErroReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ErroReasonField, value) != true)) {
                    this.ErroReasonField = value;
                    this.RaisePropertyChanged("ErroReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FloatProfitLoss {
            get {
                return this.FloatProfitLossField;
            }
            set {
                if ((this.FloatProfitLossField.Equals(value) != true)) {
                    this.FloatProfitLossField = value;
                    this.RaisePropertyChanged("FloatProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.TraderFindService.XH_AccountHoldTableInfo HoldFindResult {
            get {
                return this.HoldFindResultField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldFindResultField, value) != true)) {
                    this.HoldFindResultField = value;
                    this.RaisePropertyChanged("HoldFindResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldSumAmount {
            get {
                return this.HoldSumAmountField;
            }
            set {
                if ((this.HoldSumAmountField.Equals(value) != true)) {
                    this.HoldSumAmountField = value;
                    this.RaisePropertyChanged("HoldSumAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RealtimePrice {
            get {
                return this.RealtimePriceField;
            }
            set {
                if ((this.RealtimePriceField.Equals(value) != true)) {
                    this.RealtimePriceField = value;
                    this.RaisePropertyChanged("RealtimePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotName {
            get {
                return this.SpotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotNameField, value) != true)) {
                    this.SpotNameField = value;
                    this.RaisePropertyChanged("SpotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyCategories {
            get {
                return this.VarietyCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyCategoriesField, value) != true)) {
                    this.VarietyCategoriesField = value;
                    this.RaisePropertyChanged("VarietyCategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XH_AccountHoldTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class XH_AccountHoldTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountHoldLogoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BreakevenPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountHoldLogoId {
            get {
                return this.AccountHoldLogoIdField;
            }
            set {
                if ((this.AccountHoldLogoIdField.Equals(value) != true)) {
                    this.AccountHoldLogoIdField = value;
                    this.RaisePropertyChanged("AccountHoldLogoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableAmount {
            get {
                return this.AvailableAmountField;
            }
            set {
                if ((this.AvailableAmountField.Equals(value) != true)) {
                    this.AvailableAmountField = value;
                    this.RaisePropertyChanged("AvailableAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BreakevenPrice {
            get {
                return this.BreakevenPriceField;
            }
            set {
                if ((this.BreakevenPriceField.Equals(value) != true)) {
                    this.BreakevenPriceField = value;
                    this.RaisePropertyChanged("BreakevenPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostPrice {
            get {
                return this.CostPriceField;
            }
            set {
                if ((this.CostPriceField.Equals(value) != true)) {
                    this.CostPriceField = value;
                    this.RaisePropertyChanged("CostPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeAmount {
            get {
                return this.FreezeAmountField;
            }
            set {
                if ((this.FreezeAmountField.Equals(value) != true)) {
                    this.FreezeAmountField = value;
                    this.RaisePropertyChanged("FreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoldAveragePrice {
            get {
                return this.HoldAveragePriceField;
            }
            set {
                if ((this.HoldAveragePriceField.Equals(value) != true)) {
                    this.HoldAveragePriceField = value;
                    this.RaisePropertyChanged("HoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuturesHoldConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class FuturesHoldConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellDirectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CouldAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezeTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuturesHoldAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellDirectionId {
            get {
                return this.BuySellDirectionIdField;
            }
            set {
                if ((this.BuySellDirectionIdField.Equals(value) != true)) {
                    this.BuySellDirectionIdField = value;
                    this.RaisePropertyChanged("BuySellDirectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CouldAmount {
            get {
                return this.CouldAmountField;
            }
            set {
                if ((this.CouldAmountField.Equals(value) != true)) {
                    this.CouldAmountField = value;
                    this.RaisePropertyChanged("CouldAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentPrice {
            get {
                return this.CurrentPriceField;
            }
            set {
                if ((this.CurrentPriceField.Equals(value) != true)) {
                    this.CurrentPriceField = value;
                    this.RaisePropertyChanged("CurrentPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FreezeTotal {
            get {
                return this.FreezeTotalField;
            }
            set {
                if ((this.FreezeTotalField.Equals(value) != true)) {
                    this.FreezeTotalField = value;
                    this.RaisePropertyChanged("FreezeTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuturesHoldAccount {
            get {
                return this.FuturesHoldAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FuturesHoldAccountField, value) != true)) {
                    this.FuturesHoldAccountField = value;
                    this.RaisePropertyChanged("FuturesHoldAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoldAveragePrice {
            get {
                return this.HoldAveragePriceField;
            }
            set {
                if ((this.HoldAveragePriceField.Equals(value) != true)) {
                    this.HoldAveragePriceField = value;
                    this.RaisePropertyChanged("HoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldTotal {
            get {
                return this.HoldTotalField;
            }
            set {
                if ((this.HoldTotalField.Equals(value) != true)) {
                    this.HoldTotalField = value;
                    this.RaisePropertyChanged("HoldTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyCode {
            get {
                return this.VarietyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyCodeField, value) != true)) {
                    this.VarietyCodeField = value;
                    this.RaisePropertyChanged("VarietyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyName {
            get {
                return this.VarietyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyNameField, value) != true)) {
                    this.VarietyNameField = value;
                    this.RaisePropertyChanged("VarietyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuturesHoldFindResultEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class FuturesHoldFindResultEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvailableTotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BelongMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BreakevenPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuySellDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErroNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErroReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FloatProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezeTotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCapabilityTest.TraderFindService.QH_HoldAccountTableInfo HoldFindResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldSumAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarginAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RealtimePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TodayAOpenAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayOpenAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitMultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal YesterdayClearingPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvailableTotalAmount {
            get {
                return this.AvailableTotalAmountField;
            }
            set {
                if ((this.AvailableTotalAmountField.Equals(value) != true)) {
                    this.AvailableTotalAmountField = value;
                    this.RaisePropertyChanged("AvailableTotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BelongMarket {
            get {
                return this.BelongMarketField;
            }
            set {
                if ((object.ReferenceEquals(this.BelongMarketField, value) != true)) {
                    this.BelongMarketField = value;
                    this.RaisePropertyChanged("BelongMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BreakevenPrice {
            get {
                return this.BreakevenPriceField;
            }
            set {
                if ((this.BreakevenPriceField.Equals(value) != true)) {
                    this.BreakevenPriceField = value;
                    this.RaisePropertyChanged("BreakevenPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuySellDirection {
            get {
                return this.BuySellDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.BuySellDirectionField, value) != true)) {
                    this.BuySellDirectionField = value;
                    this.RaisePropertyChanged("BuySellDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractName {
            get {
                return this.ContractNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractNameField, value) != true)) {
                    this.ContractNameField = value;
                    this.RaisePropertyChanged("ContractName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostPrice {
            get {
                return this.CostPriceField;
            }
            set {
                if ((this.CostPriceField.Equals(value) != true)) {
                    this.CostPriceField = value;
                    this.RaisePropertyChanged("CostPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErroNumber {
            get {
                return this.ErroNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ErroNumberField, value) != true)) {
                    this.ErroNumberField = value;
                    this.RaisePropertyChanged("ErroNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErroReason {
            get {
                return this.ErroReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ErroReasonField, value) != true)) {
                    this.ErroReasonField = value;
                    this.RaisePropertyChanged("ErroReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FloatProfitLoss {
            get {
                return this.FloatProfitLossField;
            }
            set {
                if ((this.FloatProfitLossField.Equals(value) != true)) {
                    this.FloatProfitLossField = value;
                    this.RaisePropertyChanged("FloatProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FreezeTotalAmount {
            get {
                return this.FreezeTotalAmountField;
            }
            set {
                if ((this.FreezeTotalAmountField.Equals(value) != true)) {
                    this.FreezeTotalAmountField = value;
                    this.RaisePropertyChanged("FreezeTotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoldAveragePrice {
            get {
                return this.HoldAveragePriceField;
            }
            set {
                if ((this.HoldAveragePriceField.Equals(value) != true)) {
                    this.HoldAveragePriceField = value;
                    this.RaisePropertyChanged("HoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCapabilityTest.TraderFindService.QH_HoldAccountTableInfo HoldFindResult {
            get {
                return this.HoldFindResultField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldFindResultField, value) != true)) {
                    this.HoldFindResultField = value;
                    this.RaisePropertyChanged("HoldFindResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldSumAmount {
            get {
                return this.HoldSumAmountField;
            }
            set {
                if ((this.HoldSumAmountField.Equals(value) != true)) {
                    this.HoldSumAmountField = value;
                    this.RaisePropertyChanged("HoldSumAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarginAmount {
            get {
                return this.MarginAmountField;
            }
            set {
                if ((this.MarginAmountField.Equals(value) != true)) {
                    this.MarginAmountField = value;
                    this.RaisePropertyChanged("MarginAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketProfitLoss {
            get {
                return this.MarketProfitLossField;
            }
            set {
                if ((this.MarketProfitLossField.Equals(value) != true)) {
                    this.MarketProfitLossField = value;
                    this.RaisePropertyChanged("MarketProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RealtimePrice {
            get {
                return this.RealtimePriceField;
            }
            set {
                if ((this.RealtimePriceField.Equals(value) != true)) {
                    this.RealtimePriceField = value;
                    this.RaisePropertyChanged("RealtimePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TodayAOpenAmount {
            get {
                return this.TodayAOpenAmountField;
            }
            set {
                if ((this.TodayAOpenAmountField.Equals(value) != true)) {
                    this.TodayAOpenAmountField = value;
                    this.RaisePropertyChanged("TodayAOpenAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayOpenAveragePrice {
            get {
                return this.TodayOpenAveragePriceField;
            }
            set {
                if ((this.TodayOpenAveragePriceField.Equals(value) != true)) {
                    this.TodayOpenAveragePriceField = value;
                    this.RaisePropertyChanged("TodayOpenAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitMultiple {
            get {
                return this.UnitMultipleField;
            }
            set {
                if ((this.UnitMultipleField.Equals(value) != true)) {
                    this.UnitMultipleField = value;
                    this.RaisePropertyChanged("UnitMultiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyCategories {
            get {
                return this.VarietyCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyCategoriesField, value) != true)) {
                    this.VarietyCategoriesField = value;
                    this.RaisePropertyChanged("VarietyCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal YesterdayClearingPrice {
            get {
                return this.YesterdayClearingPriceField;
            }
            set {
                if ((this.YesterdayClearingPriceField.Equals(value) != true)) {
                    this.YesterdayClearingPriceField = value;
                    this.RaisePropertyChanged("YesterdayClearingPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QH_HoldAccountTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class QH_HoldAccountTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountHoldLogoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BreakevenPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HistoryFreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HistoryHoldAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OpenAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayFreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayHoldAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayHoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountHoldLogoId {
            get {
                return this.AccountHoldLogoIdField;
            }
            set {
                if ((this.AccountHoldLogoIdField.Equals(value) != true)) {
                    this.AccountHoldLogoIdField = value;
                    this.RaisePropertyChanged("AccountHoldLogoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BreakevenPrice {
            get {
                return this.BreakevenPriceField;
            }
            set {
                if ((this.BreakevenPriceField.Equals(value) != true)) {
                    this.BreakevenPriceField = value;
                    this.RaisePropertyChanged("BreakevenPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contract {
            get {
                return this.ContractField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractField, value) != true)) {
                    this.ContractField = value;
                    this.RaisePropertyChanged("Contract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostPrice {
            get {
                return this.CostPriceField;
            }
            set {
                if ((this.CostPriceField.Equals(value) != true)) {
                    this.CostPriceField = value;
                    this.RaisePropertyChanged("CostPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HistoryFreezeAmount {
            get {
                return this.HistoryFreezeAmountField;
            }
            set {
                if ((this.HistoryFreezeAmountField.Equals(value) != true)) {
                    this.HistoryFreezeAmountField = value;
                    this.RaisePropertyChanged("HistoryFreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HistoryHoldAmount {
            get {
                return this.HistoryHoldAmountField;
            }
            set {
                if ((this.HistoryHoldAmountField.Equals(value) != true)) {
                    this.HistoryHoldAmountField = value;
                    this.RaisePropertyChanged("HistoryHoldAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoldAveragePrice {
            get {
                return this.HoldAveragePriceField;
            }
            set {
                if ((this.HoldAveragePriceField.Equals(value) != true)) {
                    this.HoldAveragePriceField = value;
                    this.RaisePropertyChanged("HoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((this.MarginField.Equals(value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OpenAveragePrice {
            get {
                return this.OpenAveragePriceField;
            }
            set {
                if ((this.OpenAveragePriceField.Equals(value) != true)) {
                    this.OpenAveragePriceField = value;
                    this.RaisePropertyChanged("OpenAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ProfitLoss {
            get {
                return this.ProfitLossField;
            }
            set {
                if ((this.ProfitLossField.Equals(value) != true)) {
                    this.ProfitLossField = value;
                    this.RaisePropertyChanged("ProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayFreezeAmount {
            get {
                return this.TodayFreezeAmountField;
            }
            set {
                if ((this.TodayFreezeAmountField.Equals(value) != true)) {
                    this.TodayFreezeAmountField = value;
                    this.RaisePropertyChanged("TodayFreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayHoldAmount {
            get {
                return this.TodayHoldAmountField;
            }
            set {
                if ((this.TodayHoldAmountField.Equals(value) != true)) {
                    this.TodayHoldAmountField = value;
                    this.RaisePropertyChanged("TodayHoldAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayHoldAveragePrice {
            get {
                return this.TodayHoldAveragePriceField;
            }
            set {
                if ((this.TodayHoldAveragePriceField.Equals(value) != true)) {
                    this.TodayHoldAveragePriceField = value;
                    this.RaisePropertyChanged("TodayHoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeCurrencyType {
            get {
                return this.TradeCurrencyTypeField;
            }
            set {
                if ((this.TradeCurrencyTypeField.Equals(value) != true)) {
                    this.TradeCurrencyTypeField = value;
                    this.RaisePropertyChanged("TradeCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UA_CapitalFlowTableInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Model")]
    [System.SerializableAttribute()]
    public partial class UA_CapitalFlowTableInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalFlowLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransferAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferTypeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalFlowLogo {
            get {
                return this.CapitalFlowLogoField;
            }
            set {
                if ((this.CapitalFlowLogoField.Equals(value) != true)) {
                    this.CapitalFlowLogoField = value;
                    this.RaisePropertyChanged("CapitalFlowLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromCapitalAccount {
            get {
                return this.FromCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FromCapitalAccountField, value) != true)) {
                    this.FromCapitalAccountField = value;
                    this.RaisePropertyChanged("FromCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToCapitalAccount {
            get {
                return this.ToCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ToCapitalAccountField, value) != true)) {
                    this.ToCapitalAccountField = value;
                    this.RaisePropertyChanged("ToCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeCurrencyType {
            get {
                return this.TradeCurrencyTypeField;
            }
            set {
                if ((this.TradeCurrencyTypeField.Equals(value) != true)) {
                    this.TradeCurrencyTypeField = value;
                    this.RaisePropertyChanged("TradeCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransferAmount {
            get {
                return this.TransferAmountField;
            }
            set {
                if ((this.TransferAmountField.Equals(value) != true)) {
                    this.TransferAmountField = value;
                    this.RaisePropertyChanged("TransferAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferTime {
            get {
                return this.TransferTimeField;
            }
            set {
                if ((this.TransferTimeField.Equals(value) != true)) {
                    this.TransferTimeField = value;
                    this.RaisePropertyChanged("TransferTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferTypeLogo {
            get {
                return this.TransferTypeLogoField;
            }
            set {
                if ((this.TransferTypeLogoField.Equals(value) != true)) {
                    this.TransferTypeLogoField = value;
                    this.RaisePropertyChanged("TransferTypeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FreeTransferEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class FreeTransferEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromCapitalAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToCapitalAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransferAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromCapitalAccount {
            get {
                return this.FromCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FromCapitalAccountField, value) != true)) {
                    this.FromCapitalAccountField = value;
                    this.RaisePropertyChanged("FromCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromCapitalAccountType {
            get {
                return this.FromCapitalAccountTypeField;
            }
            set {
                if ((this.FromCapitalAccountTypeField.Equals(value) != true)) {
                    this.FromCapitalAccountTypeField = value;
                    this.RaisePropertyChanged("FromCapitalAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToCapitalAccount {
            get {
                return this.ToCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ToCapitalAccountField, value) != true)) {
                    this.ToCapitalAccountField = value;
                    this.RaisePropertyChanged("ToCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToCapitalAccountType {
            get {
                return this.ToCapitalAccountTypeField;
            }
            set {
                if ((this.ToCapitalAccountTypeField.Equals(value) != true)) {
                    this.ToCapitalAccountTypeField = value;
                    this.RaisePropertyChanged("ToCapitalAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransferAmount {
            get {
                return this.TransferAmountField;
            }
            set {
                if ((this.TransferAmountField.Equals(value) != true)) {
                    this.TransferAmountField = value;
                    this.RaisePropertyChanged("TransferAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetSummaryEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class AssetSummaryEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HKAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HKFreezeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RMBAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RMBFreezeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal USAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal USFreezeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HKAvailable {
            get {
                return this.HKAvailableField;
            }
            set {
                if ((this.HKAvailableField.Equals(value) != true)) {
                    this.HKAvailableField = value;
                    this.RaisePropertyChanged("HKAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HKFreeze {
            get {
                return this.HKFreezeField;
            }
            set {
                if ((this.HKFreezeField.Equals(value) != true)) {
                    this.HKFreezeField = value;
                    this.RaisePropertyChanged("HKFreeze");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RMBAvailable {
            get {
                return this.RMBAvailableField;
            }
            set {
                if ((this.RMBAvailableField.Equals(value) != true)) {
                    this.RMBAvailableField = value;
                    this.RaisePropertyChanged("RMBAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RMBFreeze {
            get {
                return this.RMBFreezeField;
            }
            set {
                if ((this.RMBFreezeField.Equals(value) != true)) {
                    this.RMBFreezeField = value;
                    this.RaisePropertyChanged("RMBFreeze");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal USAvailable {
            get {
                return this.USAvailableField;
            }
            set {
                if ((this.USAvailableField.Equals(value) != true)) {
                    this.USAvailableField = value;
                    this.RaisePropertyChanged("USAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal USFreeze {
            get {
                return this.USFreezeField;
            }
            set {
                if ((this.USFreezeField.Equals(value) != true)) {
                    this.USFreezeField = value;
                    this.RaisePropertyChanged("USFreeze");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TraderFindService.ITraderFind")]
    public interface ITraderFind {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/BankCapitalFind", ReplyAction="http://tempuri.org/ITraderFind/BankCapitalFindResponse")]
        ReckoningCapabilityTest.TraderFindService.UA_BankAccountTableInfo[] BankCapitalFind(out string outMessage, string userId, string bankAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotCapitalFind", ReplyAction="http://tempuri.org/ITraderFind/SpotCapitalFindResponse")]
        ReckoningCapabilityTest.TraderFindService.SpotCapitalEntity SpotCapitalFind(string strFundAccountId, ReckoningCapabilityTest.TraderFindService.TypesCurrencyType currencyType, string userPassword, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/FuturesCapitalFind", ReplyAction="http://tempuri.org/ITraderFind/FuturesCapitalFindResponse")]
        ReckoningCapabilityTest.TraderFindService.FuturesCapitalEntity FuturesCapitalFind(string strFundAccountId, ReckoningCapabilityTest.TraderFindService.TypesCurrencyType currencyType, string userPassword, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotTodayEntrustFindByXhCapitalAccount", ReplyAction="http://tempuri.org/ITraderFind/SpotTodayEntrustFindByXhCapitalAccountResponse")]
        ReckoningCapabilityTest.TraderFindService.XH_TodayEntrustTableInfo[] SpotTodayEntrustFindByXhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.SpotEntrustConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/FuturesTodayEntrustFindByQhCapitalAccount", ReplyAction="http://tempuri.org/ITraderFind/FuturesTodayEntrustFindByQhCapitalAccountResponse")]
        ReckoningCapabilityTest.TraderFindService.QH_TodayEntrustTableInfo[] FuturesTodayEntrustFindByQhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesEntrustConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotTodayTradeFindByCapitalAccount", ReplyAction="http://tempuri.org/ITraderFind/SpotTodayTradeFindByCapitalAccountResponse")]
        ReckoningCapabilityTest.TraderFindService.XH_TodayTradeTableInfo[] SpotTodayTradeFindByCapitalAccount(out int count, out string strErrorMessage, string capitalAccount, string userPassword, int start, int pageLength, ReckoningCapabilityTest.TraderFindService.SpotTradeConditionFindEntity findCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/FuturesTodayTradeFindByXhCapitalAccount", ReplyAction="http://tempuri.org/ITraderFind/FuturesTodayTradeFindByXhCapitalAccountResponse")]
        ReckoningCapabilityTest.TraderFindService.QH_TodayTradeTableInfo[] FuturesTodayTradeFindByXhCapitalAccount(out int count, out string strErrorMessage, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesTradeConditionFindEntity findCondition, int start, int pageLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotHistoryEntrustFind", ReplyAction="http://tempuri.org/ITraderFind/SpotHistoryEntrustFindResponse")]
        ReckoningCapabilityTest.TraderFindService.XH_HistoryEntrustTableInfo[] SpotHistoryEntrustFind(out int count, out string strErrorMessage, string capitalAccount, string userPassword, int start, int pageLength, ReckoningCapabilityTest.TraderFindService.SpotEntrustConditionFindEntity findCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/FuturesHistoryEntrustFindByQhCapitalAccount", ReplyAction="http://tempuri.org/ITraderFind/FuturesHistoryEntrustFindByQhCapitalAccountRespons" +
            "e")]
        ReckoningCapabilityTest.TraderFindService.QH_HistoryEntrustTableInfo[] FuturesHistoryEntrustFindByQhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesEntrustConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotHistoryTradeFind", ReplyAction="http://tempuri.org/ITraderFind/SpotHistoryTradeFindResponse")]
        ReckoningCapabilityTest.TraderFindService.XH_HistoryTradeTableInfo[] SpotHistoryTradeFind(out int count, out string strErrorMessage, string capitalAccount, string userPassword, int start, int pageLength, ReckoningCapabilityTest.TraderFindService.SpotTradeConditionFindEntity findCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/FuturesHistoryTradeFindByXhCapitalAccount", ReplyAction="http://tempuri.org/ITraderFind/FuturesHistoryTradeFindByXhCapitalAccountResponse")]
        ReckoningCapabilityTest.TraderFindService.QH_HistoryTradeTableInfo[] FuturesHistoryTradeFindByXhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesTradeConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotHoldFind", ReplyAction="http://tempuri.org/ITraderFind/SpotHoldFindResponse")]
        ReckoningCapabilityTest.TraderFindService.SpotHoldFindResultEntity[] SpotHoldFind(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.SpotHoldConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/FuturesHoldFind", ReplyAction="http://tempuri.org/ITraderFind/FuturesHoldFindResponse")]
        ReckoningCapabilityTest.TraderFindService.FuturesHoldFindResultEntity[] FuturesHoldFind(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesHoldConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/BankCapitalAccountTransferFlowFind", ReplyAction="http://tempuri.org/ITraderFind/BankCapitalAccountTransferFlowFindResponse")]
        ReckoningCapabilityTest.TraderFindService.UA_CapitalFlowTableInfo[] BankCapitalAccountTransferFlowFind(out int count, out string strErrorMessage, string userId, string capitalAccount, string userPassword, System.DateTime startTime, System.DateTime endTime, int start, int pageLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotCapitalAccountTransferFlowFind", ReplyAction="http://tempuri.org/ITraderFind/SpotCapitalAccountTransferFlowFindResponse")]
        ReckoningCapabilityTest.TraderFindService.UA_CapitalFlowTableInfo[] SpotCapitalAccountTransferFlowFind(out int count, out string strErrorMessage, string userId, string capitalAccount, string userPassword, System.DateTime startTime, System.DateTime endTime, int start, int pageLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/FuturesCapitalAccountTransferFlowFind", ReplyAction="http://tempuri.org/ITraderFind/FuturesCapitalAccountTransferFlowFindResponse")]
        ReckoningCapabilityTest.TraderFindService.UA_CapitalFlowTableInfo[] FuturesCapitalAccountTransferFlowFind(out int count, out string strErrorMessage, string userId, string capitalAccount, string userPassword, System.DateTime startTime, System.DateTime endTime, int start, int pageLength);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/TwoAccountsFreeTransferFunds", ReplyAction="http://tempuri.org/ITraderFind/TwoAccountsFreeTransferFundsResponse")]
        bool TwoAccountsFreeTransferFunds(out string outMessage, ReckoningCapabilityTest.TraderFindService.FreeTransferEntity freeTransfer, ReckoningCapabilityTest.TraderFindService.TypesCurrencyType currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/AssetSummaryFind", ReplyAction="http://tempuri.org/ITraderFind/AssetSummaryFindResponse")]
        ReckoningCapabilityTest.TraderFindService.AssetSummaryEntity[] AssetSummaryFind(out string outMessage, string traderId, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITraderFindChannel : ReckoningCapabilityTest.TraderFindService.ITraderFind, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TraderFindClient : System.ServiceModel.ClientBase<ReckoningCapabilityTest.TraderFindService.ITraderFind>, ReckoningCapabilityTest.TraderFindService.ITraderFind {
        
        public TraderFindClient() {
        }
        
        public TraderFindClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TraderFindClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraderFindClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraderFindClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReckoningCapabilityTest.TraderFindService.UA_BankAccountTableInfo[] BankCapitalFind(out string outMessage, string userId, string bankAccount) {
            return base.Channel.BankCapitalFind(out outMessage, userId, bankAccount);
        }
        
        public ReckoningCapabilityTest.TraderFindService.SpotCapitalEntity SpotCapitalFind(string strFundAccountId, ReckoningCapabilityTest.TraderFindService.TypesCurrencyType currencyType, string userPassword, ref string strErrorMessage) {
            return base.Channel.SpotCapitalFind(strFundAccountId, currencyType, userPassword, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.FuturesCapitalEntity FuturesCapitalFind(string strFundAccountId, ReckoningCapabilityTest.TraderFindService.TypesCurrencyType currencyType, string userPassword, ref string strErrorMessage) {
            return base.Channel.FuturesCapitalFind(strFundAccountId, currencyType, userPassword, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.XH_TodayEntrustTableInfo[] SpotTodayEntrustFindByXhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.SpotEntrustConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage) {
            return base.Channel.SpotTodayEntrustFindByXhCapitalAccount(out count, capitalAccount, strPassword, findCondition, start, pageLength, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.QH_TodayEntrustTableInfo[] FuturesTodayEntrustFindByQhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesEntrustConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage) {
            return base.Channel.FuturesTodayEntrustFindByQhCapitalAccount(out count, capitalAccount, strPassword, findCondition, start, pageLength, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.XH_TodayTradeTableInfo[] SpotTodayTradeFindByCapitalAccount(out int count, out string strErrorMessage, string capitalAccount, string userPassword, int start, int pageLength, ReckoningCapabilityTest.TraderFindService.SpotTradeConditionFindEntity findCondition) {
            return base.Channel.SpotTodayTradeFindByCapitalAccount(out count, out strErrorMessage, capitalAccount, userPassword, start, pageLength, findCondition);
        }
        
        public ReckoningCapabilityTest.TraderFindService.QH_TodayTradeTableInfo[] FuturesTodayTradeFindByXhCapitalAccount(out int count, out string strErrorMessage, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesTradeConditionFindEntity findCondition, int start, int pageLength) {
            return base.Channel.FuturesTodayTradeFindByXhCapitalAccount(out count, out strErrorMessage, capitalAccount, strPassword, findCondition, start, pageLength);
        }
        
        public ReckoningCapabilityTest.TraderFindService.XH_HistoryEntrustTableInfo[] SpotHistoryEntrustFind(out int count, out string strErrorMessage, string capitalAccount, string userPassword, int start, int pageLength, ReckoningCapabilityTest.TraderFindService.SpotEntrustConditionFindEntity findCondition) {
            return base.Channel.SpotHistoryEntrustFind(out count, out strErrorMessage, capitalAccount, userPassword, start, pageLength, findCondition);
        }
        
        public ReckoningCapabilityTest.TraderFindService.QH_HistoryEntrustTableInfo[] FuturesHistoryEntrustFindByQhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesEntrustConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage) {
            return base.Channel.FuturesHistoryEntrustFindByQhCapitalAccount(out count, capitalAccount, strPassword, findCondition, start, pageLength, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.XH_HistoryTradeTableInfo[] SpotHistoryTradeFind(out int count, out string strErrorMessage, string capitalAccount, string userPassword, int start, int pageLength, ReckoningCapabilityTest.TraderFindService.SpotTradeConditionFindEntity findCondition) {
            return base.Channel.SpotHistoryTradeFind(out count, out strErrorMessage, capitalAccount, userPassword, start, pageLength, findCondition);
        }
        
        public ReckoningCapabilityTest.TraderFindService.QH_HistoryTradeTableInfo[] FuturesHistoryTradeFindByXhCapitalAccount(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesTradeConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage) {
            return base.Channel.FuturesHistoryTradeFindByXhCapitalAccount(out count, capitalAccount, strPassword, findCondition, start, pageLength, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.SpotHoldFindResultEntity[] SpotHoldFind(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.SpotHoldConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage) {
            return base.Channel.SpotHoldFind(out count, capitalAccount, strPassword, findCondition, start, pageLength, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.FuturesHoldFindResultEntity[] FuturesHoldFind(out int count, string capitalAccount, string strPassword, ReckoningCapabilityTest.TraderFindService.FuturesHoldConditionFindEntity findCondition, int start, int pageLength, ref string strErrorMessage) {
            return base.Channel.FuturesHoldFind(out count, capitalAccount, strPassword, findCondition, start, pageLength, ref strErrorMessage);
        }
        
        public ReckoningCapabilityTest.TraderFindService.UA_CapitalFlowTableInfo[] BankCapitalAccountTransferFlowFind(out int count, out string strErrorMessage, string userId, string capitalAccount, string userPassword, System.DateTime startTime, System.DateTime endTime, int start, int pageLength) {
            return base.Channel.BankCapitalAccountTransferFlowFind(out count, out strErrorMessage, userId, capitalAccount, userPassword, startTime, endTime, start, pageLength);
        }
        
        public ReckoningCapabilityTest.TraderFindService.UA_CapitalFlowTableInfo[] SpotCapitalAccountTransferFlowFind(out int count, out string strErrorMessage, string userId, string capitalAccount, string userPassword, System.DateTime startTime, System.DateTime endTime, int start, int pageLength) {
            return base.Channel.SpotCapitalAccountTransferFlowFind(out count, out strErrorMessage, userId, capitalAccount, userPassword, startTime, endTime, start, pageLength);
        }
        
        public ReckoningCapabilityTest.TraderFindService.UA_CapitalFlowTableInfo[] FuturesCapitalAccountTransferFlowFind(out int count, out string strErrorMessage, string userId, string capitalAccount, string userPassword, System.DateTime startTime, System.DateTime endTime, int start, int pageLength) {
            return base.Channel.FuturesCapitalAccountTransferFlowFind(out count, out strErrorMessage, userId, capitalAccount, userPassword, startTime, endTime, start, pageLength);
        }
        
        public bool TwoAccountsFreeTransferFunds(out string outMessage, ReckoningCapabilityTest.TraderFindService.FreeTransferEntity freeTransfer, ReckoningCapabilityTest.TraderFindService.TypesCurrencyType currencyType) {
            return base.Channel.TwoAccountsFreeTransferFunds(out outMessage, freeTransfer, currencyType);
        }
        
        public ReckoningCapabilityTest.TraderFindService.AssetSummaryEntity[] AssetSummaryFind(out string outMessage, string traderId, string password) {
            return base.Channel.AssetSummaryFind(out outMessage, traderId, password);
        }
    }
}
