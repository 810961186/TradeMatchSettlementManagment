//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InitFund", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model.CommonClass")]
    [System.SerializableAttribute()]
    public partial class InitFund : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RMBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal USField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HK {
            get {
                return this.HKField;
            }
            set {
                if ((this.HKField.Equals(value) != true)) {
                    this.HKField = value;
                    this.RaisePropertyChanged("HK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RMB {
            get {
                return this.RMBField;
            }
            set {
                if ((this.RMBField.Equals(value) != true)) {
                    this.RMBField = value;
                    this.RaisePropertyChanged("RMB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal US {
            get {
                return this.USField;
            }
            set {
                if ((this.USField.Equals(value) != true)) {
                    this.USField = value;
                    this.RaisePropertyChanged("US");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UM_UserInfo", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class UM_UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CertificateStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CouterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddTime {
            get {
                return this.AddTimeField;
            }
            set {
                if ((this.AddTimeField.Equals(value) != true)) {
                    this.AddTimeField = value;
                    this.RaisePropertyChanged("AddTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddType {
            get {
                return this.AddTypeField;
            }
            set {
                if ((this.AddTypeField.Equals(value) != true)) {
                    this.AddTypeField = value;
                    this.RaisePropertyChanged("AddType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateNo {
            get {
                return this.CertificateNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateNoField, value) != true)) {
                    this.CertificateNoField = value;
                    this.RaisePropertyChanged("CertificateNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CertificateStyle {
            get {
                return this.CertificateStyleField;
            }
            set {
                if ((this.CertificateStyleField.Equals(value) != true)) {
                    this.CertificateStyleField = value;
                    this.RaisePropertyChanged("CertificateStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CouterID {
            get {
                return this.CouterIDField;
            }
            set {
                if ((this.CouterIDField.Equals(value) != true)) {
                    this.CouterIDField = value;
                    this.RaisePropertyChanged("CouterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postalcode {
            get {
                return this.PostalcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalcodeField, value) != true)) {
                    this.PostalcodeField = value;
                    this.RaisePropertyChanged("Postalcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CT_Counter", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class CT_Counter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountServicePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CouterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QueryServicePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SendPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XiaDanServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> XiaDanServicePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountServiceName {
            get {
                return this.AccountServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountServiceNameField, value) != true)) {
                    this.AccountServiceNameField = value;
                    this.RaisePropertyChanged("AccountServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountServicePort {
            get {
                return this.AccountServicePortField;
            }
            set {
                if ((this.AccountServicePortField.Equals(value) != true)) {
                    this.AccountServicePortField = value;
                    this.RaisePropertyChanged("AccountServicePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CouterID {
            get {
                return this.CouterIDField;
            }
            set {
                if ((this.CouterIDField.Equals(value) != true)) {
                    this.CouterIDField = value;
                    this.RaisePropertyChanged("CouterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxValues {
            get {
                return this.MaxValuesField;
            }
            set {
                if ((this.MaxValuesField.Equals(value) != true)) {
                    this.MaxValuesField = value;
                    this.RaisePropertyChanged("MaxValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueryServiceName {
            get {
                return this.QueryServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryServiceNameField, value) != true)) {
                    this.QueryServiceNameField = value;
                    this.RaisePropertyChanged("QueryServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueryServicePort {
            get {
                return this.QueryServicePortField;
            }
            set {
                if ((this.QueryServicePortField.Equals(value) != true)) {
                    this.QueryServicePortField = value;
                    this.RaisePropertyChanged("QueryServicePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SendPort {
            get {
                return this.SendPortField;
            }
            set {
                if ((this.SendPortField.Equals(value) != true)) {
                    this.SendPortField = value;
                    this.RaisePropertyChanged("SendPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendServiceName {
            get {
                return this.SendServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SendServiceNameField, value) != true)) {
                    this.SendServiceNameField = value;
                    this.RaisePropertyChanged("SendServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XiaDanServiceName {
            get {
                return this.XiaDanServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.XiaDanServiceNameField, value) != true)) {
                    this.XiaDanServiceNameField = value;
                    this.RaisePropertyChanged("XiaDanServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> XiaDanServicePort {
            get {
                return this.XiaDanServicePortField;
            }
            set {
                if ((this.XiaDanServicePortField.Equals(value) != true)) {
                    this.XiaDanServicePortField = value;
                    this.RaisePropertyChanged("XiaDanServicePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalizationCapital", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model.UserManage")]
    [System.SerializableAttribute()]
    public partial class PersonalizationCapital : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HKAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RMBAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> TradeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal USAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HKAmount {
            get {
                return this.HKAmountField;
            }
            set {
                if ((this.HKAmountField.Equals(value) != true)) {
                    this.HKAmountField = value;
                    this.RaisePropertyChanged("HKAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonalType {
            get {
                return this.PersonalTypeField;
            }
            set {
                if ((this.PersonalTypeField.Equals(value) != true)) {
                    this.PersonalTypeField = value;
                    this.RaisePropertyChanged("PersonalType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RMBAmount {
            get {
                return this.RMBAmountField;
            }
            set {
                if ((this.RMBAmountField.Equals(value) != true)) {
                    this.RMBAmountField = value;
                    this.RaisePropertyChanged("RMBAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetCurrencyType {
            get {
                return this.SetCurrencyTypeField;
            }
            set {
                if ((this.SetCurrencyTypeField.Equals(value) != true)) {
                    this.SetCurrencyTypeField = value;
                    this.RaisePropertyChanged("SetCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> TradeID {
            get {
                return this.TradeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeIDField, value) != true)) {
                    this.TradeIDField = value;
                    this.RaisePropertyChanged("TradeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal USAmount {
            get {
                return this.USAmountField;
            }
            set {
                if ((this.USAmountField.Equals(value) != true)) {
                    this.USAmountField = value;
                    this.RaisePropertyChanged("USAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class AccountEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountAAttributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrencyHKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrencyRMBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrencyUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPassWordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountAAttribution {
            get {
                return this.AccountAAttributionField;
            }
            set {
                if ((this.AccountAAttributionField.Equals(value) != true)) {
                    this.AccountAAttributionField = value;
                    this.RaisePropertyChanged("AccountAAttribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrencyHK {
            get {
                return this.CurrencyHKField;
            }
            set {
                if ((this.CurrencyHKField.Equals(value) != true)) {
                    this.CurrencyHKField = value;
                    this.RaisePropertyChanged("CurrencyHK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrencyRMB {
            get {
                return this.CurrencyRMBField;
            }
            set {
                if ((this.CurrencyRMBField.Equals(value) != true)) {
                    this.CurrencyRMBField = value;
                    this.RaisePropertyChanged("CurrencyRMB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrencyUS {
            get {
                return this.CurrencyUSField;
            }
            set {
                if ((this.CurrencyUSField.Equals(value) != true)) {
                    this.CurrencyUSField = value;
                    this.RaisePropertyChanged("CurrencyUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleNumber {
            get {
                return this.RoleNumberField;
            }
            set {
                if ((this.RoleNumberField.Equals(value) != true)) {
                    this.RoleNumberField = value;
                    this.RaisePropertyChanged("RoleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassWord {
            get {
                return this.TraderPassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPassWordField, value) != true)) {
                    this.TraderPassWordField = value;
                    this.RaisePropertyChanged("TraderPassWord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradersAccountCapitalInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class TradersAccountCapitalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableCapital {
            get {
                return this.AvailableCapitalField;
            }
            set {
                if ((this.AvailableCapitalField.Equals(value) != true)) {
                    this.AvailableCapitalField = value;
                    this.RaisePropertyChanged("AvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCapital {
            get {
                return this.FreezeCapitalField;
            }
            set {
                if ((this.FreezeCapitalField.Equals(value) != true)) {
                    this.FreezeCapitalField = value;
                    this.RaisePropertyChanged("FreezeCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitCapital {
            get {
                return this.InitCapitalField;
            }
            set {
                if ((this.InitCapitalField.Equals(value) != true)) {
                    this.InitCapitalField = value;
                    this.RaisePropertyChanged("InitCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderID {
            get {
                return this.TraderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIDField, value) != true)) {
                    this.TraderIDField = value;
                    this.RaisePropertyChanged("TraderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UM_FundAddInfo", Namespace="http://schemas.datacontract.org/2004/07/ManagementCenter.Model")]
    [System.SerializableAttribute()]
    public partial class UM_FundAddInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddFundIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AddTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HKNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ManagerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RMBNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> USNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddFundID {
            get {
                return this.AddFundIDField;
            }
            set {
                if ((this.AddFundIDField.Equals(value) != true)) {
                    this.AddFundIDField = value;
                    this.RaisePropertyChanged("AddFundID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AddTime {
            get {
                return this.AddTimeField;
            }
            set {
                if ((this.AddTimeField.Equals(value) != true)) {
                    this.AddTimeField = value;
                    this.RaisePropertyChanged("AddTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HKNumber {
            get {
                return this.HKNumberField;
            }
            set {
                if ((this.HKNumberField.Equals(value) != true)) {
                    this.HKNumberField = value;
                    this.RaisePropertyChanged("HKNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ManagerID {
            get {
                return this.ManagerIDField;
            }
            set {
                if ((this.ManagerIDField.Equals(value) != true)) {
                    this.ManagerIDField = value;
                    this.RaisePropertyChanged("ManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> RMBNumber {
            get {
                return this.RMBNumberField;
            }
            set {
                if ((this.RMBNumberField.Equals(value) != true)) {
                    this.RMBNumberField = value;
                    this.RaisePropertyChanged("RMBNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> USNumber {
            get {
                return this.USNumberField;
            }
            set {
                if ((this.USNumberField.Equals(value) != true)) {
                    this.USNumberField = value;
                    this.RaisePropertyChanged("USNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionManagerService.ITransactionManage")]
    public interface ITransactionManage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/BatchAddTransaction", ReplyAction="http://tempuri.org/ITransactionManage/BatchAddTransactionResponse")]
        System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> BatchAddTransaction(out string message, int Number, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initFund, string MLoginName, string ManagerPWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/BatchAddTransactionList", ReplyAction="http://tempuri.org/ITransactionManage/BatchAddTransactionListResponse")]
        System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> BatchAddTransactionList(out string message, System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> tUserInfo, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initFund, string MLoginName, string ManagerPWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/UpdateTransaction", ReplyAction="http://tempuri.org/ITransactionManage/UpdateTransactionResponse")]
        bool UpdateTransaction(out string message, int UserID, string Password, string MLoginName, string ManagerPWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/UpdateTransactionAll", ReplyAction="http://tempuri.org/ITransactionManage/UpdateTransactionAllResponse")]
        bool UpdateTransactionAll(out string message, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo userInfo, string MLoginName, string ManagerPWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/BatchDelectTransaction", ReplyAction="http://tempuri.org/ITransactionManage/BatchDelectTransactionResponse")]
        bool BatchDelectTransaction(out string message, System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> userInfo, string MLoginName, string ManagerPWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/TransactionConfirm", ReplyAction="http://tempuri.org/ITransactionManage/TransactionConfirmResponse")]
        GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.CT_Counter TransactionConfirm(out string message, int UserID, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/AddFund", ReplyAction="http://tempuri.org/ITransactionManage/AddFundResponse")]
        bool AddFund(out string message, int UserID, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initFund, string MLoginName, string ManagerPWd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/ClearTrialData", ReplyAction="http://tempuri.org/ITransactionManage/ClearTrialDataResponse")]
        bool ClearTrialData(out string message, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.PersonalizationCapital cap, string LoginName, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/PersonalizationCapital", ReplyAction="http://tempuri.org/ITransactionManage/PersonalizationCapitalResponse")]
        bool PersonalizationCapital(out string message, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.PersonalizationCapital cap, string LoginName, string PassWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/AddTransactionFP", ReplyAction="http://tempuri.org/ITransactionManage/AddTransactionFPResponse")]
        GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo AddTransactionFP(out System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.AccountEntity> l_AccountEntity, out string message, string MLoginName, string ManagerPWd, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo UserInfo, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initfund);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/AdminFindTraderCapitalAccountInfoByIDFP", ReplyAction="http://tempuri.org/ITransactionManage/AdminFindTraderCapitalAccountInfoByIDFPResp" +
            "onse")]
        System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.TradersAccountCapitalInfo> AdminFindTraderCapitalAccountInfoByIDFP(out string strErrorMessage, string adminId, string adminPassword, string traderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/ConvertFreeTransferEntityFP", ReplyAction="http://tempuri.org/ITransactionManage/ConvertFreeTransferEntityFPResponse")]
        bool ConvertFreeTransferEntityFP(out string outMessage, int traderID, int FromCapitalAccountType, int ToCapitalAccountType, decimal TransferAmount, int currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/AddFundFP", ReplyAction="http://tempuri.org/ITransactionManage/AddFundFPResponse")]
        bool AddFundFP(out string mess, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_FundAddInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionManage/CheckChannel", ReplyAction="http://tempuri.org/ITransactionManage/CheckChannelResponse")]
        string CheckChannel();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionManageChannel : GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.ITransactionManage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionManageClient : System.ServiceModel.ClientBase<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.ITransactionManage>, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.ITransactionManage {
        
        public TransactionManageClient() {
        }
        
        public TransactionManageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionManageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionManageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionManageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> BatchAddTransaction(out string message, int Number, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initFund, string MLoginName, string ManagerPWd) {
            return base.Channel.BatchAddTransaction(out message, Number, initFund, MLoginName, ManagerPWd);
        }
        
        public System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> BatchAddTransactionList(out string message, System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> tUserInfo, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initFund, string MLoginName, string ManagerPWd) {
            return base.Channel.BatchAddTransactionList(out message, tUserInfo, initFund, MLoginName, ManagerPWd);
        }
        
        public bool UpdateTransaction(out string message, int UserID, string Password, string MLoginName, string ManagerPWd) {
            return base.Channel.UpdateTransaction(out message, UserID, Password, MLoginName, ManagerPWd);
        }
        
        public bool UpdateTransactionAll(out string message, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo userInfo, string MLoginName, string ManagerPWd) {
            return base.Channel.UpdateTransactionAll(out message, userInfo, MLoginName, ManagerPWd);
        }
        
        public bool BatchDelectTransaction(out string message, System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo> userInfo, string MLoginName, string ManagerPWd) {
            return base.Channel.BatchDelectTransaction(out message, userInfo, MLoginName, ManagerPWd);
        }
        
        public GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.CT_Counter TransactionConfirm(out string message, int UserID, string PassWord) {
            return base.Channel.TransactionConfirm(out message, UserID, PassWord);
        }
        
        public bool AddFund(out string message, int UserID, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initFund, string MLoginName, string ManagerPWd) {
            return base.Channel.AddFund(out message, UserID, initFund, MLoginName, ManagerPWd);
        }
        
        public bool ClearTrialData(out string message, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.PersonalizationCapital cap, string LoginName, string PassWord) {
            return base.Channel.ClearTrialData(out message, cap, LoginName, PassWord);
        }
        
        public bool PersonalizationCapital(out string message, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.PersonalizationCapital cap, string LoginName, string PassWord) {
            return base.Channel.PersonalizationCapital(out message, cap, LoginName, PassWord);
        }
        
        public GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo AddTransactionFP(out System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.AccountEntity> l_AccountEntity, out string message, string MLoginName, string ManagerPWd, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_UserInfo UserInfo, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.InitFund initfund) {
            return base.Channel.AddTransactionFP(out l_AccountEntity, out message, MLoginName, ManagerPWd, UserInfo, initfund);
        }
        
        public System.Collections.Generic.List<GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.TradersAccountCapitalInfo> AdminFindTraderCapitalAccountInfoByIDFP(out string strErrorMessage, string adminId, string adminPassword, string traderID) {
            return base.Channel.AdminFindTraderCapitalAccountInfoByIDFP(out strErrorMessage, adminId, adminPassword, traderID);
        }
        
        public bool ConvertFreeTransferEntityFP(out string outMessage, int traderID, int FromCapitalAccountType, int ToCapitalAccountType, decimal TransferAmount, int currencyType) {
            return base.Channel.ConvertFreeTransferEntityFP(out outMessage, traderID, FromCapitalAccountType, ToCapitalAccountType, TransferAmount, currencyType);
        }
        
        public bool AddFundFP(out string mess, GTA.VTS.BatOpenTradeUserInfo.TransactionManagerService.UM_FundAddInfo model) {
            return base.Channel.AddFundFP(out mess, model);
        }
        
        public string CheckChannel() {
            return base.Channel.CheckChannel();
        }
    }
}
