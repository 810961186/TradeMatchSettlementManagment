//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReckoningCounterTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Types.CurrencyType", Namespace="http://schemas.datacontract.org/2004/07/CommonObject")]
    public enum TypesCurrencyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HK = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        US = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpotCapitalEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity")]
    [System.SerializableAttribute()]
    public partial class SpotCapitalEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AssetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounterTest.ServiceReference1.XhCapitalAccountTable GTCapitalObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AssetAmount {
            get {
                return this.AssetAmountField;
            }
            set {
                if ((this.AssetAmountField.Equals(value) != true)) {
                    this.AssetAmountField = value;
                    this.RaisePropertyChanged("AssetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounterTest.ServiceReference1.XhCapitalAccountTable GTCapitalObj {
            get {
                return this.GTCapitalObjField;
            }
            set {
                if ((object.ReferenceEquals(this.GTCapitalObjField, value) != true)) {
                    this.GTCapitalObjField = value;
                    this.RaisePropertyChanged("GTCapitalObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhCapitalAccountTable", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class XhCapitalAccountTable : ReckoningCounterTest.ServiceReference1.XhCapitalAccountTableBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBaseCore", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.EntityBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhTodayEntrustTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhTodayTradeTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhTodayTradeTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountTable))]
    public partial class EntityBaseCore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string entityHashCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string entityHashCode {
            get {
                return this.entityHashCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.entityHashCodeField, value) != true)) {
                    this.entityHashCodeField = value;
                    this.RaisePropertyChanged("entityHashCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhTodayEntrustTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhTodayTradeTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhTodayTradeTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountTableBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountTable))]
    public partial class EntityBase : ReckoningCounterTest.ServiceReference1.EntityBaseCore {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhTodayEntrustTableBase", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class XhTodayEntrustTableBase : ReckoningCounterTest.ServiceReference1.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallbackChannlIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CancelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CancelLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EntrustAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntrustTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FreezeCapitalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsMarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MarketTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string McOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OfferTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderStatusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalEntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnershipMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TradeAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VarietyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTable[] XhAcccountHoldFreezeTableCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTable[] XhCapitalAccountFreezeTableCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounterTest.ServiceReference1.XhTodayTradeTable[] XhTodayTradeTableCollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallbackChannlId {
            get {
                return this.CallbackChannlIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CallbackChannlIdField, value) != true)) {
                    this.CallbackChannlIdField = value;
                    this.RaisePropertyChanged("CallbackChannlId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CancelAmount {
            get {
                return this.CancelAmountField;
            }
            set {
                if ((this.CancelAmountField.Equals(value) != true)) {
                    this.CancelAmountField = value;
                    this.RaisePropertyChanged("CancelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CancelLogo {
            get {
                return this.CancelLogoField;
            }
            set {
                if ((this.CancelLogoField.Equals(value) != true)) {
                    this.CancelLogoField = value;
                    this.RaisePropertyChanged("CancelLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EntrustAmount {
            get {
                return this.EntrustAmountField;
            }
            set {
                if ((this.EntrustAmountField.Equals(value) != true)) {
                    this.EntrustAmountField = value;
                    this.RaisePropertyChanged("EntrustAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntrustTime {
            get {
                return this.EntrustTimeField;
            }
            set {
                if ((this.EntrustTimeField.Equals(value) != true)) {
                    this.EntrustTimeField = value;
                    this.RaisePropertyChanged("EntrustTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FreezeCapitalAmount {
            get {
                return this.FreezeCapitalAmountField;
            }
            set {
                if ((this.FreezeCapitalAmountField.Equals(value) != true)) {
                    this.FreezeCapitalAmountField = value;
                    this.RaisePropertyChanged("FreezeCapitalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsMarketValue {
            get {
                return this.IsMarketValueField;
            }
            set {
                if ((this.IsMarketValueField.Equals(value) != true)) {
                    this.IsMarketValueField = value;
                    this.RaisePropertyChanged("IsMarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MarketTypeId {
            get {
                return this.MarketTypeIdField;
            }
            set {
                if ((this.MarketTypeIdField.Equals(value) != true)) {
                    this.MarketTypeIdField = value;
                    this.RaisePropertyChanged("MarketTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string McOrderId {
            get {
                return this.McOrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.McOrderIdField, value) != true)) {
                    this.McOrderIdField = value;
                    this.RaisePropertyChanged("McOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OfferTime {
            get {
                return this.OfferTimeField;
            }
            set {
                if ((this.OfferTimeField.Equals(value) != true)) {
                    this.OfferTimeField = value;
                    this.RaisePropertyChanged("OfferTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderStatusId {
            get {
                return this.OrderStatusIdField;
            }
            set {
                if ((this.OrderStatusIdField.Equals(value) != true)) {
                    this.OrderStatusIdField = value;
                    this.RaisePropertyChanged("OrderStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderStatusMessage {
            get {
                return this.OrderStatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderStatusMessageField, value) != true)) {
                    this.OrderStatusMessageField = value;
                    this.RaisePropertyChanged("OrderStatusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalEntrustNumber {
            get {
                return this.OriginalEntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalEntrustNumberField, value) != true)) {
                    this.OriginalEntrustNumberField = value;
                    this.RaisePropertyChanged("OriginalEntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnershipMarket {
            get {
                return this.OwnershipMarketField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnershipMarketField, value) != true)) {
                    this.OwnershipMarketField = value;
                    this.RaisePropertyChanged("OwnershipMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotName {
            get {
                return this.SpotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotNameField, value) != true)) {
                    this.SpotNameField = value;
                    this.RaisePropertyChanged("SpotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockAccount {
            get {
                return this.StockAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.StockAccountField, value) != true)) {
                    this.StockAccountField = value;
                    this.RaisePropertyChanged("StockAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TradeAveragePrice {
            get {
                return this.TradeAveragePriceField;
            }
            set {
                if ((this.TradeAveragePriceField.Equals(value) != true)) {
                    this.TradeAveragePriceField = value;
                    this.RaisePropertyChanged("TradeAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VarietyTypeId {
            get {
                return this.VarietyTypeIdField;
            }
            set {
                if ((this.VarietyTypeIdField.Equals(value) != true)) {
                    this.VarietyTypeIdField = value;
                    this.RaisePropertyChanged("VarietyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTable[] XhAcccountHoldFreezeTableCollection {
            get {
                return this.XhAcccountHoldFreezeTableCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.XhAcccountHoldFreezeTableCollectionField, value) != true)) {
                    this.XhAcccountHoldFreezeTableCollectionField = value;
                    this.RaisePropertyChanged("XhAcccountHoldFreezeTableCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTable[] XhCapitalAccountFreezeTableCollection {
            get {
                return this.XhCapitalAccountFreezeTableCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.XhCapitalAccountFreezeTableCollectionField, value) != true)) {
                    this.XhCapitalAccountFreezeTableCollectionField = value;
                    this.RaisePropertyChanged("XhCapitalAccountFreezeTableCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounterTest.ServiceReference1.XhTodayTradeTable[] XhTodayTradeTableCollection {
            get {
                return this.XhTodayTradeTableCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.XhTodayTradeTableCollectionField, value) != true)) {
                    this.XhTodayTradeTableCollectionField = value;
                    this.RaisePropertyChanged("XhTodayTradeTableCollection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhAcccountHoldFreezeTableBase", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTable))]
    public partial class XhAcccountHoldFreezeTableBase : ReckoningCounterTest.ServiceReference1.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountHoldLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FreezeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreezeTypeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldFreezeLogoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrepareFreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ThawTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountHoldLogo {
            get {
                return this.AccountHoldLogoField;
            }
            set {
                if ((this.AccountHoldLogoField.Equals(value) != true)) {
                    this.AccountHoldLogoField = value;
                    this.RaisePropertyChanged("AccountHoldLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FreezeTime {
            get {
                return this.FreezeTimeField;
            }
            set {
                if ((this.FreezeTimeField.Equals(value) != true)) {
                    this.FreezeTimeField = value;
                    this.RaisePropertyChanged("FreezeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FreezeTypeLogo {
            get {
                return this.FreezeTypeLogoField;
            }
            set {
                if ((this.FreezeTypeLogoField.Equals(value) != true)) {
                    this.FreezeTypeLogoField = value;
                    this.RaisePropertyChanged("FreezeTypeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldFreezeLogoId {
            get {
                return this.HoldFreezeLogoIdField;
            }
            set {
                if ((this.HoldFreezeLogoIdField.Equals(value) != true)) {
                    this.HoldFreezeLogoIdField = value;
                    this.RaisePropertyChanged("HoldFreezeLogoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrepareFreezeAmount {
            get {
                return this.PrepareFreezeAmountField;
            }
            set {
                if ((this.PrepareFreezeAmountField.Equals(value) != true)) {
                    this.PrepareFreezeAmountField = value;
                    this.RaisePropertyChanged("PrepareFreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ThawTime {
            get {
                return this.ThawTimeField;
            }
            set {
                if ((this.ThawTimeField.Equals(value) != true)) {
                    this.ThawTimeField = value;
                    this.RaisePropertyChanged("ThawTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhAcccountHoldFreezeTable", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class XhAcccountHoldFreezeTable : ReckoningCounterTest.ServiceReference1.XhAcccountHoldFreezeTableBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhCapitalAccountFreezeTableBase", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTable))]
    public partial class XhCapitalAccountFreezeTableBase : ReckoningCounterTest.ServiceReference1.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CapitalAccountLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalFreezeLogoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FreezeCapitalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FreezeCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FreezeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FreezeTypeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> OweCostingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ThawTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CapitalAccountLogo {
            get {
                return this.CapitalAccountLogoField;
            }
            set {
                if ((this.CapitalAccountLogoField.Equals(value) != true)) {
                    this.CapitalAccountLogoField = value;
                    this.RaisePropertyChanged("CapitalAccountLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalFreezeLogoId {
            get {
                return this.CapitalFreezeLogoIdField;
            }
            set {
                if ((this.CapitalFreezeLogoIdField.Equals(value) != true)) {
                    this.CapitalFreezeLogoIdField = value;
                    this.RaisePropertyChanged("CapitalFreezeLogoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FreezeCapitalAmount {
            get {
                return this.FreezeCapitalAmountField;
            }
            set {
                if ((this.FreezeCapitalAmountField.Equals(value) != true)) {
                    this.FreezeCapitalAmountField = value;
                    this.RaisePropertyChanged("FreezeCapitalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FreezeCost {
            get {
                return this.FreezeCostField;
            }
            set {
                if ((this.FreezeCostField.Equals(value) != true)) {
                    this.FreezeCostField = value;
                    this.RaisePropertyChanged("FreezeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FreezeTime {
            get {
                return this.FreezeTimeField;
            }
            set {
                if ((this.FreezeTimeField.Equals(value) != true)) {
                    this.FreezeTimeField = value;
                    this.RaisePropertyChanged("FreezeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FreezeTypeLogo {
            get {
                return this.FreezeTypeLogoField;
            }
            set {
                if ((this.FreezeTypeLogoField.Equals(value) != true)) {
                    this.FreezeTypeLogoField = value;
                    this.RaisePropertyChanged("FreezeTypeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OweCosting {
            get {
                return this.OweCostingField;
            }
            set {
                if ((this.OweCostingField.Equals(value) != true)) {
                    this.OweCostingField = value;
                    this.RaisePropertyChanged("OweCosting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ThawTime {
            get {
                return this.ThawTimeField;
            }
            set {
                if ((this.ThawTimeField.Equals(value) != true)) {
                    this.ThawTimeField = value;
                    this.RaisePropertyChanged("ThawTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhCapitalAccountFreezeTable", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class XhCapitalAccountFreezeTable : ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTableBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhTodayTradeTableBase", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhTodayTradeTable))]
    public partial class XhTodayTradeTableBase : ReckoningCounterTest.ServiceReference1.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MarketTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MonitoringFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalTradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnershipMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StampTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TradeCapitalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TradeProceduresFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TradingSystemUseFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TransferAccountFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VarietytypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MarketTypeId {
            get {
                return this.MarketTypeIdField;
            }
            set {
                if ((this.MarketTypeIdField.Equals(value) != true)) {
                    this.MarketTypeIdField = value;
                    this.RaisePropertyChanged("MarketTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MonitoringFee {
            get {
                return this.MonitoringFeeField;
            }
            set {
                if ((this.MonitoringFeeField.Equals(value) != true)) {
                    this.MonitoringFeeField = value;
                    this.RaisePropertyChanged("MonitoringFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalTradeNumber {
            get {
                return this.OriginalTradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalTradeNumberField, value) != true)) {
                    this.OriginalTradeNumberField = value;
                    this.RaisePropertyChanged("OriginalTradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnershipMarket {
            get {
                return this.OwnershipMarketField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnershipMarketField, value) != true)) {
                    this.OwnershipMarketField = value;
                    this.RaisePropertyChanged("OwnershipMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotCode {
            get {
                return this.SpotCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotCodeField, value) != true)) {
                    this.SpotCodeField = value;
                    this.RaisePropertyChanged("SpotCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpotName {
            get {
                return this.SpotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpotNameField, value) != true)) {
                    this.SpotNameField = value;
                    this.RaisePropertyChanged("SpotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StampTax {
            get {
                return this.StampTaxField;
            }
            set {
                if ((this.StampTaxField.Equals(value) != true)) {
                    this.StampTaxField = value;
                    this.RaisePropertyChanged("StampTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockAccount {
            get {
                return this.StockAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.StockAccountField, value) != true)) {
                    this.StockAccountField = value;
                    this.RaisePropertyChanged("StockAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TradeCapitalAmount {
            get {
                return this.TradeCapitalAmountField;
            }
            set {
                if ((this.TradeCapitalAmountField.Equals(value) != true)) {
                    this.TradeCapitalAmountField = value;
                    this.RaisePropertyChanged("TradeCapitalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TradeProceduresFee {
            get {
                return this.TradeProceduresFeeField;
            }
            set {
                if ((this.TradeProceduresFeeField.Equals(value) != true)) {
                    this.TradeProceduresFeeField = value;
                    this.RaisePropertyChanged("TradeProceduresFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TradeTime {
            get {
                return this.TradeTimeField;
            }
            set {
                if ((this.TradeTimeField.Equals(value) != true)) {
                    this.TradeTimeField = value;
                    this.RaisePropertyChanged("TradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeTypeId {
            get {
                return this.TradeTypeIdField;
            }
            set {
                if ((this.TradeTypeIdField.Equals(value) != true)) {
                    this.TradeTypeIdField = value;
                    this.RaisePropertyChanged("TradeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TradingSystemUseFee {
            get {
                return this.TradingSystemUseFeeField;
            }
            set {
                if ((this.TradingSystemUseFeeField.Equals(value) != true)) {
                    this.TradingSystemUseFeeField = value;
                    this.RaisePropertyChanged("TradingSystemUseFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TransferAccountFee {
            get {
                return this.TransferAccountFeeField;
            }
            set {
                if ((this.TransferAccountFeeField.Equals(value) != true)) {
                    this.TransferAccountFeeField = value;
                    this.RaisePropertyChanged("TransferAccountFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VarietytypeId {
            get {
                return this.VarietytypeIdField;
            }
            set {
                if ((this.VarietytypeIdField.Equals(value) != true)) {
                    this.VarietytypeIdField = value;
                    this.RaisePropertyChanged("VarietytypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhTodayTradeTable", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    public partial class XhTodayTradeTable : ReckoningCounterTest.ServiceReference1.XhTodayTradeTableBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XhCapitalAccountTableBase", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ReckoningCounterTest.ServiceReference1.XhCapitalAccountTable))]
    public partial class XhCapitalAccountTableBase : ReckoningCounterTest.ServiceReference1.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalAccountLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CapitalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FreezeCapitalTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TodayOutInCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TradeCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTable[] XhCapitalAccountFreezeTableCollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AvailableCapital {
            get {
                return this.AvailableCapitalField;
            }
            set {
                if ((this.AvailableCapitalField.Equals(value) != true)) {
                    this.AvailableCapitalField = value;
                    this.RaisePropertyChanged("AvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BalanceOfTheDay {
            get {
                return this.BalanceOfTheDayField;
            }
            set {
                if ((this.BalanceOfTheDayField.Equals(value) != true)) {
                    this.BalanceOfTheDayField = value;
                    this.RaisePropertyChanged("BalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalAccountLogo {
            get {
                return this.CapitalAccountLogoField;
            }
            set {
                if ((this.CapitalAccountLogoField.Equals(value) != true)) {
                    this.CapitalAccountLogoField = value;
                    this.RaisePropertyChanged("CapitalAccountLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CapitalBalance {
            get {
                return this.CapitalBalanceField;
            }
            set {
                if ((this.CapitalBalanceField.Equals(value) != true)) {
                    this.CapitalBalanceField = value;
                    this.RaisePropertyChanged("CapitalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> FreezeCapitalTotal {
            get {
                return this.FreezeCapitalTotalField;
            }
            set {
                if ((this.FreezeCapitalTotalField.Equals(value) != true)) {
                    this.FreezeCapitalTotalField = value;
                    this.RaisePropertyChanged("FreezeCapitalTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TodayOutInCapital {
            get {
                return this.TodayOutInCapitalField;
            }
            set {
                if ((this.TodayOutInCapitalField.Equals(value) != true)) {
                    this.TodayOutInCapitalField = value;
                    this.RaisePropertyChanged("TodayOutInCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TradeCurrencyType {
            get {
                return this.TradeCurrencyTypeField;
            }
            set {
                if ((this.TradeCurrencyTypeField.Equals(value) != true)) {
                    this.TradeCurrencyTypeField = value;
                    this.RaisePropertyChanged("TradeCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounterTest.ServiceReference1.XhCapitalAccountFreezeTable[] XhCapitalAccountFreezeTableCollection {
            get {
                return this.XhCapitalAccountFreezeTableCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.XhCapitalAccountFreezeTableCollectionField, value) != true)) {
                    this.XhCapitalAccountFreezeTableCollectionField = value;
                    this.RaisePropertyChanged("XhCapitalAccountFreezeTableCollection");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITraderFind")]
    public interface ITraderFind {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraderFind/SpotCapitalFind", ReplyAction="http://tempuri.org/ITraderFind/SpotCapitalFindResponse")]
        ReckoningCounterTest.ServiceReference1.SpotCapitalEntity SpotCapitalFind(string strFundAccountId, ReckoningCounterTest.ServiceReference1.TypesCurrencyType currencyType, string userPassword, ref string strErrorMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITraderFindChannel : ReckoningCounterTest.ServiceReference1.ITraderFind, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TraderFindClient : System.ServiceModel.ClientBase<ReckoningCounterTest.ServiceReference1.ITraderFind>, ReckoningCounterTest.ServiceReference1.ITraderFind {
        
        public TraderFindClient() {
        }
        
        public TraderFindClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TraderFindClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraderFindClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraderFindClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReckoningCounterTest.ServiceReference1.SpotCapitalEntity SpotCapitalFind(string strFundAccountId, ReckoningCounterTest.ServiceReference1.TypesCurrencyType currencyType, string userPassword, ref string strErrorMessage) {
            return base.Channel.SpotCapitalFind(strFundAccountId, currencyType, userPassword, ref strErrorMessage);
        }
    }
}
