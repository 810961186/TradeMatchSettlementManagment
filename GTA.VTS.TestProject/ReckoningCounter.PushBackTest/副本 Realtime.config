<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <appSettings>
    <!-- 行情分解数据连接字符串 -->
    <add key="ConnectionString" value="Provider=VFPOLEDB.1;Data Source=E:\DBF;Mode=Read;Collating Sequence=MACHINE" />
    <!-- 股本数据连接字符串 -->
    <add key="SqlConnectionString" value="Persist Security Info=True;Data Source=192.168.8.36;User ID=realtime;Password=realtime;Initial Catalog=GTA_Capchg" />
    <!--Data Source=192.168.8.36;Initial Catalog=GTA_Capchg;Persist Security Info=True;User ID=realtime;Password=
    <add key="SqlConnectionString" value="Persist Security Info=True;Data Source=(local);User ID=sa;Password=zjh;Initial Catalog=gta_capchg" />
-->
    <!--应用的类型-->
    <!-- STServer,///仅服务器
    STClient,/// 仅客户端
    STClientServer,/// 既是服务器又是客户端
    -->
    <add key="ServerType" value="STClientServer" />
    <!--应用作为客户端时 指定需要连接的服务器的ip和服务端口-->
    <add key="ServerSocketPort" value="8055" />
    <!--<add key="ServerIp" value="210.75.15.11"/>-->
    <add key="ServerIp" value="192.168.100.34" />
    <!--应用作为服务器/客户端&服务器 时 让客户端连接的服务端口-->
    <add key="LocalSocketPort" value="8057" />
    <!--STClientServer类型的应用第一次连接到STServer应用时，开始发送订阅完整行情信息的延迟时间（毫秒）-->
    <add key="ClientServerSubscibeAllDelayTime" value="3000" />
    <!-- 心跳失败次数后停止心跳-->
    <add key="HeartBeatStopCout" value="0" />
    <!-- 心跳间隔(单位：毫秒)-->
    <add key="HeartBeatTimespan" value="10000" />
    <!-- 行情数据内容传输形式 1=行情集合 0=单个行情对象-->
    <add key="IsSendArry" value="1" />
    <!-- 使用Socket还是WCF,value=WCF 或Socket -->
    <add key="SocketOrWCF" value="Socket" />
    <!-- udp行情数据处理形式 true=批量处理 false=单个处理-->
    <add key="IsBatchProcess" value="true" />
    <!-- 向客户端发送数据，采用批量发送处理形式 true=批量处理 false=单个处理-->
    <add key="IsBatchToSendData" value="true" />
    <!-- udp行情数据一批处理最大数目-->
    <add key="ProcessMessageBatchMaxCount" value="20" />
    <!--更新数据缓存 最大处理数（默认:300个）-->
    <add key="UpdateDataSnapBatchCount" value="300" />
    <!-- 服务端触发全量数据包用于定时同步数据的间隔时间（毫秒，默认三分钟）-->
    <add key="FullDataMessageInterval" value="180000" />
    <!--对于服务器来说：服务器是否向客户端发送心跳（如果开启，服务器将向每个客户端发送心跳）true=开启 false=关闭-->
    <add key="enableCheckHeartBeat" value="true" />
    <!-- 客户端检测服务器发送的心跳事件间隔（毫秒，默认10000毫秒）-->
    <add key="checkInterval" value="10000" />
    <!--行情服务器用户数据库地址 -->
    <add key="SName" value="192.168.8.36" />
    <!--数据库名称 -->
    <add key="DBname" value="RealTime" />
    <!--登陆ID -->
    <add key="UserID" value="RealTime" />
    <!--实例密码 -->
    <add key="Passwords" value="RealTime" />
    <!-- 交易所开市时间 -->
    <add key="MarketOpenTime" value="00:01:00" />
    <!-- 交易所闭市时间 -->
    <add key="MarketCloseTime" value="23:00:00" />
    <!--　期货代码列表 -->
    <add key="QhCode" value="IF0707,IF0708,IF0709,IF0712" />
    <!-- 拷贝到的路径 -->
    <add key="CodeFileName" value="Config\Code.xml" />
    <!-- 拷贝到的路径 -->
    <add key="NewCodeFileName" value="NewCode" />
    <add key="SendQhData" value="1" />
    <!-- 日志保存路径 -->
    <add key="LogSavePath" value="e:\Log\" />
    <!-- Socket重新连接次数,value=-1为永远重连，适应于服务器类型 -->
    <add key="SocketReConnectTimes" value="-1" />
    <!-- Socket重新连接间隔时间 -->
    <add key="SocketReConnectInterval" value="5000" />
    <!-- 帐户验证类型：0=不需要验证；1=分服务器；2=主账号服务器 -->
    <add key="AccountServerType" value="0" />
    <!-- 主账号服务器地址 -->
    <add key="AccountServerUrl" value="tcp://localhost:8060" />
    <!-- 是否启动Remoting服务：true/false -->
    <add key="IsLoadRemoting" value="true" />
    <!-- 是否接收高频数据 -->
    <add key="IsRecorderServer" value="false" />
    <!--上海高频数据存放目录-->
    <add key="ShRecorderFilePath" value="e:\dbf\sh" />
    <!--深圳高频数据存放目录-->
    <add key="SzRecorderFilePath" value="e:\dbf\sz" />
    <!--代码最后更新日期-->
    <add key="codeListLastUpdateTime" value="2007-10-02" />
    <add key="ResetTimerInterval" value="2000" />
    <add key="ResetTimeRangeStart" value="10:00" />
    <add key="ResetTimeRangeEnd" value="12:00" />
    <!--The backLog limits the listen queue of the OS socket to the defined number-->
    <add key="SocketBackLog" value="100" />
    <!--acceptThreads sets the calling number of the socket's BeginAccept to increase the accept performance-->
    <add key="SocketAcceptThreadCount" value="100" />
    <!-- 消息缓冲区大小 -->
    <add key="MessageBufferSize" value="3145728" />
    <!-- Socket缓冲区大小 -->
    <add key="SocketBufferSize" value="3145728" />
    <!--Udp Socket接收缓存大小-->
    <add key="UdpReciveBufferSize" value="20971520" />
    <!--上午开市时间-->
    <add key="MarketingAmStartTime" value="9:30" />
    <!--上午休市时间-->
    <add key="MarketingAmEndTime" value="11:30" />
    <!--下午开市时间-->
    <add key="MarketingPmStartTime" value="13:00" />
    <!--下午休市时间-->
    <add key="MarketingPmEndTime" value="15:00" />
    <!--检查并判断作为断开连接的最后更新时间与现在时间的间隔（毫秒）-->
    <add key="CheckRefreshTimeInterval" value="20000" />
    <!-- Socket End -->
    <!--UDP Settings Start -->
    <add key="ShUdpAcceptPort" value="39001"/>
    <add key="ShQhUdpAcceptPort" value="39003"/>
    <add key="SzUdpAcceptPort" value="39002"/>
    <add key="DLMerQhUdpAcceptPort" value="10130"/>
    <add key="ZZMerQhUdpAcceptPort" value="10120"/>
    <add key="ShMerQhUdpAcceptPort" value="39004"/>
    <!--UDP Settings end -->

    <!--检测上海交易所新代码时间-->
    <add key="SHStockNewCodeCheckStart" value="9:30"/>
    <add key="SHStockNewCodeCheckEnd" value="9:45"/>
    <!--检测深圳交易所新代码时间-->
    <add key="SZStockNewCodeCheckStart" value="9:30"/>
    <add key="SZStockNewCodeCheckEnd" value="9:45"/>
    <!--检测中金所新代码时间-->
    <add key="QHNewCodeCheckStart" value="9:15"/>
    <add key="QHNewCodeCheckEnd" value="9:30"/>
    <!--检测大连商品期货交易所新代码时间-->
    <add key="DLMerQHNewCodeCheckStart" value="9:00"/>
    <add key="DLMerQHNewCodeCheckEnd" value="9:15"/>
    <!--检测郑州商品期货交易所新代码时间-->
    <add key="ZZMerQHNewCodeCheckStart" value="9:00"/>
    <add key="ZZMerQHNewCodeCheckEnd" value="9:15"/>
    <!--检测上海商品期货交易所新代码时间-->
    <add key="SHMerQHNewCodeCheckStart" value="9:00"/>
    <add key="SHMerQHNewCodeCheckEnd" value="9:15"/>
    <!--批量发送商品期货的频率-->
    <add key ="MerQhPerSendInterval" value="1000"/>
    
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <system.runtime.remoting>
    <application>
      <!--　====================== 用户验证 ====================== -->
      <service>
        <wellknown type="RealTime.Server.SBusiness.Users.SCheckUserHandle, SBusiness" objectUri="Users/SCheckUserHandle" mode="SingleCall" />
      </service>
      <!--　================= WebSrevice数据服务 ================= -->
      <service>
        <wellknown type="RealTime.Server.ServerUI.WebServiceData.DataService, ServerUI" objectUri="WebServiceData/DataService" mode="SingleCall" />
      </service>
      <!--　====================== 信道设置 ====================== -->
      <channels>
        <channel ref="tcp" port="8061" />
      </channels>
    </application>
  </system.runtime.remoting>
  <system.net>
    <settings>
      <socket alwaysUseCompletionPortsForAccept="true" alwaysUseCompletionPortsForConnect="true" />
    </settings>
  </system.net>
  <system.serviceModel>
    <services>
      <service name="WCF.CommunicationService" behaviorConfiguration="MEX">
        <host>
          <baseAddresses>
            <!--服务端口(请求和推送端口)及服务名设置-->
            <add baseAddress="net.tcp://localhost:8050/CommunicationService" />
          </baseAddresses>
        </host>
        <endpoint address="" binding="netTcpBinding" bindingConfiguration="NewBinding0" contract="WCF.ICommunication" />
      </service>
      <service name="WCF.CommunicationConnSrv" behaviorConfiguration="MEX">
        <host>
          <baseAddresses>
            <!--服务端口(请求和推送端口)及服务名设置-->
            <add baseAddress="net.tcp://localhost:8050/CommunicationConnSrv" />
          </baseAddresses>
        </host>
        <endpoint address="" binding="netTcpBinding" bindingConfiguration="NewBinding0" contract="WCF.ICommunicationConn" />
      </service>
    </services>
    <client>
      <endpoint address="" binding="netTcpBinding" bindingConfiguration="NetTcpBinding_ICommunication" contract="WCF.ICommunication" name="NetTcpBinding_IWcfICommunication" />
      <endpoint address="" binding="netTcpBinding" bindingConfiguration="NetTcpBinding_ICommunicationConn" contract="WCF.ICommunicationConn" name="NetTcpBinding_IWcfICommunicationConn" />
    </client>
    <bindings>
      <netTcpBinding>
        <binding name="NewBinding0" maxConnections="200" receiveTimeout="00:10:20" maxReceivedMessageSize="6553600">
          <readerQuotas maxStringContentLength="6553600" />
          <security mode="None" />
        </binding>
        <binding name="NetTcpBinding_ICommunication" closeTimeout="00:00:10" openTimeout="00:00:10" receiveTimeout="23:00:00" sendTimeout="23:00:00" transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="52428800" maxBufferSize="6553600" maxConnections="100" maxReceivedMessageSize="6553600">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="1638400" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:00:10" enabled="false" />
          <security mode="None" />
        </binding>
        <binding name="NetTcpBinding_ICommunicationConn" closeTimeout="00:00:10" openTimeout="00:00:10" receiveTimeout="23:00:00" sendTimeout="23:00:00" transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions" hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="52428800" maxBufferSize="6553600" maxConnections="100" maxReceivedMessageSize="6553600">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="1638400" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:00:10" enabled="false" />
          <security mode="None" />
        </binding>
      </netTcpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="MEX">
          <serviceMetadata />
          <serviceThrottling maxConcurrentCalls="100" maxConcurrentSessions="100" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <startup>
    <supportedRuntime version="v2.0.50727" />
  </startup>

  <log4net>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level - %message%newline" />
      </layout>
    </appender>
    <appender name="ServerAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Log\realtime.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1000KB" />
      <maxSizeRollBackups value="20" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level - %message%newline" />
      </layout>
    </appender>
    <appender name="FASTFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Log\fast.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1000KB" />
      <maxSizeRollBackups value="20" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date - %message%newline" />
      </layout>
    </appender>
    <appender name="FASTCodecFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Log\Codec.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1000KB" />
      <maxSizeRollBackups value="20" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date - %message%newline" />
      </layout>
    </appender>
    <appender name="UDPFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Log\udp.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1000KB" />
      <maxSizeRollBackups value="20" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date - %message%newline" />
      </layout>
    </appender>
    <appender name="CommonFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Log\Log.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1000KB" />
      <maxSizeRollBackups value="20" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date - %message%newline" />
      </layout>
    </appender>
    <!-- level:ERROR INFO DEBUG OFF -->
    <root>
      <level value="DEBUG" />
      <appender-ref ref="ServerAppender" />
      <appender-ref ref="ConsoleAppender" />
    </root>
    <logger name="FASTCodecLogger" additivity="false">
      <level value="ERROR" />
      <appender-ref ref="FASTCodecFileAppender" />
    </logger>
    <logger name="FASTLogger" additivity="false">
      <level value="DEBUG" />
      <appender-ref ref="FASTFileAppender" />
    </logger>
    <logger name="UDPServerLogger" additivity="false">
      <level value="DEBUG" />
      <appender-ref ref="UDPFileAppender" />
    </logger>
    <logger name="CommonLogger" additivity="false">
      <level value="Info" />
      <appender-ref ref="CommonFileAppender" />
    </logger>
  </log4net>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>