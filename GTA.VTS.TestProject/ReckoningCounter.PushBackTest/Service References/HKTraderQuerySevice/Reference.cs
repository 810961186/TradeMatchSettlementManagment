//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReckoningCounter.PushBackTest.HKTraderQuerySevice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKCapitalEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity.HK")]
    [System.SerializableAttribute()]
    public partial class HKCapitalEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AssetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo GTCapitalObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NotDoneProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ProfitLossTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AssetAmount {
            get {
                return this.AssetAmountField;
            }
            set {
                if ((this.AssetAmountField.Equals(value) != true)) {
                    this.AssetAmountField = value;
                    this.RaisePropertyChanged("AssetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo GTCapitalObj {
            get {
                return this.GTCapitalObjField;
            }
            set {
                if ((object.ReferenceEquals(this.GTCapitalObjField, value) != true)) {
                    this.GTCapitalObjField = value;
                    this.RaisePropertyChanged("GTCapitalObj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NotDoneProfitLossTotal {
            get {
                return this.NotDoneProfitLossTotalField;
            }
            set {
                if ((this.NotDoneProfitLossTotalField.Equals(value) != true)) {
                    this.NotDoneProfitLossTotalField = value;
                    this.RaisePropertyChanged("NotDoneProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ProfitLossTotal {
            get {
                return this.ProfitLossTotalField;
            }
            set {
                if ((this.ProfitLossTotalField.Equals(value) != true)) {
                    this.ProfitLossTotalField = value;
                    this.RaisePropertyChanged("ProfitLossTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_CapitalAccountInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_CapitalAccountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceOfTheDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalAccountLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CapitalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCapitalTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HasDoneProfitLossTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TodayOutInCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeCurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableCapital {
            get {
                return this.AvailableCapitalField;
            }
            set {
                if ((this.AvailableCapitalField.Equals(value) != true)) {
                    this.AvailableCapitalField = value;
                    this.RaisePropertyChanged("AvailableCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BalanceOfTheDay {
            get {
                return this.BalanceOfTheDayField;
            }
            set {
                if ((this.BalanceOfTheDayField.Equals(value) != true)) {
                    this.BalanceOfTheDayField = value;
                    this.RaisePropertyChanged("BalanceOfTheDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalAccountLogo {
            get {
                return this.CapitalAccountLogoField;
            }
            set {
                if ((this.CapitalAccountLogoField.Equals(value) != true)) {
                    this.CapitalAccountLogoField = value;
                    this.RaisePropertyChanged("CapitalAccountLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CapitalBalance {
            get {
                return this.CapitalBalanceField;
            }
            set {
                if ((this.CapitalBalanceField.Equals(value) != true)) {
                    this.CapitalBalanceField = value;
                    this.RaisePropertyChanged("CapitalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCapitalTotal {
            get {
                return this.FreezeCapitalTotalField;
            }
            set {
                if ((this.FreezeCapitalTotalField.Equals(value) != true)) {
                    this.FreezeCapitalTotalField = value;
                    this.RaisePropertyChanged("FreezeCapitalTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HasDoneProfitLossTotal {
            get {
                return this.HasDoneProfitLossTotalField;
            }
            set {
                if ((this.HasDoneProfitLossTotalField.Equals(value) != true)) {
                    this.HasDoneProfitLossTotalField = value;
                    this.RaisePropertyChanged("HasDoneProfitLossTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TodayOutInCapital {
            get {
                return this.TodayOutInCapitalField;
            }
            set {
                if ((this.TodayOutInCapitalField.Equals(value) != true)) {
                    this.TodayOutInCapitalField = value;
                    this.RaisePropertyChanged("TodayOutInCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeCurrencyType {
            get {
                return this.TradeCurrencyTypeField;
            }
            set {
                if ((this.TradeCurrencyTypeField.Equals(value) != true)) {
                    this.TradeCurrencyTypeField = value;
                    this.RaisePropertyChanged("TradeCurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKHoldConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity.HK")]
    [System.SerializableAttribute()]
    public partial class HKHoldConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CouldAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezeTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKHoldAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CouldAmount {
            get {
                return this.CouldAmountField;
            }
            set {
                if ((this.CouldAmountField.Equals(value) != true)) {
                    this.CouldAmountField = value;
                    this.RaisePropertyChanged("CouldAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentPrice {
            get {
                return this.CurrentPriceField;
            }
            set {
                if ((this.CurrentPriceField.Equals(value) != true)) {
                    this.CurrentPriceField = value;
                    this.RaisePropertyChanged("CurrentPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FreezeTotal {
            get {
                return this.FreezeTotalField;
            }
            set {
                if ((this.FreezeTotalField.Equals(value) != true)) {
                    this.FreezeTotalField = value;
                    this.RaisePropertyChanged("FreezeTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKCode {
            get {
                return this.HKCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HKCodeField, value) != true)) {
                    this.HKCodeField = value;
                    this.RaisePropertyChanged("HKCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKHoldAccount {
            get {
                return this.HKHoldAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.HKHoldAccountField, value) != true)) {
                    this.HKHoldAccountField = value;
                    this.RaisePropertyChanged("HKHoldAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoldAveragePrice {
            get {
                return this.HoldAveragePriceField;
            }
            set {
                if ((this.HoldAveragePriceField.Equals(value) != true)) {
                    this.HoldAveragePriceField = value;
                    this.RaisePropertyChanged("HoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldTotal {
            get {
                return this.HoldTotalField;
            }
            set {
                if ((this.HoldTotalField.Equals(value) != true)) {
                    this.HoldTotalField = value;
                    this.RaisePropertyChanged("HoldTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyCode {
            get {
                return this.VarietyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyCodeField, value) != true)) {
                    this.VarietyCodeField = value;
                    this.RaisePropertyChanged("VarietyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyName {
            get {
                return this.VarietyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyNameField, value) != true)) {
                    this.VarietyNameField = value;
                    this.RaisePropertyChanged("VarietyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKHoldFindResultyEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity.HK")]
    [System.SerializableAttribute()]
    public partial class HKHoldFindResultyEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BelongMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErroNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErroReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FloatProfitLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo HoldFindResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldSumAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarketValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RealtimePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyCategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BelongMarket {
            get {
                return this.BelongMarketField;
            }
            set {
                if ((object.ReferenceEquals(this.BelongMarketField, value) != true)) {
                    this.BelongMarketField = value;
                    this.RaisePropertyChanged("BelongMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErroNumber {
            get {
                return this.ErroNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ErroNumberField, value) != true)) {
                    this.ErroNumberField = value;
                    this.RaisePropertyChanged("ErroNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErroReason {
            get {
                return this.ErroReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ErroReasonField, value) != true)) {
                    this.ErroReasonField = value;
                    this.RaisePropertyChanged("ErroReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FloatProfitLoss {
            get {
                return this.FloatProfitLossField;
            }
            set {
                if ((this.FloatProfitLossField.Equals(value) != true)) {
                    this.FloatProfitLossField = value;
                    this.RaisePropertyChanged("FloatProfitLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKName {
            get {
                return this.HKNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HKNameField, value) != true)) {
                    this.HKNameField = value;
                    this.RaisePropertyChanged("HKName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo HoldFindResult {
            get {
                return this.HoldFindResultField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldFindResultField, value) != true)) {
                    this.HoldFindResultField = value;
                    this.RaisePropertyChanged("HoldFindResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldSumAmount {
            get {
                return this.HoldSumAmountField;
            }
            set {
                if ((this.HoldSumAmountField.Equals(value) != true)) {
                    this.HoldSumAmountField = value;
                    this.RaisePropertyChanged("HoldSumAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarketValue {
            get {
                return this.MarketValueField;
            }
            set {
                if ((this.MarketValueField.Equals(value) != true)) {
                    this.MarketValueField = value;
                    this.RaisePropertyChanged("MarketValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RealtimePrice {
            get {
                return this.RealtimePriceField;
            }
            set {
                if ((this.RealtimePriceField.Equals(value) != true)) {
                    this.RealtimePriceField = value;
                    this.RaisePropertyChanged("RealtimePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyCategories {
            get {
                return this.VarietyCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyCategoriesField, value) != true)) {
                    this.VarietyCategoriesField = value;
                    this.RaisePropertyChanged("VarietyCategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_AccountHoldInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_AccountHoldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountHoldLogoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BreakevenPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoldAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAccountDistributeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountHoldLogoID {
            get {
                return this.AccountHoldLogoIDField;
            }
            set {
                if ((this.AccountHoldLogoIDField.Equals(value) != true)) {
                    this.AccountHoldLogoIDField = value;
                    this.RaisePropertyChanged("AccountHoldLogoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableAmount {
            get {
                return this.AvailableAmountField;
            }
            set {
                if ((this.AvailableAmountField.Equals(value) != true)) {
                    this.AvailableAmountField = value;
                    this.RaisePropertyChanged("AvailableAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BreakevenPrice {
            get {
                return this.BreakevenPriceField;
            }
            set {
                if ((this.BreakevenPriceField.Equals(value) != true)) {
                    this.BreakevenPriceField = value;
                    this.RaisePropertyChanged("BreakevenPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostPrice {
            get {
                return this.CostPriceField;
            }
            set {
                if ((this.CostPriceField.Equals(value) != true)) {
                    this.CostPriceField = value;
                    this.RaisePropertyChanged("CostPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeID {
            get {
                return this.CurrencyTypeIDField;
            }
            set {
                if ((this.CurrencyTypeIDField.Equals(value) != true)) {
                    this.CurrencyTypeIDField = value;
                    this.RaisePropertyChanged("CurrencyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeAmount {
            get {
                return this.FreezeAmountField;
            }
            set {
                if ((this.FreezeAmountField.Equals(value) != true)) {
                    this.FreezeAmountField = value;
                    this.RaisePropertyChanged("FreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoldAveragePrice {
            get {
                return this.HoldAveragePriceField;
            }
            set {
                if ((this.HoldAveragePriceField.Equals(value) != true)) {
                    this.HoldAveragePriceField = value;
                    this.RaisePropertyChanged("HoldAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAccountDistributeLogo {
            get {
                return this.UserAccountDistributeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAccountDistributeLogoField, value) != true)) {
                    this.UserAccountDistributeLogoField = value;
                    this.RaisePropertyChanged("UserAccountDistributeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryType.QueryCurrencyType", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.QueryFilter" +
        "")]
    public enum QueryTypeQueryCurrencyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HK = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        US = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryType.QueryFreezeType", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.QueryFilter" +
        "")]
    public enum QueryTypeQueryFreezeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DelegateFreeze = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReckoningFreeze = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TodayHoldingCloseFreeze = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HistoryHoldingCloseFreeze = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_AcccountHoldFreezeInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_AcccountHoldFreezeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountHoldLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FreezeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezeTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoldFreezeLogoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrepareFreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ThawTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountHoldLogo {
            get {
                return this.AccountHoldLogoField;
            }
            set {
                if ((this.AccountHoldLogoField.Equals(value) != true)) {
                    this.AccountHoldLogoField = value;
                    this.RaisePropertyChanged("AccountHoldLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FreezeTime {
            get {
                return this.FreezeTimeField;
            }
            set {
                if ((this.FreezeTimeField.Equals(value) != true)) {
                    this.FreezeTimeField = value;
                    this.RaisePropertyChanged("FreezeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FreezeTypeID {
            get {
                return this.FreezeTypeIDField;
            }
            set {
                if ((this.FreezeTypeIDField.Equals(value) != true)) {
                    this.FreezeTypeIDField = value;
                    this.RaisePropertyChanged("FreezeTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoldFreezeLogoId {
            get {
                return this.HoldFreezeLogoIdField;
            }
            set {
                if ((this.HoldFreezeLogoIdField.Equals(value) != true)) {
                    this.HoldFreezeLogoIdField = value;
                    this.RaisePropertyChanged("HoldFreezeLogoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrepareFreezeAmount {
            get {
                return this.PrepareFreezeAmountField;
            }
            set {
                if ((this.PrepareFreezeAmountField.Equals(value) != true)) {
                    this.PrepareFreezeAmountField = value;
                    this.RaisePropertyChanged("PrepareFreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ThawTime {
            get {
                return this.ThawTimeField;
            }
            set {
                if ((this.ThawTimeField.Equals(value) != true)) {
                    this.ThawTimeField = value;
                    this.RaisePropertyChanged("ThawTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model")]
    [System.SerializableAttribute()]
    public partial class PagingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage {
            get {
                return this.CurrentPageField;
            }
            set {
                if ((this.CurrentPageField.Equals(value) != true)) {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCount {
            get {
                return this.IsCountField;
            }
            set {
                if ((this.IsCountField.Equals(value) != true)) {
                    this.IsCountField = value;
                    this.RaisePropertyChanged("IsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageLength {
            get {
                return this.PageLengthField;
            }
            set {
                if ((this.PageLengthField.Equals(value) != true)) {
                    this.PageLengthField = value;
                    this.RaisePropertyChanged("PageLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_CapitalAccountFreezeInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_CapitalAccountFreezeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalAccountLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapitalFreezeLogoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCapitalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreezeCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FreezeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezeTypeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OweCostingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ThawTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalAccountLogo {
            get {
                return this.CapitalAccountLogoField;
            }
            set {
                if ((this.CapitalAccountLogoField.Equals(value) != true)) {
                    this.CapitalAccountLogoField = value;
                    this.RaisePropertyChanged("CapitalAccountLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapitalFreezeLogoId {
            get {
                return this.CapitalFreezeLogoIdField;
            }
            set {
                if ((this.CapitalFreezeLogoIdField.Equals(value) != true)) {
                    this.CapitalFreezeLogoIdField = value;
                    this.RaisePropertyChanged("CapitalFreezeLogoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCapitalAmount {
            get {
                return this.FreezeCapitalAmountField;
            }
            set {
                if ((this.FreezeCapitalAmountField.Equals(value) != true)) {
                    this.FreezeCapitalAmountField = value;
                    this.RaisePropertyChanged("FreezeCapitalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FreezeCost {
            get {
                return this.FreezeCostField;
            }
            set {
                if ((this.FreezeCostField.Equals(value) != true)) {
                    this.FreezeCostField = value;
                    this.RaisePropertyChanged("FreezeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FreezeTime {
            get {
                return this.FreezeTimeField;
            }
            set {
                if ((this.FreezeTimeField.Equals(value) != true)) {
                    this.FreezeTimeField = value;
                    this.RaisePropertyChanged("FreezeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FreezeTypeLogo {
            get {
                return this.FreezeTypeLogoField;
            }
            set {
                if ((this.FreezeTypeLogoField.Equals(value) != true)) {
                    this.FreezeTypeLogoField = value;
                    this.RaisePropertyChanged("FreezeTypeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OweCosting {
            get {
                return this.OweCostingField;
            }
            set {
                if ((this.OweCostingField.Equals(value) != true)) {
                    this.OweCostingField = value;
                    this.RaisePropertyChanged("OweCosting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ThawTime {
            get {
                return this.ThawTimeField;
            }
            set {
                if ((this.ThawTimeField.Equals(value) != true)) {
                    this.ThawTimeField = value;
                    this.RaisePropertyChanged("ThawTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKEntrustConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity.HK")]
    [System.SerializableAttribute()]
    public partial class HKEntrustConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CanBeWithdrawnLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellDirection {
            get {
                return this.BuySellDirectionField;
            }
            set {
                if ((this.BuySellDirectionField.Equals(value) != true)) {
                    this.BuySellDirectionField = value;
                    this.RaisePropertyChanged("BuySellDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CanBeWithdrawnLogo {
            get {
                return this.CanBeWithdrawnLogoField;
            }
            set {
                if ((this.CanBeWithdrawnLogoField.Equals(value) != true)) {
                    this.CanBeWithdrawnLogoField = value;
                    this.RaisePropertyChanged("CanBeWithdrawnLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustState {
            get {
                return this.EntrustStateField;
            }
            set {
                if ((this.EntrustStateField.Equals(value) != true)) {
                    this.EntrustStateField = value;
                    this.RaisePropertyChanged("EntrustState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKCapitalAccount {
            get {
                return this.HKCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.HKCapitalAccountField, value) != true)) {
                    this.HKCapitalAccountField = value;
                    this.RaisePropertyChanged("HKCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKCode {
            get {
                return this.HKCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HKCodeField, value) != true)) {
                    this.HKCodeField = value;
                    this.RaisePropertyChanged("HKCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_TodayEntrustInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_TodayEntrustInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallbackChannlIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CancelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntrustTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HasDoneProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoldAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifyOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string McOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OfferTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderPriceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeID {
            get {
                return this.BuySellTypeIDField;
            }
            set {
                if ((this.BuySellTypeIDField.Equals(value) != true)) {
                    this.BuySellTypeIDField = value;
                    this.RaisePropertyChanged("BuySellTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallbackChannlID {
            get {
                return this.CallbackChannlIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CallbackChannlIDField, value) != true)) {
                    this.CallbackChannlIDField = value;
                    this.RaisePropertyChanged("CallbackChannlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CancelAmount {
            get {
                return this.CancelAmountField;
            }
            set {
                if ((this.CancelAmountField.Equals(value) != true)) {
                    this.CancelAmountField = value;
                    this.RaisePropertyChanged("CancelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CancelLogo {
            get {
                return this.CancelLogoField;
            }
            set {
                if ((this.CancelLogoField.Equals(value) != true)) {
                    this.CancelLogoField = value;
                    this.RaisePropertyChanged("CancelLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeID {
            get {
                return this.CurrencyTypeIDField;
            }
            set {
                if ((this.CurrencyTypeIDField.Equals(value) != true)) {
                    this.CurrencyTypeIDField = value;
                    this.RaisePropertyChanged("CurrencyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustAmount {
            get {
                return this.EntrustAmountField;
            }
            set {
                if ((this.EntrustAmountField.Equals(value) != true)) {
                    this.EntrustAmountField = value;
                    this.RaisePropertyChanged("EntrustAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntrustTime {
            get {
                return this.EntrustTimeField;
            }
            set {
                if ((this.EntrustTimeField.Equals(value) != true)) {
                    this.EntrustTimeField = value;
                    this.RaisePropertyChanged("EntrustTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HasDoneProfit {
            get {
                return this.HasDoneProfitField;
            }
            set {
                if ((this.HasDoneProfitField.Equals(value) != true)) {
                    this.HasDoneProfitField = value;
                    this.RaisePropertyChanged("HasDoneProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoldAccount {
            get {
                return this.HoldAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldAccountField, value) != true)) {
                    this.HoldAccountField = value;
                    this.RaisePropertyChanged("HoldAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModifyOrder {
            get {
                return this.IsModifyOrderField;
            }
            set {
                if ((this.IsModifyOrderField.Equals(value) != true)) {
                    this.IsModifyOrderField = value;
                    this.RaisePropertyChanged("IsModifyOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string McOrderID {
            get {
                return this.McOrderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.McOrderIDField, value) != true)) {
                    this.McOrderIDField = value;
                    this.RaisePropertyChanged("McOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyOrderNumber {
            get {
                return this.ModifyOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyOrderNumberField, value) != true)) {
                    this.ModifyOrderNumberField = value;
                    this.RaisePropertyChanged("ModifyOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OfferTime {
            get {
                return this.OfferTimeField;
            }
            set {
                if ((this.OfferTimeField.Equals(value) != true)) {
                    this.OfferTimeField = value;
                    this.RaisePropertyChanged("OfferTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderPriceType {
            get {
                return this.OrderPriceTypeField;
            }
            set {
                if ((this.OrderPriceTypeField.Equals(value) != true)) {
                    this.OrderPriceTypeField = value;
                    this.RaisePropertyChanged("OrderPriceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatusID {
            get {
                return this.OrderStatusIDField;
            }
            set {
                if ((this.OrderStatusIDField.Equals(value) != true)) {
                    this.OrderStatusIDField = value;
                    this.RaisePropertyChanged("OrderStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeAveragePrice {
            get {
                return this.TradeAveragePriceField;
            }
            set {
                if ((this.TradeAveragePriceField.Equals(value) != true)) {
                    this.TradeAveragePriceField = value;
                    this.RaisePropertyChanged("TradeAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitID {
            get {
                return this.TradeUnitIDField;
            }
            set {
                if ((this.TradeUnitIDField.Equals(value) != true)) {
                    this.TradeUnitIDField = value;
                    this.RaisePropertyChanged("TradeUnitID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_HistoryEntrustInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_HistoryEntrustInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CancelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustMountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntrustTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HasDoneProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoldAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsModifyOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string McOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifyOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OfferTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderPriceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeAveragePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeID {
            get {
                return this.BuySellTypeIDField;
            }
            set {
                if ((this.BuySellTypeIDField.Equals(value) != true)) {
                    this.BuySellTypeIDField = value;
                    this.RaisePropertyChanged("BuySellTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CancelAmount {
            get {
                return this.CancelAmountField;
            }
            set {
                if ((this.CancelAmountField.Equals(value) != true)) {
                    this.CancelAmountField = value;
                    this.RaisePropertyChanged("CancelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeID {
            get {
                return this.CurrencyTypeIDField;
            }
            set {
                if ((this.CurrencyTypeIDField.Equals(value) != true)) {
                    this.CurrencyTypeIDField = value;
                    this.RaisePropertyChanged("CurrencyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustMount {
            get {
                return this.EntrustMountField;
            }
            set {
                if ((this.EntrustMountField.Equals(value) != true)) {
                    this.EntrustMountField = value;
                    this.RaisePropertyChanged("EntrustMount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EntrustTime {
            get {
                return this.EntrustTimeField;
            }
            set {
                if ((this.EntrustTimeField.Equals(value) != true)) {
                    this.EntrustTimeField = value;
                    this.RaisePropertyChanged("EntrustTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HasDoneProfit {
            get {
                return this.HasDoneProfitField;
            }
            set {
                if ((this.HasDoneProfitField.Equals(value) != true)) {
                    this.HasDoneProfitField = value;
                    this.RaisePropertyChanged("HasDoneProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoldAccount {
            get {
                return this.HoldAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldAccountField, value) != true)) {
                    this.HoldAccountField = value;
                    this.RaisePropertyChanged("HoldAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsModifyOrder {
            get {
                return this.IsModifyOrderField;
            }
            set {
                if ((this.IsModifyOrderField.Equals(value) != true)) {
                    this.IsModifyOrderField = value;
                    this.RaisePropertyChanged("IsModifyOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string McOrderID {
            get {
                return this.McOrderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.McOrderIDField, value) != true)) {
                    this.McOrderIDField = value;
                    this.RaisePropertyChanged("McOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifyOrderNumber {
            get {
                return this.ModifyOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyOrderNumberField, value) != true)) {
                    this.ModifyOrderNumberField = value;
                    this.RaisePropertyChanged("ModifyOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OfferTime {
            get {
                return this.OfferTimeField;
            }
            set {
                if ((this.OfferTimeField.Equals(value) != true)) {
                    this.OfferTimeField = value;
                    this.RaisePropertyChanged("OfferTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderMessage {
            get {
                return this.OrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderMessageField, value) != true)) {
                    this.OrderMessageField = value;
                    this.RaisePropertyChanged("OrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderPriceType {
            get {
                return this.OrderPriceTypeField;
            }
            set {
                if ((this.OrderPriceTypeField.Equals(value) != true)) {
                    this.OrderPriceTypeField = value;
                    this.RaisePropertyChanged("OrderPriceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderStatusID {
            get {
                return this.OrderStatusIDField;
            }
            set {
                if ((this.OrderStatusIDField.Equals(value) != true)) {
                    this.OrderStatusIDField = value;
                    this.RaisePropertyChanged("OrderStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeAveragePrice {
            get {
                return this.TradeAveragePriceField;
            }
            set {
                if ((this.TradeAveragePriceField.Equals(value) != true)) {
                    this.TradeAveragePriceField = value;
                    this.RaisePropertyChanged("TradeAveragePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitID {
            get {
                return this.TradeUnitIDField;
            }
            set {
                if ((this.TradeUnitIDField.Equals(value) != true)) {
                    this.TradeUnitIDField = value;
                    this.RaisePropertyChanged("TradeUnitID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HKTradeConditionFindEntity", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.AccountManagement" +
        "AndFindEntity.HK")]
    [System.SerializableAttribute()]
    public partial class HKTradeConditionFindEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BelongToMarketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CanBeWithdrawnLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntrustStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKCapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HKCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarietyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BelongToMarket {
            get {
                return this.BelongToMarketField;
            }
            set {
                if ((this.BelongToMarketField.Equals(value) != true)) {
                    this.BelongToMarketField = value;
                    this.RaisePropertyChanged("BelongToMarket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellDirection {
            get {
                return this.BuySellDirectionField;
            }
            set {
                if ((this.BuySellDirectionField.Equals(value) != true)) {
                    this.BuySellDirectionField = value;
                    this.RaisePropertyChanged("BuySellDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CanBeWithdrawnLogo {
            get {
                return this.CanBeWithdrawnLogoField;
            }
            set {
                if ((this.CanBeWithdrawnLogoField.Equals(value) != true)) {
                    this.CanBeWithdrawnLogoField = value;
                    this.RaisePropertyChanged("CanBeWithdrawnLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyType {
            get {
                return this.CurrencyTypeField;
            }
            set {
                if ((this.CurrencyTypeField.Equals(value) != true)) {
                    this.CurrencyTypeField = value;
                    this.RaisePropertyChanged("CurrencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntrustState {
            get {
                return this.EntrustStateField;
            }
            set {
                if ((this.EntrustStateField.Equals(value) != true)) {
                    this.EntrustStateField = value;
                    this.RaisePropertyChanged("EntrustState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKCapitalAccount {
            get {
                return this.HKCapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.HKCapitalAccountField, value) != true)) {
                    this.HKCapitalAccountField = value;
                    this.RaisePropertyChanged("HKCapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HKCode {
            get {
                return this.HKCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HKCodeField, value) != true)) {
                    this.HKCodeField = value;
                    this.RaisePropertyChanged("HKCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeType {
            get {
                return this.TradeTypeField;
            }
            set {
                if ((this.TradeTypeField.Equals(value) != true)) {
                    this.TradeTypeField = value;
                    this.RaisePropertyChanged("TradeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarietyType {
            get {
                return this.VarietyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarietyTypeField, value) != true)) {
                    this.VarietyTypeField = value;
                    this.RaisePropertyChanged("VarietyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_HistoryTradeInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_HistoryTradeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClearingFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoldAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonitoringFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StampTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeProceduresFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradingSystemUseFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransferAccountFeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClearingFee {
            get {
                return this.ClearingFeeField;
            }
            set {
                if ((this.ClearingFeeField.Equals(value) != true)) {
                    this.ClearingFeeField = value;
                    this.RaisePropertyChanged("ClearingFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoldAccount {
            get {
                return this.HoldAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldAccountField, value) != true)) {
                    this.HoldAccountField = value;
                    this.RaisePropertyChanged("HoldAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonitoringFee {
            get {
                return this.MonitoringFeeField;
            }
            set {
                if ((this.MonitoringFeeField.Equals(value) != true)) {
                    this.MonitoringFeeField = value;
                    this.RaisePropertyChanged("MonitoringFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StampTax {
            get {
                return this.StampTaxField;
            }
            set {
                if ((this.StampTaxField.Equals(value) != true)) {
                    this.StampTaxField = value;
                    this.RaisePropertyChanged("StampTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeProceduresFee {
            get {
                return this.TradeProceduresFeeField;
            }
            set {
                if ((this.TradeProceduresFeeField.Equals(value) != true)) {
                    this.TradeProceduresFeeField = value;
                    this.RaisePropertyChanged("TradeProceduresFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeTime {
            get {
                return this.TradeTimeField;
            }
            set {
                if ((this.TradeTimeField.Equals(value) != true)) {
                    this.TradeTimeField = value;
                    this.RaisePropertyChanged("TradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeTypeId {
            get {
                return this.TradeTypeIdField;
            }
            set {
                if ((this.TradeTypeIdField.Equals(value) != true)) {
                    this.TradeTypeIdField = value;
                    this.RaisePropertyChanged("TradeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradingSystemUseFee {
            get {
                return this.TradingSystemUseFeeField;
            }
            set {
                if ((this.TradingSystemUseFeeField.Equals(value) != true)) {
                    this.TradingSystemUseFeeField = value;
                    this.RaisePropertyChanged("TradingSystemUseFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransferAccountFee {
            get {
                return this.TransferAccountFeeField;
            }
            set {
                if ((this.TransferAccountFeeField.Equals(value) != true)) {
                    this.TransferAccountFeeField = value;
                    this.RaisePropertyChanged("TransferAccountFee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_TodayTradeInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_TodayTradeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuySellTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClearingFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntrustPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoldAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonitoringFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortfolioLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StampTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeCapitalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradeProceduresFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TradeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TradingSystemUseFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TransferAccountFeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuySellTypeId {
            get {
                return this.BuySellTypeIdField;
            }
            set {
                if ((this.BuySellTypeIdField.Equals(value) != true)) {
                    this.BuySellTypeIdField = value;
                    this.RaisePropertyChanged("BuySellTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapitalAccount {
            get {
                return this.CapitalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalAccountField, value) != true)) {
                    this.CapitalAccountField = value;
                    this.RaisePropertyChanged("CapitalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClearingFee {
            get {
                return this.ClearingFeeField;
            }
            set {
                if ((this.ClearingFeeField.Equals(value) != true)) {
                    this.ClearingFeeField = value;
                    this.RaisePropertyChanged("ClearingFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyTypeId {
            get {
                return this.CurrencyTypeIdField;
            }
            set {
                if ((this.CurrencyTypeIdField.Equals(value) != true)) {
                    this.CurrencyTypeIdField = value;
                    this.RaisePropertyChanged("CurrencyTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNumber {
            get {
                return this.EntrustNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNumberField, value) != true)) {
                    this.EntrustNumberField = value;
                    this.RaisePropertyChanged("EntrustNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntrustPrice {
            get {
                return this.EntrustPriceField;
            }
            set {
                if ((this.EntrustPriceField.Equals(value) != true)) {
                    this.EntrustPriceField = value;
                    this.RaisePropertyChanged("EntrustPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoldAccount {
            get {
                return this.HoldAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.HoldAccountField, value) != true)) {
                    this.HoldAccountField = value;
                    this.RaisePropertyChanged("HoldAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonitoringFee {
            get {
                return this.MonitoringFeeField;
            }
            set {
                if ((this.MonitoringFeeField.Equals(value) != true)) {
                    this.MonitoringFeeField = value;
                    this.RaisePropertyChanged("MonitoringFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortfolioLogo {
            get {
                return this.PortfolioLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PortfolioLogoField, value) != true)) {
                    this.PortfolioLogoField = value;
                    this.RaisePropertyChanged("PortfolioLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StampTax {
            get {
                return this.StampTaxField;
            }
            set {
                if ((this.StampTaxField.Equals(value) != true)) {
                    this.StampTaxField = value;
                    this.RaisePropertyChanged("StampTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeAmount {
            get {
                return this.TradeAmountField;
            }
            set {
                if ((this.TradeAmountField.Equals(value) != true)) {
                    this.TradeAmountField = value;
                    this.RaisePropertyChanged("TradeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeCapitalAmount {
            get {
                return this.TradeCapitalAmountField;
            }
            set {
                if ((this.TradeCapitalAmountField.Equals(value) != true)) {
                    this.TradeCapitalAmountField = value;
                    this.RaisePropertyChanged("TradeCapitalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeNumber {
            get {
                return this.TradeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeNumberField, value) != true)) {
                    this.TradeNumberField = value;
                    this.RaisePropertyChanged("TradeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradePrice {
            get {
                return this.TradePriceField;
            }
            set {
                if ((this.TradePriceField.Equals(value) != true)) {
                    this.TradePriceField = value;
                    this.RaisePropertyChanged("TradePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradeProceduresFee {
            get {
                return this.TradeProceduresFeeField;
            }
            set {
                if ((this.TradeProceduresFeeField.Equals(value) != true)) {
                    this.TradeProceduresFeeField = value;
                    this.RaisePropertyChanged("TradeProceduresFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TradeTime {
            get {
                return this.TradeTimeField;
            }
            set {
                if ((this.TradeTimeField.Equals(value) != true)) {
                    this.TradeTimeField = value;
                    this.RaisePropertyChanged("TradeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeTypeId {
            get {
                return this.TradeTypeIdField;
            }
            set {
                if ((this.TradeTypeIdField.Equals(value) != true)) {
                    this.TradeTypeIdField = value;
                    this.RaisePropertyChanged("TradeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeUnitId {
            get {
                return this.TradeUnitIdField;
            }
            set {
                if ((this.TradeUnitIdField.Equals(value) != true)) {
                    this.TradeUnitIdField = value;
                    this.RaisePropertyChanged("TradeUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TradingSystemUseFee {
            get {
                return this.TradingSystemUseFeeField;
            }
            set {
                if ((this.TradingSystemUseFeeField.Equals(value) != true)) {
                    this.TradingSystemUseFeeField = value;
                    this.RaisePropertyChanged("TradingSystemUseFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TransferAccountFee {
            get {
                return this.TransferAccountFeeField;
            }
            set {
                if ((this.TransferAccountFeeField.Equals(value) != true)) {
                    this.TransferAccountFeeField = value;
                    this.RaisePropertyChanged("TransferAccountFee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HK_HistoryModifyOrderRequestInfo", Namespace="http://schemas.datacontract.org/2004/07/ReckoningCounter.Entity.Model.HK")]
    [System.SerializableAttribute()]
    public partial class HK_HistoryModifyOrderRequestInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntrustNubmerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FundAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifyOrderDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIDField, value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntrustNubmer {
            get {
                return this.EntrustNubmerField;
            }
            set {
                if ((object.ReferenceEquals(this.EntrustNubmerField, value) != true)) {
                    this.EntrustNubmerField = value;
                    this.RaisePropertyChanged("EntrustNubmer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FundAccountId {
            get {
                return this.FundAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FundAccountIdField, value) != true)) {
                    this.FundAccountIdField = value;
                    this.RaisePropertyChanged("FundAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyOrderDateTime {
            get {
                return this.ModifyOrderDateTimeField;
            }
            set {
                if ((this.ModifyOrderDateTimeField.Equals(value) != true)) {
                    this.ModifyOrderDateTimeField = value;
                    this.RaisePropertyChanged("ModifyOrderDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderAmount {
            get {
                return this.OrderAmountField;
            }
            set {
                if ((this.OrderAmountField.Equals(value) != true)) {
                    this.OrderAmountField = value;
                    this.RaisePropertyChanged("OrderAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((this.OrderPriceField.Equals(value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderId {
            get {
                return this.TraderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderIdField, value) != true)) {
                    this.TraderIdField = value;
                    this.RaisePropertyChanged("TraderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderPassword {
            get {
                return this.TraderPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderPasswordField, value) != true)) {
                    this.TraderPasswordField = value;
                    this.RaisePropertyChanged("TraderPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HKTraderQuerySevice.IHKTraderQuery")]
    public interface IHKTraderQuery {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHKCapitalDetail", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHKCapitalDetailResponse")]
        ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKCapitalEntity PagingQueryHKCapitalDetail(string userId, string userPassword, int accountType, GTA.VTS.Common.CommonObject.Types.CurrencyType currencyType, ref string strErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHKHold", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHKHoldResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKHoldFindResultyEntity> PagingQueryHKHold(out int count, string userId, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKHoldConditionFindEntity findCondition, int start, int pageLength, ref string errMesg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_AccountHoldByUserID", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_AccountHoldByUserIDResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo> QueryHK_AccountHoldByUserID(out string errMsg, string userID, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencytype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_AccountHoldByUserIDAndPwd", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_AccountHoldByUserIDAndPwdResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo> QueryHK_AccountHoldByUserIDAndPwd(out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_AccountHoldByAccount", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_AccountHoldByAccountResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo> QueryHK_AccountHoldByAccount(out string errMsg, string hk_Cap_Acc, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_AcccountHoldFreezeByEntrustNo", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_AcccountHoldFreezeByEntrustNoResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AcccountHoldFreezeInfo> QueryHK_AcccountHoldFreezeByEntrustNo(out string errMsg, string entrustNo, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_AcccountHoldFreezeByAccount", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_AcccountHoldFreezeByAccountRespon" +
            "se")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AcccountHoldFreezeInfo> PagingQueryHK_AcccountHoldFreezeByAccount(out int total, out string errMsg, string holdAccount, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_AcccountHoldFreezeByUserID", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_AcccountHoldFreezeByUserIDRespons" +
            "e")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AcccountHoldFreezeInfo> PagingQueryHK_AcccountHoldFreezeByUserID(out int total, out string errMsg, string userID, int accountType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountTableByUserID", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountTableByUserIDResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo> QueryHK_CapitalAccountTableByUserID(out string errMsg, string userID, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountByUserIDAndPwd", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountByUserIDAndPwdResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo> QueryHK_CapitalAccountByUserIDAndPwd(out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountByAccount", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountByAccountResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo> QueryHK_CapitalAccountByAccount(out string errMsg, string xh_Cap_Account, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountFreezeByEntrustNo", ReplyAction="http://tempuri.org/IHKTraderQuery/QueryHK_CapitalAccountFreezeByEntrustNoResponse" +
            "")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountFreezeInfo> QueryHK_CapitalAccountFreezeByEntrustNo(out string errMsg, string entrustNo, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_CapitalAccountFreezeByAccount", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_CapitalAccountFreezeByAccountResp" +
            "onse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountFreezeInfo> PagingQueryHK_CapitalAccountFreezeByAccount(out int total, out string errMsg, string account, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_CapitalAccountFreezeByUserID", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_CapitalAccountFreezeByUserIDRespo" +
            "nse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountFreezeInfo> PagingQueryHK_CapitalAccountFreezeByUserID(out int total, out string errMsg, string userID, int accountType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_TodayEntrustByFilterAndUserIDPwd", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_TodayEntrustByFilterAndUserIDPwdR" +
            "esponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_TodayEntrustInfo> PagingQueryHK_TodayEntrustByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKEntrustConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_HistoryEntrustByFilterAndUserIDPw" +
            "d", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_HistoryEntrustByFilterAndUserIDPw" +
            "dResponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_HistoryEntrustInfo> PagingQueryHK_HistoryEntrustByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKEntrustConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_HistoryTradeByFilterAndUserIDPwd", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_HistoryTradeByFilterAndUserIDPwdR" +
            "esponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_HistoryTradeInfo> PagingQueryHK_HistoryTradeByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKTradeConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_TodayTradeByFilterAndUserIDPwd", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_TodayTradeByFilterAndUserIDPwdRes" +
            "ponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_TodayTradeInfo> PagingQueryHK_TodayTradeByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKTradeConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHKTraderQuery/PagingQueryHK_ModifyRequertByUserIDOrEntrustNo", ReplyAction="http://tempuri.org/IHKTraderQuery/PagingQueryHK_ModifyRequertByUserIDOrEntrustNoR" +
            "esponse")]
        System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_HistoryModifyOrderRequestInfo> PagingQueryHK_ModifyRequertByUserIDOrEntrustNo(out int total, out string errMsg, string userID, string entrustNumber, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int selectType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHKTraderQueryChannel : ReckoningCounter.PushBackTest.HKTraderQuerySevice.IHKTraderQuery, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HKTraderQueryClient : System.ServiceModel.ClientBase<ReckoningCounter.PushBackTest.HKTraderQuerySevice.IHKTraderQuery>, ReckoningCounter.PushBackTest.HKTraderQuerySevice.IHKTraderQuery {
        
        public HKTraderQueryClient() {
        }
        
        public HKTraderQueryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HKTraderQueryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HKTraderQueryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HKTraderQueryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKCapitalEntity PagingQueryHKCapitalDetail(string userId, string userPassword, int accountType, GTA.VTS.Common.CommonObject.Types.CurrencyType currencyType, ref string strErrorMessage) {
            return base.Channel.PagingQueryHKCapitalDetail(userId, userPassword, accountType, currencyType, ref strErrorMessage);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKHoldFindResultyEntity> PagingQueryHKHold(out int count, string userId, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKHoldConditionFindEntity findCondition, int start, int pageLength, ref string errMesg) {
            return base.Channel.PagingQueryHKHold(out count, userId, pwd, accountType, findCondition, start, pageLength, ref errMesg);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo> QueryHK_AccountHoldByUserID(out string errMsg, string userID, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencytype) {
            return base.Channel.QueryHK_AccountHoldByUserID(out errMsg, userID, accountType, currencytype);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo> QueryHK_AccountHoldByUserIDAndPwd(out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType) {
            return base.Channel.QueryHK_AccountHoldByUserIDAndPwd(out errMsg, userID, pwd, accountType, currencyType);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AccountHoldInfo> QueryHK_AccountHoldByAccount(out string errMsg, string hk_Cap_Acc, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType) {
            return base.Channel.QueryHK_AccountHoldByAccount(out errMsg, hk_Cap_Acc, currencyType);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AcccountHoldFreezeInfo> QueryHK_AcccountHoldFreezeByEntrustNo(out string errMsg, string entrustNo, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType) {
            return base.Channel.QueryHK_AcccountHoldFreezeByEntrustNo(out errMsg, entrustNo, freezeType);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AcccountHoldFreezeInfo> PagingQueryHK_AcccountHoldFreezeByAccount(out int total, out string errMsg, string holdAccount, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_AcccountHoldFreezeByAccount(out total, out errMsg, holdAccount, startTime, endTime, currencyType, freezeType, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_AcccountHoldFreezeInfo> PagingQueryHK_AcccountHoldFreezeByUserID(out int total, out string errMsg, string userID, int accountType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_AcccountHoldFreezeByUserID(out total, out errMsg, userID, accountType, startTime, endTime, currencyType, freezeType, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo> QueryHK_CapitalAccountTableByUserID(out string errMsg, string userID, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType) {
            return base.Channel.QueryHK_CapitalAccountTableByUserID(out errMsg, userID, accountType, currencyType);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo> QueryHK_CapitalAccountByUserIDAndPwd(out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType) {
            return base.Channel.QueryHK_CapitalAccountByUserIDAndPwd(out errMsg, userID, pwd, accountType, currencyType);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountInfo> QueryHK_CapitalAccountByAccount(out string errMsg, string xh_Cap_Account, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType) {
            return base.Channel.QueryHK_CapitalAccountByAccount(out errMsg, xh_Cap_Account, currencyType);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountFreezeInfo> QueryHK_CapitalAccountFreezeByEntrustNo(out string errMsg, string entrustNo, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType) {
            return base.Channel.QueryHK_CapitalAccountFreezeByEntrustNo(out errMsg, entrustNo, freezeType);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountFreezeInfo> PagingQueryHK_CapitalAccountFreezeByAccount(out int total, out string errMsg, string account, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_CapitalAccountFreezeByAccount(out total, out errMsg, account, startTime, endTime, currencyType, freezeType, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_CapitalAccountFreezeInfo> PagingQueryHK_CapitalAccountFreezeByUserID(out int total, out string errMsg, string userID, int accountType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryCurrencyType currencyType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.QueryTypeQueryFreezeType freezeType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_CapitalAccountFreezeByUserID(out total, out errMsg, userID, accountType, startTime, endTime, currencyType, freezeType, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_TodayEntrustInfo> PagingQueryHK_TodayEntrustByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKEntrustConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_TodayEntrustByFilterAndUserIDPwd(out total, out errMsg, userID, pwd, accountType, filter, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_HistoryEntrustInfo> PagingQueryHK_HistoryEntrustByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKEntrustConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_HistoryEntrustByFilterAndUserIDPwd(out total, out errMsg, userID, pwd, accountType, filter, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_HistoryTradeInfo> PagingQueryHK_HistoryTradeByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKTradeConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_HistoryTradeByFilterAndUserIDPwd(out total, out errMsg, userID, pwd, accountType, filter, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_TodayTradeInfo> PagingQueryHK_TodayTradeByFilterAndUserIDPwd(out int total, out string errMsg, string userID, string pwd, int accountType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.HKTradeConditionFindEntity filter, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_TodayTradeByFilterAndUserIDPwd(out total, out errMsg, userID, pwd, accountType, filter, pageInfo);
        }
        
        public System.Collections.Generic.List<ReckoningCounter.PushBackTest.HKTraderQuerySevice.HK_HistoryModifyOrderRequestInfo> PagingQueryHK_ModifyRequertByUserIDOrEntrustNo(out int total, out string errMsg, string userID, string entrustNumber, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int selectType, ReckoningCounter.PushBackTest.HKTraderQuerySevice.PagingInfo pageInfo) {
            return base.Channel.PagingQueryHK_ModifyRequertByUserIDOrEntrustNo(out total, out errMsg, userID, entrustNumber, startTime, endTime, selectType, pageInfo);
        }
    }
}
