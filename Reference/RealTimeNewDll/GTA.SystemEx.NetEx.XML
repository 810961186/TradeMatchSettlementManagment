<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GTA.SystemEx.NetEx</name>
    </assembly>
    <members>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketClient">
            <summary>
            Socket client host.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost">
            <summary>
            The connection host.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost.Start">
            <summary>
            Starts the base host.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost.Stop">
            <summary>
            Stop the base host.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost.StopCreators">
            <summary>
            Stop the host creators.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost.BeginSend(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection,System.Byte[],System.Boolean)">
            <summary>
            Begin send the data.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost.BeginReceive(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection)">
            <summary>
            Receive data from connetion.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost.BeginDisconnect(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection)">
            <summary>
            Begin disconnect the connection
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost.InitializeConnection(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection)">
            <summary>
            Initializes the connection
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketClient.BeginReconnect(GTA.RealTime.SystemEx.NetEx.SocketsEx.ClientSocketConnection)">
            <summary>
            Reconnects the connection adjusting the reconnect timer.
            </summary>
            <param name="connection">
            Connection.
            </param>
            <param name="sleepTimeOutValue">
            Sleep timeout before reconnect.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketClient.AddConnector(System.String,System.Net.IPEndPoint)">
            <summary>
            Adds the client connector (SocketConnector).
            </summary>
            <param name="remoteEndPoint"></param>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketConnector">
            <summary>
            Client socket creator.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionCreator">
            <summary>
            Connection creator using in BaseSocketConnectionHost.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketConnector.#ctor(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost,System.String,System.Net.IPEndPoint,GTA.RealTime.SystemEx.NetEx.SocketsEx.ProxyInfo,GTA.RealTime.SystemEx.NetEx.SocketsEx.EncryptType,GTA.RealTime.SystemEx.NetEx.SocketsEx.CompressionType,GTA.RealTime.SystemEx.NetEx.SocketsEx.ICryptoService,System.Int32,System.Int32,System.Net.IPEndPoint)">
            <summary>
            Base SocketConnector creator.
            </summary>
            <param name="host">
            Host.
            </param>
            <param name="remoteEndPoint">
            The remote endpoint to connect.
            </param>
            <param name="encryptType">
            Encrypt type.
            </param>
            <param name="compressionType">
            Compression type.
            </param>
            <param name="cryptoService">
            CryptoService. if null, will not be used.
            </param>
            <param name="localEndPoint">
            Local endpoint. if null, will be any address/port.
            </param>
            <param name="name"></param>
            <param name="reconnectAttemptInterval">重连间隔时间</param>
            <param name="reconnectAttempts">重连次数</param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketConnector.BeginConnect">
            <summary>
            Begin the connection with host.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketConnector.BeginConnectCallbackAsync(System.Object,System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            Connect callback!
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketConnector.ReconnectConnection(System.Boolean,System.Exception)">
            <summary>
            重新连接,有固定时间间隔一直重连(resetAttempts=true)和连接数次控制两种机制(resetAttempts=false)
            </summary>
            <param name="resetAttempts">是否复位尝试连接,是:true,刚以默认(构造函数中参数)时间间隔执行,否,false,否时同时会检测重连次数</param>
            <param name="ex"></param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketConnector.SocketDisconnectedNotifyCallBack(System.Object)">
            <summary>
            认为断开连接的事件通知的定时器的回调
            </summary>
            <param name="stateInfo"></param>
        </member>
        <member name="T:GTA.RealTime.SocketsEx.ISocketProxyable">
            <summary>
            可实现代理连接接口
            </summary>
        </member>
        <member name="P:GTA.RealTime.SocketsEx.ISocketProxyable.ProxyServerIp">
            <summary>
            代理服务器地址
            </summary>
        </member>
        <member name="P:GTA.RealTime.SocketsEx.ISocketProxyable.ProxyServerPort">
            <summary>
            代理服务器端口号
            </summary>
        </member>
        <member name="P:GTA.RealTime.SocketsEx.ISocketProxyable.ViaProxyUsername">
            <summary>
            通过代理服务器的用户名
            </summary>
        </member>
        <member name="P:GTA.RealTime.SocketsEx.ISocketProxyable.ViaProxyPassword">
            <summary>
            通过代理服务器的密码
            </summary>
        </member>
        <member name="T:GTA.RealTime.SocketsEx.SocksProxyFactory">
            <summary>
            Provides sock5 functionality to clients (Connect only).
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.AuthenticateCallbackData">
            <summary>
            Keeps connection authenticate information between callbacks.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection">
            <summary>
            Base socket connection
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection">
            <summary>
            Common connection properties and methods.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnectionInfo.UserData">
            <summary>
            Connection user data.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnectionInfo.ConnectionId">
            <summary>
            Connection Session Id.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnectionInfo.Creator">
            <summary>
            Connection Creator object.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnectionInfo.Host">
            <summary>
            Connection Host object.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnectionInfo.SocketHandle">
            <summary>
            Handle of the OS Socket.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnectionInfo.LocalEndPoint">
            <summary>
            Local socket endpoint.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnectionInfo.RemoteEndPoint">
            <summary>
            Remote socket endpoint.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.SetTTL(System.Int16)">
            <summary>
            Set Socket Time To Live option
            </summary>
            <param name="value">
            Value for TTL in seconds
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.SetLinger(System.Net.Sockets.LingerOption)">
            <summary>
            Set Socket Linger option.
            </summary>
            <param name="lo">
            LingerOption value to be set
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.SetNagle(System.Boolean)">
            <summary>
            Set Socket Nagle algoritm.
            </summary>
            <param name="value">
            Enable/Disable value
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.AsClientConnection">
            <summary>
            Represents the connection as a IClientSocketConnection.
            </summary>
            <returns>
            
            </returns>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.AsServerConnection">
            <summary>
            Represents the connection as a IServerSocketConnection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.GetConnectionById(System.Int64)">
            <summary>
            Get the connection from the connectionId.
            </summary>
            <param name="connectionId">
            The connectionId.
            </param>
            <returns>
            ISocketConnection to use.
            </returns>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.GetConnections">
            <summary>
            Get all the connections.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.BeginSend(System.Byte[])">
            <summary>
            Begin send data.
            </summary>
            <param name="buffer">
            Data to be sent.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.BeginReceive">
            <summary>
            Begin receive the data.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection.BeginDisconnect">
            <summary>
            Begin disconnect the connection.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection.DelimiterType">
            <summary>
            分隔类型
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ClientSocketConnection">
            <summary>
            Client socket connection implementation.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.IClientSocketConnection">
            <summary>
            Client connection methods.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.IClientSocketConnection.BeginReconnect">
            <summary>
            Begin reconnect the connection.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.IClientSocketConnection.ProxyInfo">
            <summary>
            Proxy information.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ConnectionEventArgs">
            <summary>
            Base event arguments for connection events.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.ConnectionEventArgs.Connection">
            <summary>
            Gets the ISocketConnection from event.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.CryptUtils">
            <summary>
            Crypt tools.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.CryptUtils.CreateSymmetricAlgoritm(GTA.RealTime.SystemEx.NetEx.SocketsEx.EncryptType)">
            <summary>
            Creates an asymmetric algoritm.
            </summary>
            <param name="encryptType">
            Encrypt type.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.CryptUtils.EncryptDataForAuthenticate(System.Security.Cryptography.ICryptoTransform,System.Byte[])">
            <summary>
            Encrypts using default padding.
            </summary>
            <param name="buffer">
            Data to be rncrypted
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.CryptUtils.DecryptDataForAuthenticate(System.Security.Cryptography.ICryptoTransform,System.Byte[])">
            <summary>
            Encrypts using default padding.
            </summary>
            <param name="buffer">
            Data to be encrypted
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.CryptUtils.EncryptData(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection,System.Byte[])">
            <summary>
            Encrypts the data.
            </summary>
            <param name="connection">
            Connection information.
            </param>
            <param name="buffer">
            Data to be encrypted.
            </param>
            <param name="signOnly">
            Indicates is encrypt method only uses symmetric algoritm.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.CryptUtils.DecryptData(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnection,System.Byte[],System.Int32)">
            <summary>
            Decrypts the data.
            </summary>
            <param name="connection">
            Connection information.
            </param>
            <param name="buffer">
            Data to be encrypted.
            </param>
            <param name="maxBufferSize">
            Max buffer size accepted.
            </param>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ExceptionEventArgs">
            <summary>
            Exception event arguments for exception event.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.MessageEventArgs">
            <summary>
            Message event arguments for message events.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.MessageEventArgs.Buffer">
            <summary>
            Gets sent or received buffer.
            </summary>
        </member>
        <member name="P:GTA.RealTime.SystemEx.NetEx.SocketsEx.MessageEventArgs.SentByServer">
            <summary>
            Indicates if event was fired by server磗 BeginSendTo() or BeginSendToAll().
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ServerSocketConnection">
            <summary>
            Server connection implementation.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.IServerSocketConnection">
            <summary>
            Server connection methods.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.IServerSocketConnection.BeginSendToAll(System.Byte[],System.Boolean)">
            <summary>
            Begin send data to all server connections.
            </summary>
            <param name="buffer">
            Data to be sent.
            </param>
            <param name="includeMe">
            Includes the current connection in send磗 loop
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.IServerSocketConnection.BeginSendTo(GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection,System.Byte[])">
            <summary>
            Begin send data to the connection.
            </summary>
            <param name="connection">
            The connection that the data will be sent.
            </param>
            <param name="buffer">
            Data to be sent.
            </param>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketService">
            <summary>
            Base class for ISocketServive. Use it overriding the virtual methods.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketService">
            <summary>
            Socket service methods.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketService.OnConnected(GTA.RealTime.SystemEx.NetEx.SocketsEx.ConnectionEventArgs)">
            <summary>
            Fired when connected.
            </summary>
            <param name="e">
            Information about the connection.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketService.OnReceived(GTA.RealTime.SystemEx.NetEx.SocketsEx.MessageEventArgs)">
            <summary>
            Fired when data arrives.
            </summary>
            <param name="e">
            Information about the Message.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketService.OnSent(GTA.RealTime.SystemEx.NetEx.SocketsEx.MessageEventArgs)">
            <summary>
            Fired when data is sent.
            </summary>
            <param name="e">
            Information about the Message.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketService.OnDisconnected(GTA.RealTime.SystemEx.NetEx.SocketsEx.ConnectionEventArgs)">
            <summary>
            Fired when disconnected.
            </summary>
            <param name="e">
            Information about the connection.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketService.OnException(GTA.RealTime.SystemEx.NetEx.SocketsEx.ExceptionEventArgs)">
            <summary>
            Fired when exception occurs.
            </summary>
            <param name="e">
            Information about the exception and connection.
            </param>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseCryptoService">
            <summary>
            Base class for ICryptoServive. Use it overriding the virtual methods.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ICryptoService">
            <summary>
            Crypto service methods.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ICryptoService.OnSymmetricAuthenticate(GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection,System.Security.Cryptography.RSACryptoServiceProvider@)">
            <summary>
            Fired when symmetric encryption is used.
            </summary>
            <param name="serverKey">
            The RSA provider used to encrypt symmetric IV and Key.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ICryptoService.OnSSLClientAuthenticate(GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection,System.String@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection@,System.Boolean@)">
            <summary>
            Fired when SSL encryption is used in client host.
            </summary>
            <param name="ServerName">
            The host name in certificate.
            </param>
            <param name="certs">
            The certification collection to be used (null if not using client certification).
            </param>
            <param name="checkRevocation">
            Indicates if the certificated must be checked for revocation.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ICryptoService.OnSSLClientValidateServerCertificate(System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="connection"></param>
            <param name="serverCertificate"></param>
            <param name="chain"></param>
            <param name="sslPolicyErrors"></param>
            <param name="acceptCertificate"></param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.ICryptoService.OnSSLServerAuthenticate(GTA.RealTime.SystemEx.NetEx.SocketsEx.ISocketConnection,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Boolean@,System.Boolean@)">
            <summary>
            Fired when SSL encryption is used in server host.
            </summary>
            <param name="certificate">
            The certificate to be used.
            </param>
            <param name="clientAuthenticate">
            Indicates if client connection will be authenticated (uses certificate).
            </param>
            <param name="checkRevocation">
            Indicates if the certificated must be checked for revocation.
            </param>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketListener">
            <summary>
            Server socket connector.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketListener.#ctor(GTA.RealTime.SystemEx.NetEx.SocketsEx.BaseSocketConnectionHost,System.String,System.Net.IPEndPoint,GTA.RealTime.SystemEx.NetEx.SocketsEx.EncryptType,GTA.RealTime.SystemEx.NetEx.SocketsEx.CompressionType,GTA.RealTime.SystemEx.NetEx.SocketsEx.ICryptoService,System.Byte,System.Byte)">
            <summary>
            Base SocketListener creator.
            </summary>
            <param name="host">
            Host.
            </param>
            <param name="localEndPoint">
            Local endpoint to be used.
            </param>
            <param name="encryptType">
            Encryption to be used.
            </param>
            <param name="compressionType">
            Compression to be used.
            </param>
            <param name="cryptoService">
            CryptoService. if null, will not be used.
            </param>
            <param name="backLog">
            Socket backlog queue number.
            </param>
            <param name="acceptThreads">
            Number of accept events to be used.
            </param>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketListener.BeginAcceptCallback(System.Object)">
            <summary>
            Accept callback!
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketServer">
            <summary>
            Server connection host.
            </summary>
        </member>
        <member name="M:GTA.RealTime.SystemEx.NetEx.SocketsEx.SocketServer.AddListener(System.String,System.Net.IPEndPoint)">
            <summary>
            Add the server connector (SocketListener).
            </summary>
            <param name="localEndPoint"></param>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ReconnectAttemptException">
            <summary>
            Reconnect attempted exception.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.BadDelimiterException">
            <summary>
            Bad Delimiter.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.MessageLengthException">
            <summary>
            Message length is greater than the maximum value.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SymmetricAuthenticationException">
            <summary>
            Symmetric authentication failure.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SSLAuthenticationException">
            <summary>
            SSL authentication failure.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ProxyAuthenticationException">
            <summary>
            Proxy authentication failure.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.HostType">
            <summary>
            Defines the host type.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.EncryptType">
            <summary>
            Defines the encrypt method used.
            </summary>
        </member>
        <member name="F:GTA.RealTime.SystemEx.NetEx.SocketsEx.EncryptType.etRijndael">
            <summary>
            AES算法
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.CompressionType">
            <summary>
            Defines the compression method used.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.DelimiterType">
            <summary>
            Defines message delimiter type.
            </summary>
        </member>
        <member name="F:GTA.RealTime.SystemEx.NetEx.SocketsEx.DelimiterType.dtMessageTailExcludeOnReceive">
            <summary>
            消息尾部除接收的时候
            </summary>
        </member>
        <member name="F:GTA.RealTime.SystemEx.NetEx.SocketsEx.DelimiterType.dtMessageTailIncludeOnReceive">
            <summary>
            消息尾部包括接收的时候
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.ProxyType">
            <summary>
            Defines the proxy host type.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SOCKS5AuthMode">
            <summary>
            Defines the SOCK5 authentication mode.
            </summary>
        </member>
        <member name="T:GTA.RealTime.SystemEx.NetEx.SocketsEx.SOCKS5Phase">
            <summary>
            Defines the SOCKS5 authentication phase
            </summary>
        </member>
    </members>
</doc>
